# Makefile.in needs to be processed by autoconf and acts as a thin layer above
# the BSD pmake build system used in elftoolchain.

srcdir = @srcdir@/current-trunk
abs_builddir = @abs_builddir@
prefix = @prefix@
host_alias = @host_alias@

ifeq ($(host_alias),)
# We're native-compiling.
BSDBUILDMAKEPARAM :=
BSDINSTALLMAKEPARAM :=
else
# We're cross-compiling.
# FIXME: We can't build the tools as we need libarchive (hence the MKTOOLS=no).
BSDBUILDMAKEPARAM := MKTOOLS=no CC=$(host_alias)-gcc LD=$(host_alias)-ld
BSDINSTALLMAKEPARAM := MKTOOLS=no
endif

BSDBUILDMAKEPARAM += MKTESTS=no MKDOC=no
BSDINSTALLMAKEPARAM += MKTESTS=no MKDOC=no

# Use the CFLAGS setting at time of configuring when defined, otherwise
# use hard default.
ifneq (@CFLAGS@,)
BSDBUILDMAKEPARAM += CFLAGS="@CFLAGS@"
BSDINSTALLMAKEPARAM += CFLAGS="@CFLAGS@"
else
BSDBUILDMAKEPARAM += CFLAGS="-O2 -g"
BSDINSTALLMAKEPARAM += CFLAGS="-O2 -g"
endif

all: elftoolchain

elftoolchain:
	cd $(srcdir) && pmake MAKEOBJDIR=$(abs_builddir) LIBC= LDFLAGS=-L$(abs_builddir) $(BSDBUILDMAKEPARAM)

install: elftoolchain
	mkdir -p $(prefix)/bin $(prefix)/include $(prefix)/lib
	mkdir -p $(prefix)/man/man1 $(prefix)/man/man3 $(prefix)/man/man5
	cd $(srcdir) && pmake MAKEOBJDIR=$(abs_builddir) BINOWN=`id -nu` BINGRP=`id -ng` MANOWN=`id -nu` MANGRP=`id -ng` BINDIR=$(prefix)/bin INCSDIR=$(prefix)/include LIBDIR=$(prefix)/lib MANDIR=$(prefix)/man DESTDIR= $(BSDINSTALLMAKEPARAM) install includes

clean:
	-rm $(abs_builddir)/*.{o,a,po,c,h}
	-rm $(abs_builddir)/{addr2line,ar,brandelf,c++filt,elfcopy,elfdump,findtextrel,mcs,nm,ranlib,readelf,size,strings,strip}

# Dummy check target to satisfy automake when this project is used as a
# subproject.
check:

.PHONY: all elftoolchain install clean check

