# GNUmakefile.in generated by automake 1.11.1 from GNUmakefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = libdwarf
DIST_COMMON = $(include_HEADERS) $(notrans_dist_man3_MANS) \
	$(srcdir)/GNUmakefile.am $(srcdir)/GNUmakefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(man3dir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libdwarf_la_DEPENDENCIES = ../libelf/libelf.la
am_libdwarf_la_OBJECTS = libdwarf_la-dwarf_abbrev.lo \
	libdwarf_la-dwarf_arange.lo libdwarf_la-dwarf_attr.lo \
	libdwarf_la-dwarf_attrval.lo libdwarf_la-dwarf_cu.lo \
	libdwarf_la-dwarf_dealloc.lo libdwarf_la-dwarf_die.lo \
	libdwarf_la-dwarf_dump.lo libdwarf_la-dwarf_errmsg.lo \
	libdwarf_la-dwarf_finish.lo libdwarf_la-dwarf_form.lo \
	libdwarf_la-dwarf_frame.lo libdwarf_la-dwarf_funcs.lo \
	libdwarf_la-dwarf_init.lo libdwarf_la-dwarf_lineno.lo \
	libdwarf_la-dwarf_loclist.lo libdwarf_la-dwarf_macinfo.lo \
	libdwarf_la-dwarf_pro_arange.lo libdwarf_la-dwarf_pro_attr.lo \
	libdwarf_la-dwarf_pro_die.lo libdwarf_la-dwarf_pro_expr.lo \
	libdwarf_la-dwarf_pro_finish.lo libdwarf_la-dwarf_pro_frame.lo \
	libdwarf_la-dwarf_pro_funcs.lo libdwarf_la-dwarf_pro_init.lo \
	libdwarf_la-dwarf_pro_lineno.lo \
	libdwarf_la-dwarf_pro_macinfo.lo \
	libdwarf_la-dwarf_pro_pubnames.lo \
	libdwarf_la-dwarf_pro_reloc.lo \
	libdwarf_la-dwarf_pro_sections.lo \
	libdwarf_la-dwarf_pro_types.lo libdwarf_la-dwarf_pro_vars.lo \
	libdwarf_la-dwarf_pro_weaks.lo libdwarf_la-dwarf_pubnames.lo \
	libdwarf_la-dwarf_pubtypes.lo libdwarf_la-dwarf_ranges.lo \
	libdwarf_la-dwarf_reloc.lo libdwarf_la-dwarf_sections.lo \
	libdwarf_la-dwarf_seterror.lo libdwarf_la-dwarf_str.lo \
	libdwarf_la-dwarf_types.lo libdwarf_la-dwarf_vars.lo \
	libdwarf_la-dwarf_weaks.lo libdwarf_la-libdwarf.lo \
	libdwarf_la-libdwarf_abbrev.lo libdwarf_la-libdwarf_arange.lo \
	libdwarf_la-libdwarf_attr.lo libdwarf_la-libdwarf_die.lo \
	libdwarf_la-libdwarf_error.lo \
	libdwarf_la-libdwarf_elf_access.lo \
	libdwarf_la-libdwarf_elf_init.lo libdwarf_la-libdwarf_frame.lo \
	libdwarf_la-libdwarf_info.lo libdwarf_la-libdwarf_init.lo \
	libdwarf_la-libdwarf_lineno.lo libdwarf_la-libdwarf_loc.lo \
	libdwarf_la-libdwarf_loclist.lo \
	libdwarf_la-libdwarf_macinfo.lo \
	libdwarf_la-libdwarf_nametbl.lo libdwarf_la-libdwarf_ranges.lo \
	libdwarf_la-libdwarf_reloc.lo libdwarf_la-libdwarf_rw.lo \
	libdwarf_la-libdwarf_sections.lo libdwarf_la-libdwarf_str.lo
libdwarf_la_OBJECTS = $(am_libdwarf_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libdwarf_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libdwarf_la_CFLAGS) \
	$(CFLAGS) $(libdwarf_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libdwarf_la_SOURCES)
DIST_SOURCES = $(libdwarf_la_SOURCES)
man3dir = $(mandir)/man3
NROFF = nroff
MANS = $(notrans_dist_man3_MANS) $(notrans_man3_MANS)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgconfigdir = @pkgconfigdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
GENSRCS = dwarf_pubnames.c dwarf_pubtypes.c dwarf_weaks.c \
	  dwarf_funcs.c dwarf_vars.c dwarf_types.c	  \
	  dwarf_pro_pubnames.c dwarf_pro_weaks.c	  \
	  dwarf_pro_funcs.c dwarf_pro_types.c		  \
	  dwarf_pro_vars.c

BUILT_SOURCES = ${GENSRCS}
lib_LTLIBRARIES = libdwarf.la
libdwarf_la_SOURCES = \
        dwarf_abbrev.c		\
	dwarf_arange.c 		\
	dwarf_attr.c		\
	dwarf_attrval.c		\
	dwarf_cu.c		\
	dwarf_dealloc.c		\
	dwarf_die.c		\
	dwarf_dump.c		\
	dwarf_errmsg.c		\
	dwarf_finish.c		\
	dwarf_form.c		\
	dwarf_frame.c		\
	dwarf_funcs.c		\
	dwarf_init.c		\
	dwarf_lineno.c		\
	dwarf_loclist.c		\
	dwarf_macinfo.c		\
	dwarf_pro_arange.c	\
	dwarf_pro_attr.c	\
	dwarf_pro_die.c		\
	dwarf_pro_expr.c	\
	dwarf_pro_finish.c	\
	dwarf_pro_frame.c	\
	dwarf_pro_funcs.c	\
	dwarf_pro_init.c	\
	dwarf_pro_lineno.c	\
	dwarf_pro_macinfo.c	\
	dwarf_pro_pubnames.c	\
	dwarf_pro_reloc.c	\
	dwarf_pro_sections.c	\
	dwarf_pro_types.c	\
	dwarf_pro_vars.c	\
	dwarf_pro_weaks.c	\
	dwarf_pubnames.c	\
	dwarf_pubtypes.c	\
	dwarf_ranges.c		\
	dwarf_reloc.c		\
	dwarf_sections.c	\
	dwarf_seterror.c	\
	dwarf_str.c		\
	dwarf_types.c		\
	dwarf_vars.c		\
	dwarf_weaks.c		\
	libdwarf.c		\
	libdwarf_abbrev.c	\
	libdwarf_arange.c	\
	libdwarf_attr.c		\
	libdwarf_die.c		\
	libdwarf_error.c	\
	libdwarf_elf_access.c	\
	libdwarf_elf_init.c	\
	libdwarf_frame.c	\
	libdwarf_info.c		\
	libdwarf_init.c		\
	libdwarf_lineno.c	\
	libdwarf_loc.c		\
	libdwarf_loclist.c	\
	libdwarf_macinfo.c	\
	libdwarf_nametbl.c	\
	libdwarf_ranges.c	\
	libdwarf_reloc.c	\
	libdwarf_rw.c		\
	libdwarf_sections.c	\
	libdwarf_str.c     

libdwarf_la_CFLAGS = -I../common -I${top_srcdir}/common -I${top_srcdir}/libelf
libdwarf_la_LIBADD = ../libelf/libelf.la
libdwarf_la_LDFLAGS = -version-info 3:0:0 -Wl,--version-script -Wl,${srcdir}/Version.map
include_HEADERS = dwarf.h libdwarf.h
CLEANFILES = ${GENSRCS}
notrans_dist_man3_MANS = dwarf.3                                         \
	dwarf_add_arange.3				\
	dwarf_add_AT_comp_dir.3				\
	dwarf_add_AT_const_value_string.3		\
	dwarf_add_AT_dataref.3				\
	dwarf_add_AT_flag.3				\
	dwarf_add_AT_location_expr.3			\
	dwarf_add_AT_name.3				\
	dwarf_add_AT_producer.3				\
	dwarf_add_AT_ref_address.3			\
	dwarf_add_AT_reference.3			\
	dwarf_add_AT_signed_const.3			\
	dwarf_add_AT_string.3				\
	dwarf_add_AT_targ_address.3			\
	dwarf_add_die_to_debug.3			\
	dwarf_add_directory_decl.3			\
	dwarf_add_expr_addr.3				\
	dwarf_add_expr_gen.3				\
	dwarf_add_fde_inst.3				\
	dwarf_add_file_decl.3				\
	dwarf_add_frame_cie.3				\
	dwarf_add_frame_fde.3				\
	dwarf_add_funcname.3				\
	dwarf_add_line_entry.3				\
	dwarf_add_pubname.3				\
	dwarf_add_typename.3				\
	dwarf_add_varname.3				\
	dwarf_add_weakname.3				\
	dwarf_attr.3					\
	dwarf_attrlist.3				\
	dwarf_attroffset.3				\
	dwarf_attrval_signed.3				\
	dwarf_child.3					\
	dwarf_dealloc.3					\
	dwarf_def_macro.3				\
	dwarf_die_abbrev_code.3				\
	dwarf_die_link.3				\
	dwarf_diename.3					\
	dwarf_dieoffset.3				\
	dwarf_end_macro_file.3				\
	dwarf_errmsg.3					\
	dwarf_errno.3					\
	dwarf_expand_frame_instructions.3		\
	dwarf_expr_current_offset.3			\
	dwarf_expr_into_block.3				\
	dwarf_fde_cfa_offset.3				\
	dwarf_find_macro_value_start.3			\
	dwarf_finish.3					\
	dwarf_formaddr.3				\
	dwarf_formblock.3				\
	dwarf_formexprloc.3				\
	dwarf_formflag.3				\
	dwarf_formref.3					\
	dwarf_formsig8.3				\
	dwarf_formstring.3				\
	dwarf_formudata.3				\
	dwarf_get_abbrev.3				\
	dwarf_get_abbrev_children_flag.3		\
	dwarf_get_abbrev_code.3				\
	dwarf_get_abbrev_entry.3			\
	dwarf_get_abbrev_tag.3				\
	dwarf_get_address_size.3			\
	dwarf_get_arange.3				\
	dwarf_get_arange_info.3				\
	dwarf_get_aranges.3				\
	dwarf_get_AT_name.3				\
	dwarf_get_cie_index.3				\
	dwarf_get_cie_info.3				\
	dwarf_get_cie_of_fde.3				\
	dwarf_get_cu_die_offset.3			\
	dwarf_get_die_infotypes_flag.3			\
	dwarf_get_elf.3					\
	dwarf_get_fde_at_pc.3				\
	dwarf_get_fde_info_for_all_regs.3		\
	dwarf_get_fde_info_for_all_regs3.3		\
	dwarf_get_fde_info_for_cfa_reg3.3		\
	dwarf_get_fde_info_for_reg.3			\
	dwarf_get_fde_info_for_reg3.3			\
	dwarf_get_fde_instr_bytes.3			\
	dwarf_get_fde_list.3				\
	dwarf_get_fde_n.3				\
	dwarf_get_fde_range.3				\
	dwarf_get_form_class.3				\
	dwarf_get_funcs.3				\
	dwarf_get_globals.3				\
	dwarf_get_loclist_entry.3			\
	dwarf_get_macro_details.3			\
	dwarf_get_pubtypes.3				\
	dwarf_get_ranges.3				\
	dwarf_get_relocation_info.3			\
	dwarf_get_relocation_info_count.3		\
	dwarf_get_section_bytes.3			\
	dwarf_get_section_max_offsets.3			\
	dwarf_get_str.3					\
	dwarf_get_types.3				\
	dwarf_get_vars.3				\
	dwarf_get_weaks.3				\
	dwarf_hasattr.3					\
	dwarf_hasform.3					\
	dwarf_highpc.3					\
	dwarf_init.3					\
	dwarf_lineno.3					\
	dwarf_lne_end_sequence.3			\
	dwarf_lne_set_address.3				\
	dwarf_loclist.3					\
	dwarf_loclist_from_expr.3			\
	dwarf_new_die.3					\
	dwarf_new_expr.3				\
	dwarf_new_fde.3					\
	dwarf_next_cu_header.3				\
	dwarf_next_types_section.3			\
	dwarf_object_init.3				\
	dwarf_producer_init.3				\
	dwarf_producer_set_isa.3			\
	dwarf_reset_section_bytes.3			\
	dwarf_seterrarg.3				\
	dwarf_set_frame_cfa_value.3			\
	dwarf_set_reloc_application.3			\
	dwarf_srcfiles.3				\
	dwarf_srclines.3				\
	dwarf_start_macro_file.3			\
	dwarf_tag.3					\
	dwarf_transform_to_disk_form.3			\
	dwarf_undef_macro.3				\
	dwarf_vendor_ext.3				\
	dwarf_whatattr.3

notrans_man3_MANS = \
	dwarf_add_AT_const_value_signedint.3 \
	dwarf_add_AT_const_value_unsignedint.3 \
	dwarf_add_AT_unsigned_const.3 \
	dwarf_add_AT_targ_address_b.3 \
	dwarf_add_arange_b.3	\
	dwarf_add_expr_addr_b.3	\
	dwarf_add_frame_fde_b.3	\
	dwarf_attrval_flag.3	\
	dwarf_attrval_string.3	\
	dwarf_attrval_unsigned.3 \
	dwarf_offdie.3			\
	dwarf_offdie_b.3		\
	dwarf_siblingof.3		\
	dwarf_siblingof_b.3		\
	dwarf_fde_cie_list_dealloc.3	\
	dwarf_funcs_dealloc.3		\
	dwarf_globals_dealloc.3		\
	dwarf_pubtypes_dealloc.3	\
	dwarf_types_dealloc.3		\
	dwarf_vars_dealloc.3		\
	dwarf_weaks_dealloc.3		\
	dwarf_ranges_dealloc.3		\
	dwarf_srclines_dealloc.3	\
	dwarf_elf_init.3		\
	dwarf_die_CU_offset.3	\
	dwarf_die_CU_offset_range.3 \
	dwarf_get_cu_die_offset_given_cu_header_offset.3 \
	dwarf_get_cu_die_offset_given_cu_header_offset_b.3 \
	dwarf_object_finish.3	\
	dwarf_global_formref.3		\
	dwarf_formsdata.3	\
	dwarf_get_ACCESS_name.3	\
	dwarf_get_ATE_name.3	\
	dwarf_get_CC_name.3	\
	dwarf_get_CFA_name.3	\
	dwarf_get_CHILDREN_name.3 \
	dwarf_get_DS_name.3	\
	dwarf_get_DSC_name.3	\
	dwarf_get_EH_name.3	\
	dwarf_get_END_name.3	\
	dwarf_get_FORM_name.3	\
	dwarf_get_ID_name.3	\
	dwarf_get_INL_name.3	\
	dwarf_get_LANG_name.3	\
	dwarf_get_LNE_name.3	\
	dwarf_get_LNS_name.3	\
	dwarf_get_MACINFO_name.3 \
	dwarf_get_OP_name.3	\
	dwarf_get_ORD_name.3	\
	dwarf_get_TAG_name.3	\
	dwarf_get_VIRTUALITY_name.3 \
	dwarf_get_VIS_name.3	\
	dwarf_get_arange_cu_header_offset.3 \
	dwarf_get_fde_list_eh.3	\
	dwarf_func_die_offset.3	\
	dwarf_func_cu_offset.3	\
	dwarf_func_name_offsets.3 \
	dwarf_funcname.3	\
	dwarf_global_die_offset.3 \
	dwarf_global_cu_offset.3 \
	dwarf_global_name_offsets.3 \
	dwarf_globname.3	\
	dwarf_pubtype_die_offset.3 \
	dwarf_pubtype_cu_offset.3 \
	dwarf_pubtype_name_offsets.3 \
	dwarf_pubtypename.3	\
	dwarf_get_ranges_a.3	\
	dwarf_get_section_max_offsets_b.3 \
	dwarf_type_die_offset.3	\
	dwarf_type_cu_offset.3	\
	dwarf_type_name_offsets.3 \
	dwarf_typename.3	\
	dwarf_var_die_offset.3	\
	dwarf_var_cu_offset.3	\
	dwarf_var_name_offsets.3 \
	dwarf_varname.3		\
	dwarf_weak_die_offset.3	\
	dwarf_weak_cu_offset.3	\
	dwarf_weak_name_offsets.3 \
	dwarf_weakname.3	\
	dwarf_whatform.3		\
	dwarf_whatform_direct.3		\
	dwarf_arrayorder.3		\
	dwarf_bitoffset.3		\
	dwarf_bitsize.3			\
	dwarf_bytesize.3		\
	dwarf_highpc_b.3		\
	dwarf_lowpc.3			\
	dwarf_srclang.3			\
	dwarf_lineaddr.3		\
	dwarf_linebeginstatement.3	\
	dwarf_lineblock.3		\
	dwarf_lineendsequence.3		\
	dwarf_lineoff.3			\
	dwarf_linesrc.3			\
	dwarf_line_srcfileno.3		\
	dwarf_loclist_n.3		\
	dwarf_loclist_from_expr_a.3 \
	dwarf_loclist_from_expr_b.3 \
	dwarf_next_cu_header_b.3	\
	dwarf_next_cu_header_c.3	\
	dwarf_producer_init_b.3	\
	dwarf_seterrhand.3	\
	dwarf_set_frame_rule_initial_value.3 \
	dwarf_set_frame_rule_table_size.3 \
	dwarf_set_frame_same_value.3 \
	dwarf_set_frame_undefined_value.3

SUFFIXES = .m4
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .m4 .c .lo .o .obj
$(srcdir)/GNUmakefile.in:  $(srcdir)/GNUmakefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign libdwarf/GNUmakefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign libdwarf/GNUmakefile
.PRECIOUS: GNUmakefile
GNUmakefile: $(srcdir)/GNUmakefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libdwarf.la: $(libdwarf_la_OBJECTS) $(libdwarf_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libdwarf_la_LINK) -rpath $(libdir) $(libdwarf_la_OBJECTS) $(libdwarf_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_abbrev.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_arange.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_attr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_attrval.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_cu.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_dealloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_die.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_dump.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_errmsg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_finish.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_form.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_frame.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_funcs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_lineno.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_loclist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_macinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_arange.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_attr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_die.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_expr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_finish.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_frame.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_funcs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_lineno.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_macinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_pubnames.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_reloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_sections.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_types.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_vars.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pro_weaks.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pubnames.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_pubtypes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_ranges.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_reloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_sections.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_seterror.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_str.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_types.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_vars.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-dwarf_weaks.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_abbrev.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_arange.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_attr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_die.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_elf_access.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_elf_init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_frame.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_info.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_lineno.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_loc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_loclist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_macinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_nametbl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_ranges.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_reloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_rw.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_sections.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdwarf_la-libdwarf_str.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libdwarf_la-dwarf_abbrev.lo: dwarf_abbrev.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_abbrev.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_abbrev.Tpo -c -o libdwarf_la-dwarf_abbrev.lo `test -f 'dwarf_abbrev.c' || echo '$(srcdir)/'`dwarf_abbrev.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_abbrev.Tpo $(DEPDIR)/libdwarf_la-dwarf_abbrev.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_abbrev.c' object='libdwarf_la-dwarf_abbrev.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_abbrev.lo `test -f 'dwarf_abbrev.c' || echo '$(srcdir)/'`dwarf_abbrev.c

libdwarf_la-dwarf_arange.lo: dwarf_arange.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_arange.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_arange.Tpo -c -o libdwarf_la-dwarf_arange.lo `test -f 'dwarf_arange.c' || echo '$(srcdir)/'`dwarf_arange.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_arange.Tpo $(DEPDIR)/libdwarf_la-dwarf_arange.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_arange.c' object='libdwarf_la-dwarf_arange.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_arange.lo `test -f 'dwarf_arange.c' || echo '$(srcdir)/'`dwarf_arange.c

libdwarf_la-dwarf_attr.lo: dwarf_attr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_attr.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_attr.Tpo -c -o libdwarf_la-dwarf_attr.lo `test -f 'dwarf_attr.c' || echo '$(srcdir)/'`dwarf_attr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_attr.Tpo $(DEPDIR)/libdwarf_la-dwarf_attr.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_attr.c' object='libdwarf_la-dwarf_attr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_attr.lo `test -f 'dwarf_attr.c' || echo '$(srcdir)/'`dwarf_attr.c

libdwarf_la-dwarf_attrval.lo: dwarf_attrval.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_attrval.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_attrval.Tpo -c -o libdwarf_la-dwarf_attrval.lo `test -f 'dwarf_attrval.c' || echo '$(srcdir)/'`dwarf_attrval.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_attrval.Tpo $(DEPDIR)/libdwarf_la-dwarf_attrval.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_attrval.c' object='libdwarf_la-dwarf_attrval.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_attrval.lo `test -f 'dwarf_attrval.c' || echo '$(srcdir)/'`dwarf_attrval.c

libdwarf_la-dwarf_cu.lo: dwarf_cu.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_cu.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_cu.Tpo -c -o libdwarf_la-dwarf_cu.lo `test -f 'dwarf_cu.c' || echo '$(srcdir)/'`dwarf_cu.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_cu.Tpo $(DEPDIR)/libdwarf_la-dwarf_cu.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_cu.c' object='libdwarf_la-dwarf_cu.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_cu.lo `test -f 'dwarf_cu.c' || echo '$(srcdir)/'`dwarf_cu.c

libdwarf_la-dwarf_dealloc.lo: dwarf_dealloc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_dealloc.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_dealloc.Tpo -c -o libdwarf_la-dwarf_dealloc.lo `test -f 'dwarf_dealloc.c' || echo '$(srcdir)/'`dwarf_dealloc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_dealloc.Tpo $(DEPDIR)/libdwarf_la-dwarf_dealloc.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_dealloc.c' object='libdwarf_la-dwarf_dealloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_dealloc.lo `test -f 'dwarf_dealloc.c' || echo '$(srcdir)/'`dwarf_dealloc.c

libdwarf_la-dwarf_die.lo: dwarf_die.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_die.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_die.Tpo -c -o libdwarf_la-dwarf_die.lo `test -f 'dwarf_die.c' || echo '$(srcdir)/'`dwarf_die.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_die.Tpo $(DEPDIR)/libdwarf_la-dwarf_die.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_die.c' object='libdwarf_la-dwarf_die.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_die.lo `test -f 'dwarf_die.c' || echo '$(srcdir)/'`dwarf_die.c

libdwarf_la-dwarf_dump.lo: dwarf_dump.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_dump.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_dump.Tpo -c -o libdwarf_la-dwarf_dump.lo `test -f 'dwarf_dump.c' || echo '$(srcdir)/'`dwarf_dump.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_dump.Tpo $(DEPDIR)/libdwarf_la-dwarf_dump.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_dump.c' object='libdwarf_la-dwarf_dump.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_dump.lo `test -f 'dwarf_dump.c' || echo '$(srcdir)/'`dwarf_dump.c

libdwarf_la-dwarf_errmsg.lo: dwarf_errmsg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_errmsg.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_errmsg.Tpo -c -o libdwarf_la-dwarf_errmsg.lo `test -f 'dwarf_errmsg.c' || echo '$(srcdir)/'`dwarf_errmsg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_errmsg.Tpo $(DEPDIR)/libdwarf_la-dwarf_errmsg.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_errmsg.c' object='libdwarf_la-dwarf_errmsg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_errmsg.lo `test -f 'dwarf_errmsg.c' || echo '$(srcdir)/'`dwarf_errmsg.c

libdwarf_la-dwarf_finish.lo: dwarf_finish.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_finish.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_finish.Tpo -c -o libdwarf_la-dwarf_finish.lo `test -f 'dwarf_finish.c' || echo '$(srcdir)/'`dwarf_finish.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_finish.Tpo $(DEPDIR)/libdwarf_la-dwarf_finish.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_finish.c' object='libdwarf_la-dwarf_finish.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_finish.lo `test -f 'dwarf_finish.c' || echo '$(srcdir)/'`dwarf_finish.c

libdwarf_la-dwarf_form.lo: dwarf_form.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_form.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_form.Tpo -c -o libdwarf_la-dwarf_form.lo `test -f 'dwarf_form.c' || echo '$(srcdir)/'`dwarf_form.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_form.Tpo $(DEPDIR)/libdwarf_la-dwarf_form.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_form.c' object='libdwarf_la-dwarf_form.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_form.lo `test -f 'dwarf_form.c' || echo '$(srcdir)/'`dwarf_form.c

libdwarf_la-dwarf_frame.lo: dwarf_frame.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_frame.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_frame.Tpo -c -o libdwarf_la-dwarf_frame.lo `test -f 'dwarf_frame.c' || echo '$(srcdir)/'`dwarf_frame.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_frame.Tpo $(DEPDIR)/libdwarf_la-dwarf_frame.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_frame.c' object='libdwarf_la-dwarf_frame.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_frame.lo `test -f 'dwarf_frame.c' || echo '$(srcdir)/'`dwarf_frame.c

libdwarf_la-dwarf_funcs.lo: dwarf_funcs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_funcs.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_funcs.Tpo -c -o libdwarf_la-dwarf_funcs.lo `test -f 'dwarf_funcs.c' || echo '$(srcdir)/'`dwarf_funcs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_funcs.Tpo $(DEPDIR)/libdwarf_la-dwarf_funcs.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_funcs.c' object='libdwarf_la-dwarf_funcs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_funcs.lo `test -f 'dwarf_funcs.c' || echo '$(srcdir)/'`dwarf_funcs.c

libdwarf_la-dwarf_init.lo: dwarf_init.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_init.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_init.Tpo -c -o libdwarf_la-dwarf_init.lo `test -f 'dwarf_init.c' || echo '$(srcdir)/'`dwarf_init.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_init.Tpo $(DEPDIR)/libdwarf_la-dwarf_init.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_init.c' object='libdwarf_la-dwarf_init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_init.lo `test -f 'dwarf_init.c' || echo '$(srcdir)/'`dwarf_init.c

libdwarf_la-dwarf_lineno.lo: dwarf_lineno.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_lineno.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_lineno.Tpo -c -o libdwarf_la-dwarf_lineno.lo `test -f 'dwarf_lineno.c' || echo '$(srcdir)/'`dwarf_lineno.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_lineno.Tpo $(DEPDIR)/libdwarf_la-dwarf_lineno.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_lineno.c' object='libdwarf_la-dwarf_lineno.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_lineno.lo `test -f 'dwarf_lineno.c' || echo '$(srcdir)/'`dwarf_lineno.c

libdwarf_la-dwarf_loclist.lo: dwarf_loclist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_loclist.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_loclist.Tpo -c -o libdwarf_la-dwarf_loclist.lo `test -f 'dwarf_loclist.c' || echo '$(srcdir)/'`dwarf_loclist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_loclist.Tpo $(DEPDIR)/libdwarf_la-dwarf_loclist.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_loclist.c' object='libdwarf_la-dwarf_loclist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_loclist.lo `test -f 'dwarf_loclist.c' || echo '$(srcdir)/'`dwarf_loclist.c

libdwarf_la-dwarf_macinfo.lo: dwarf_macinfo.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_macinfo.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_macinfo.Tpo -c -o libdwarf_la-dwarf_macinfo.lo `test -f 'dwarf_macinfo.c' || echo '$(srcdir)/'`dwarf_macinfo.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_macinfo.Tpo $(DEPDIR)/libdwarf_la-dwarf_macinfo.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_macinfo.c' object='libdwarf_la-dwarf_macinfo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_macinfo.lo `test -f 'dwarf_macinfo.c' || echo '$(srcdir)/'`dwarf_macinfo.c

libdwarf_la-dwarf_pro_arange.lo: dwarf_pro_arange.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_arange.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_arange.Tpo -c -o libdwarf_la-dwarf_pro_arange.lo `test -f 'dwarf_pro_arange.c' || echo '$(srcdir)/'`dwarf_pro_arange.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_arange.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_arange.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_arange.c' object='libdwarf_la-dwarf_pro_arange.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_arange.lo `test -f 'dwarf_pro_arange.c' || echo '$(srcdir)/'`dwarf_pro_arange.c

libdwarf_la-dwarf_pro_attr.lo: dwarf_pro_attr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_attr.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_attr.Tpo -c -o libdwarf_la-dwarf_pro_attr.lo `test -f 'dwarf_pro_attr.c' || echo '$(srcdir)/'`dwarf_pro_attr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_attr.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_attr.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_attr.c' object='libdwarf_la-dwarf_pro_attr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_attr.lo `test -f 'dwarf_pro_attr.c' || echo '$(srcdir)/'`dwarf_pro_attr.c

libdwarf_la-dwarf_pro_die.lo: dwarf_pro_die.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_die.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_die.Tpo -c -o libdwarf_la-dwarf_pro_die.lo `test -f 'dwarf_pro_die.c' || echo '$(srcdir)/'`dwarf_pro_die.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_die.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_die.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_die.c' object='libdwarf_la-dwarf_pro_die.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_die.lo `test -f 'dwarf_pro_die.c' || echo '$(srcdir)/'`dwarf_pro_die.c

libdwarf_la-dwarf_pro_expr.lo: dwarf_pro_expr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_expr.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_expr.Tpo -c -o libdwarf_la-dwarf_pro_expr.lo `test -f 'dwarf_pro_expr.c' || echo '$(srcdir)/'`dwarf_pro_expr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_expr.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_expr.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_expr.c' object='libdwarf_la-dwarf_pro_expr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_expr.lo `test -f 'dwarf_pro_expr.c' || echo '$(srcdir)/'`dwarf_pro_expr.c

libdwarf_la-dwarf_pro_finish.lo: dwarf_pro_finish.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_finish.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_finish.Tpo -c -o libdwarf_la-dwarf_pro_finish.lo `test -f 'dwarf_pro_finish.c' || echo '$(srcdir)/'`dwarf_pro_finish.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_finish.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_finish.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_finish.c' object='libdwarf_la-dwarf_pro_finish.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_finish.lo `test -f 'dwarf_pro_finish.c' || echo '$(srcdir)/'`dwarf_pro_finish.c

libdwarf_la-dwarf_pro_frame.lo: dwarf_pro_frame.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_frame.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_frame.Tpo -c -o libdwarf_la-dwarf_pro_frame.lo `test -f 'dwarf_pro_frame.c' || echo '$(srcdir)/'`dwarf_pro_frame.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_frame.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_frame.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_frame.c' object='libdwarf_la-dwarf_pro_frame.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_frame.lo `test -f 'dwarf_pro_frame.c' || echo '$(srcdir)/'`dwarf_pro_frame.c

libdwarf_la-dwarf_pro_funcs.lo: dwarf_pro_funcs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_funcs.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_funcs.Tpo -c -o libdwarf_la-dwarf_pro_funcs.lo `test -f 'dwarf_pro_funcs.c' || echo '$(srcdir)/'`dwarf_pro_funcs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_funcs.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_funcs.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_funcs.c' object='libdwarf_la-dwarf_pro_funcs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_funcs.lo `test -f 'dwarf_pro_funcs.c' || echo '$(srcdir)/'`dwarf_pro_funcs.c

libdwarf_la-dwarf_pro_init.lo: dwarf_pro_init.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_init.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_init.Tpo -c -o libdwarf_la-dwarf_pro_init.lo `test -f 'dwarf_pro_init.c' || echo '$(srcdir)/'`dwarf_pro_init.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_init.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_init.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_init.c' object='libdwarf_la-dwarf_pro_init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_init.lo `test -f 'dwarf_pro_init.c' || echo '$(srcdir)/'`dwarf_pro_init.c

libdwarf_la-dwarf_pro_lineno.lo: dwarf_pro_lineno.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_lineno.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_lineno.Tpo -c -o libdwarf_la-dwarf_pro_lineno.lo `test -f 'dwarf_pro_lineno.c' || echo '$(srcdir)/'`dwarf_pro_lineno.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_lineno.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_lineno.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_lineno.c' object='libdwarf_la-dwarf_pro_lineno.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_lineno.lo `test -f 'dwarf_pro_lineno.c' || echo '$(srcdir)/'`dwarf_pro_lineno.c

libdwarf_la-dwarf_pro_macinfo.lo: dwarf_pro_macinfo.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_macinfo.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_macinfo.Tpo -c -o libdwarf_la-dwarf_pro_macinfo.lo `test -f 'dwarf_pro_macinfo.c' || echo '$(srcdir)/'`dwarf_pro_macinfo.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_macinfo.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_macinfo.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_macinfo.c' object='libdwarf_la-dwarf_pro_macinfo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_macinfo.lo `test -f 'dwarf_pro_macinfo.c' || echo '$(srcdir)/'`dwarf_pro_macinfo.c

libdwarf_la-dwarf_pro_pubnames.lo: dwarf_pro_pubnames.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_pubnames.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_pubnames.Tpo -c -o libdwarf_la-dwarf_pro_pubnames.lo `test -f 'dwarf_pro_pubnames.c' || echo '$(srcdir)/'`dwarf_pro_pubnames.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_pubnames.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_pubnames.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_pubnames.c' object='libdwarf_la-dwarf_pro_pubnames.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_pubnames.lo `test -f 'dwarf_pro_pubnames.c' || echo '$(srcdir)/'`dwarf_pro_pubnames.c

libdwarf_la-dwarf_pro_reloc.lo: dwarf_pro_reloc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_reloc.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_reloc.Tpo -c -o libdwarf_la-dwarf_pro_reloc.lo `test -f 'dwarf_pro_reloc.c' || echo '$(srcdir)/'`dwarf_pro_reloc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_reloc.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_reloc.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_reloc.c' object='libdwarf_la-dwarf_pro_reloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_reloc.lo `test -f 'dwarf_pro_reloc.c' || echo '$(srcdir)/'`dwarf_pro_reloc.c

libdwarf_la-dwarf_pro_sections.lo: dwarf_pro_sections.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_sections.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_sections.Tpo -c -o libdwarf_la-dwarf_pro_sections.lo `test -f 'dwarf_pro_sections.c' || echo '$(srcdir)/'`dwarf_pro_sections.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_sections.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_sections.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_sections.c' object='libdwarf_la-dwarf_pro_sections.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_sections.lo `test -f 'dwarf_pro_sections.c' || echo '$(srcdir)/'`dwarf_pro_sections.c

libdwarf_la-dwarf_pro_types.lo: dwarf_pro_types.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_types.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_types.Tpo -c -o libdwarf_la-dwarf_pro_types.lo `test -f 'dwarf_pro_types.c' || echo '$(srcdir)/'`dwarf_pro_types.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_types.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_types.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_types.c' object='libdwarf_la-dwarf_pro_types.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_types.lo `test -f 'dwarf_pro_types.c' || echo '$(srcdir)/'`dwarf_pro_types.c

libdwarf_la-dwarf_pro_vars.lo: dwarf_pro_vars.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_vars.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_vars.Tpo -c -o libdwarf_la-dwarf_pro_vars.lo `test -f 'dwarf_pro_vars.c' || echo '$(srcdir)/'`dwarf_pro_vars.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_vars.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_vars.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_vars.c' object='libdwarf_la-dwarf_pro_vars.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_vars.lo `test -f 'dwarf_pro_vars.c' || echo '$(srcdir)/'`dwarf_pro_vars.c

libdwarf_la-dwarf_pro_weaks.lo: dwarf_pro_weaks.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pro_weaks.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pro_weaks.Tpo -c -o libdwarf_la-dwarf_pro_weaks.lo `test -f 'dwarf_pro_weaks.c' || echo '$(srcdir)/'`dwarf_pro_weaks.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pro_weaks.Tpo $(DEPDIR)/libdwarf_la-dwarf_pro_weaks.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pro_weaks.c' object='libdwarf_la-dwarf_pro_weaks.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pro_weaks.lo `test -f 'dwarf_pro_weaks.c' || echo '$(srcdir)/'`dwarf_pro_weaks.c

libdwarf_la-dwarf_pubnames.lo: dwarf_pubnames.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pubnames.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pubnames.Tpo -c -o libdwarf_la-dwarf_pubnames.lo `test -f 'dwarf_pubnames.c' || echo '$(srcdir)/'`dwarf_pubnames.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pubnames.Tpo $(DEPDIR)/libdwarf_la-dwarf_pubnames.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pubnames.c' object='libdwarf_la-dwarf_pubnames.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pubnames.lo `test -f 'dwarf_pubnames.c' || echo '$(srcdir)/'`dwarf_pubnames.c

libdwarf_la-dwarf_pubtypes.lo: dwarf_pubtypes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_pubtypes.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_pubtypes.Tpo -c -o libdwarf_la-dwarf_pubtypes.lo `test -f 'dwarf_pubtypes.c' || echo '$(srcdir)/'`dwarf_pubtypes.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_pubtypes.Tpo $(DEPDIR)/libdwarf_la-dwarf_pubtypes.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_pubtypes.c' object='libdwarf_la-dwarf_pubtypes.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_pubtypes.lo `test -f 'dwarf_pubtypes.c' || echo '$(srcdir)/'`dwarf_pubtypes.c

libdwarf_la-dwarf_ranges.lo: dwarf_ranges.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_ranges.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_ranges.Tpo -c -o libdwarf_la-dwarf_ranges.lo `test -f 'dwarf_ranges.c' || echo '$(srcdir)/'`dwarf_ranges.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_ranges.Tpo $(DEPDIR)/libdwarf_la-dwarf_ranges.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_ranges.c' object='libdwarf_la-dwarf_ranges.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_ranges.lo `test -f 'dwarf_ranges.c' || echo '$(srcdir)/'`dwarf_ranges.c

libdwarf_la-dwarf_reloc.lo: dwarf_reloc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_reloc.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_reloc.Tpo -c -o libdwarf_la-dwarf_reloc.lo `test -f 'dwarf_reloc.c' || echo '$(srcdir)/'`dwarf_reloc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_reloc.Tpo $(DEPDIR)/libdwarf_la-dwarf_reloc.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_reloc.c' object='libdwarf_la-dwarf_reloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_reloc.lo `test -f 'dwarf_reloc.c' || echo '$(srcdir)/'`dwarf_reloc.c

libdwarf_la-dwarf_sections.lo: dwarf_sections.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_sections.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_sections.Tpo -c -o libdwarf_la-dwarf_sections.lo `test -f 'dwarf_sections.c' || echo '$(srcdir)/'`dwarf_sections.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_sections.Tpo $(DEPDIR)/libdwarf_la-dwarf_sections.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_sections.c' object='libdwarf_la-dwarf_sections.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_sections.lo `test -f 'dwarf_sections.c' || echo '$(srcdir)/'`dwarf_sections.c

libdwarf_la-dwarf_seterror.lo: dwarf_seterror.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_seterror.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_seterror.Tpo -c -o libdwarf_la-dwarf_seterror.lo `test -f 'dwarf_seterror.c' || echo '$(srcdir)/'`dwarf_seterror.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_seterror.Tpo $(DEPDIR)/libdwarf_la-dwarf_seterror.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_seterror.c' object='libdwarf_la-dwarf_seterror.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_seterror.lo `test -f 'dwarf_seterror.c' || echo '$(srcdir)/'`dwarf_seterror.c

libdwarf_la-dwarf_str.lo: dwarf_str.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_str.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_str.Tpo -c -o libdwarf_la-dwarf_str.lo `test -f 'dwarf_str.c' || echo '$(srcdir)/'`dwarf_str.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_str.Tpo $(DEPDIR)/libdwarf_la-dwarf_str.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_str.c' object='libdwarf_la-dwarf_str.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_str.lo `test -f 'dwarf_str.c' || echo '$(srcdir)/'`dwarf_str.c

libdwarf_la-dwarf_types.lo: dwarf_types.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_types.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_types.Tpo -c -o libdwarf_la-dwarf_types.lo `test -f 'dwarf_types.c' || echo '$(srcdir)/'`dwarf_types.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_types.Tpo $(DEPDIR)/libdwarf_la-dwarf_types.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_types.c' object='libdwarf_la-dwarf_types.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_types.lo `test -f 'dwarf_types.c' || echo '$(srcdir)/'`dwarf_types.c

libdwarf_la-dwarf_vars.lo: dwarf_vars.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_vars.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_vars.Tpo -c -o libdwarf_la-dwarf_vars.lo `test -f 'dwarf_vars.c' || echo '$(srcdir)/'`dwarf_vars.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_vars.Tpo $(DEPDIR)/libdwarf_la-dwarf_vars.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_vars.c' object='libdwarf_la-dwarf_vars.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_vars.lo `test -f 'dwarf_vars.c' || echo '$(srcdir)/'`dwarf_vars.c

libdwarf_la-dwarf_weaks.lo: dwarf_weaks.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-dwarf_weaks.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-dwarf_weaks.Tpo -c -o libdwarf_la-dwarf_weaks.lo `test -f 'dwarf_weaks.c' || echo '$(srcdir)/'`dwarf_weaks.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-dwarf_weaks.Tpo $(DEPDIR)/libdwarf_la-dwarf_weaks.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dwarf_weaks.c' object='libdwarf_la-dwarf_weaks.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-dwarf_weaks.lo `test -f 'dwarf_weaks.c' || echo '$(srcdir)/'`dwarf_weaks.c

libdwarf_la-libdwarf.lo: libdwarf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf.Tpo -c -o libdwarf_la-libdwarf.lo `test -f 'libdwarf.c' || echo '$(srcdir)/'`libdwarf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf.Tpo $(DEPDIR)/libdwarf_la-libdwarf.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf.c' object='libdwarf_la-libdwarf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf.lo `test -f 'libdwarf.c' || echo '$(srcdir)/'`libdwarf.c

libdwarf_la-libdwarf_abbrev.lo: libdwarf_abbrev.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_abbrev.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_abbrev.Tpo -c -o libdwarf_la-libdwarf_abbrev.lo `test -f 'libdwarf_abbrev.c' || echo '$(srcdir)/'`libdwarf_abbrev.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_abbrev.Tpo $(DEPDIR)/libdwarf_la-libdwarf_abbrev.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_abbrev.c' object='libdwarf_la-libdwarf_abbrev.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_abbrev.lo `test -f 'libdwarf_abbrev.c' || echo '$(srcdir)/'`libdwarf_abbrev.c

libdwarf_la-libdwarf_arange.lo: libdwarf_arange.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_arange.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_arange.Tpo -c -o libdwarf_la-libdwarf_arange.lo `test -f 'libdwarf_arange.c' || echo '$(srcdir)/'`libdwarf_arange.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_arange.Tpo $(DEPDIR)/libdwarf_la-libdwarf_arange.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_arange.c' object='libdwarf_la-libdwarf_arange.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_arange.lo `test -f 'libdwarf_arange.c' || echo '$(srcdir)/'`libdwarf_arange.c

libdwarf_la-libdwarf_attr.lo: libdwarf_attr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_attr.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_attr.Tpo -c -o libdwarf_la-libdwarf_attr.lo `test -f 'libdwarf_attr.c' || echo '$(srcdir)/'`libdwarf_attr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_attr.Tpo $(DEPDIR)/libdwarf_la-libdwarf_attr.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_attr.c' object='libdwarf_la-libdwarf_attr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_attr.lo `test -f 'libdwarf_attr.c' || echo '$(srcdir)/'`libdwarf_attr.c

libdwarf_la-libdwarf_die.lo: libdwarf_die.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_die.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_die.Tpo -c -o libdwarf_la-libdwarf_die.lo `test -f 'libdwarf_die.c' || echo '$(srcdir)/'`libdwarf_die.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_die.Tpo $(DEPDIR)/libdwarf_la-libdwarf_die.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_die.c' object='libdwarf_la-libdwarf_die.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_die.lo `test -f 'libdwarf_die.c' || echo '$(srcdir)/'`libdwarf_die.c

libdwarf_la-libdwarf_error.lo: libdwarf_error.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_error.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_error.Tpo -c -o libdwarf_la-libdwarf_error.lo `test -f 'libdwarf_error.c' || echo '$(srcdir)/'`libdwarf_error.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_error.Tpo $(DEPDIR)/libdwarf_la-libdwarf_error.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_error.c' object='libdwarf_la-libdwarf_error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_error.lo `test -f 'libdwarf_error.c' || echo '$(srcdir)/'`libdwarf_error.c

libdwarf_la-libdwarf_elf_access.lo: libdwarf_elf_access.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_elf_access.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_elf_access.Tpo -c -o libdwarf_la-libdwarf_elf_access.lo `test -f 'libdwarf_elf_access.c' || echo '$(srcdir)/'`libdwarf_elf_access.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_elf_access.Tpo $(DEPDIR)/libdwarf_la-libdwarf_elf_access.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_elf_access.c' object='libdwarf_la-libdwarf_elf_access.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_elf_access.lo `test -f 'libdwarf_elf_access.c' || echo '$(srcdir)/'`libdwarf_elf_access.c

libdwarf_la-libdwarf_elf_init.lo: libdwarf_elf_init.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_elf_init.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_elf_init.Tpo -c -o libdwarf_la-libdwarf_elf_init.lo `test -f 'libdwarf_elf_init.c' || echo '$(srcdir)/'`libdwarf_elf_init.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_elf_init.Tpo $(DEPDIR)/libdwarf_la-libdwarf_elf_init.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_elf_init.c' object='libdwarf_la-libdwarf_elf_init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_elf_init.lo `test -f 'libdwarf_elf_init.c' || echo '$(srcdir)/'`libdwarf_elf_init.c

libdwarf_la-libdwarf_frame.lo: libdwarf_frame.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_frame.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_frame.Tpo -c -o libdwarf_la-libdwarf_frame.lo `test -f 'libdwarf_frame.c' || echo '$(srcdir)/'`libdwarf_frame.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_frame.Tpo $(DEPDIR)/libdwarf_la-libdwarf_frame.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_frame.c' object='libdwarf_la-libdwarf_frame.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_frame.lo `test -f 'libdwarf_frame.c' || echo '$(srcdir)/'`libdwarf_frame.c

libdwarf_la-libdwarf_info.lo: libdwarf_info.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_info.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_info.Tpo -c -o libdwarf_la-libdwarf_info.lo `test -f 'libdwarf_info.c' || echo '$(srcdir)/'`libdwarf_info.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_info.Tpo $(DEPDIR)/libdwarf_la-libdwarf_info.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_info.c' object='libdwarf_la-libdwarf_info.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_info.lo `test -f 'libdwarf_info.c' || echo '$(srcdir)/'`libdwarf_info.c

libdwarf_la-libdwarf_init.lo: libdwarf_init.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_init.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_init.Tpo -c -o libdwarf_la-libdwarf_init.lo `test -f 'libdwarf_init.c' || echo '$(srcdir)/'`libdwarf_init.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_init.Tpo $(DEPDIR)/libdwarf_la-libdwarf_init.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_init.c' object='libdwarf_la-libdwarf_init.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_init.lo `test -f 'libdwarf_init.c' || echo '$(srcdir)/'`libdwarf_init.c

libdwarf_la-libdwarf_lineno.lo: libdwarf_lineno.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_lineno.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_lineno.Tpo -c -o libdwarf_la-libdwarf_lineno.lo `test -f 'libdwarf_lineno.c' || echo '$(srcdir)/'`libdwarf_lineno.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_lineno.Tpo $(DEPDIR)/libdwarf_la-libdwarf_lineno.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_lineno.c' object='libdwarf_la-libdwarf_lineno.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_lineno.lo `test -f 'libdwarf_lineno.c' || echo '$(srcdir)/'`libdwarf_lineno.c

libdwarf_la-libdwarf_loc.lo: libdwarf_loc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_loc.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_loc.Tpo -c -o libdwarf_la-libdwarf_loc.lo `test -f 'libdwarf_loc.c' || echo '$(srcdir)/'`libdwarf_loc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_loc.Tpo $(DEPDIR)/libdwarf_la-libdwarf_loc.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_loc.c' object='libdwarf_la-libdwarf_loc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_loc.lo `test -f 'libdwarf_loc.c' || echo '$(srcdir)/'`libdwarf_loc.c

libdwarf_la-libdwarf_loclist.lo: libdwarf_loclist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_loclist.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_loclist.Tpo -c -o libdwarf_la-libdwarf_loclist.lo `test -f 'libdwarf_loclist.c' || echo '$(srcdir)/'`libdwarf_loclist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_loclist.Tpo $(DEPDIR)/libdwarf_la-libdwarf_loclist.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_loclist.c' object='libdwarf_la-libdwarf_loclist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_loclist.lo `test -f 'libdwarf_loclist.c' || echo '$(srcdir)/'`libdwarf_loclist.c

libdwarf_la-libdwarf_macinfo.lo: libdwarf_macinfo.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_macinfo.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_macinfo.Tpo -c -o libdwarf_la-libdwarf_macinfo.lo `test -f 'libdwarf_macinfo.c' || echo '$(srcdir)/'`libdwarf_macinfo.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_macinfo.Tpo $(DEPDIR)/libdwarf_la-libdwarf_macinfo.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_macinfo.c' object='libdwarf_la-libdwarf_macinfo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_macinfo.lo `test -f 'libdwarf_macinfo.c' || echo '$(srcdir)/'`libdwarf_macinfo.c

libdwarf_la-libdwarf_nametbl.lo: libdwarf_nametbl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_nametbl.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_nametbl.Tpo -c -o libdwarf_la-libdwarf_nametbl.lo `test -f 'libdwarf_nametbl.c' || echo '$(srcdir)/'`libdwarf_nametbl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_nametbl.Tpo $(DEPDIR)/libdwarf_la-libdwarf_nametbl.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_nametbl.c' object='libdwarf_la-libdwarf_nametbl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_nametbl.lo `test -f 'libdwarf_nametbl.c' || echo '$(srcdir)/'`libdwarf_nametbl.c

libdwarf_la-libdwarf_ranges.lo: libdwarf_ranges.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_ranges.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_ranges.Tpo -c -o libdwarf_la-libdwarf_ranges.lo `test -f 'libdwarf_ranges.c' || echo '$(srcdir)/'`libdwarf_ranges.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_ranges.Tpo $(DEPDIR)/libdwarf_la-libdwarf_ranges.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_ranges.c' object='libdwarf_la-libdwarf_ranges.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_ranges.lo `test -f 'libdwarf_ranges.c' || echo '$(srcdir)/'`libdwarf_ranges.c

libdwarf_la-libdwarf_reloc.lo: libdwarf_reloc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_reloc.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_reloc.Tpo -c -o libdwarf_la-libdwarf_reloc.lo `test -f 'libdwarf_reloc.c' || echo '$(srcdir)/'`libdwarf_reloc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_reloc.Tpo $(DEPDIR)/libdwarf_la-libdwarf_reloc.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_reloc.c' object='libdwarf_la-libdwarf_reloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_reloc.lo `test -f 'libdwarf_reloc.c' || echo '$(srcdir)/'`libdwarf_reloc.c

libdwarf_la-libdwarf_rw.lo: libdwarf_rw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_rw.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_rw.Tpo -c -o libdwarf_la-libdwarf_rw.lo `test -f 'libdwarf_rw.c' || echo '$(srcdir)/'`libdwarf_rw.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_rw.Tpo $(DEPDIR)/libdwarf_la-libdwarf_rw.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_rw.c' object='libdwarf_la-libdwarf_rw.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_rw.lo `test -f 'libdwarf_rw.c' || echo '$(srcdir)/'`libdwarf_rw.c

libdwarf_la-libdwarf_sections.lo: libdwarf_sections.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_sections.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_sections.Tpo -c -o libdwarf_la-libdwarf_sections.lo `test -f 'libdwarf_sections.c' || echo '$(srcdir)/'`libdwarf_sections.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_sections.Tpo $(DEPDIR)/libdwarf_la-libdwarf_sections.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_sections.c' object='libdwarf_la-libdwarf_sections.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_sections.lo `test -f 'libdwarf_sections.c' || echo '$(srcdir)/'`libdwarf_sections.c

libdwarf_la-libdwarf_str.lo: libdwarf_str.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -MT libdwarf_la-libdwarf_str.lo -MD -MP -MF $(DEPDIR)/libdwarf_la-libdwarf_str.Tpo -c -o libdwarf_la-libdwarf_str.lo `test -f 'libdwarf_str.c' || echo '$(srcdir)/'`libdwarf_str.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdwarf_la-libdwarf_str.Tpo $(DEPDIR)/libdwarf_la-libdwarf_str.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='libdwarf_str.c' object='libdwarf_la-libdwarf_str.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdwarf_la_CFLAGS) $(CFLAGS) -c -o libdwarf_la-libdwarf_str.lo `test -f 'libdwarf_str.c' || echo '$(srcdir)/'`libdwarf_str.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man3: $(notrans_dist_man3_MANS) $(notrans_man3_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man3dir)" || $(MKDIR_P) "$(DESTDIR)$(man3dir)"
	@list='$(notrans_dist_man3_MANS) $(notrans_man3_MANS)'; test -n "$(man3dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done;  \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed 'n;s,.*/,,;p;s,\.[^3][0-9a-z]*$$,.3,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man3dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man3dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man3dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man3dir)" || exit $$?; }; \
	done; }

uninstall-man3:
	@$(NORMAL_UNINSTALL)
	@list='$(notrans_dist_man3_MANS) $(notrans_man3_MANS)'; test -n "$(man3dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed 's,.*/,,;s,\.[^3][0-9a-z]*$$,.3,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man3dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man3dir)" && rm -f $$files; }
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: GNUmakefile $(LTLIBRARIES) $(MANS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(man3dir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f GNUmakefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man3

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f GNUmakefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-man

uninstall-man: uninstall-man3

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-man3 install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-man uninstall-man3


dwarf_add_AT_const_value_signedint.3: dwarf_add_AT_const_value_string.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_add_AT_const_value_unsignedint.3: dwarf_add_AT_const_value_string.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_add_AT_unsigned_const.3: dwarf_add_AT_signed_const.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_add_AT_targ_address_b.3: dwarf_add_AT_targ_address.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_add_arange_b.3: dwarf_add_arange.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_add_expr_addr_b.3: dwarf_add_expr_addr.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_add_frame_fde_b.3: dwarf_add_frame_fde.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_attrval_flag.3: dwarf_attrval_signed.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_attrval_string.3: dwarf_attrval_signed.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_attrval_unsigned.3: dwarf_attrval_signed.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_offdie.3: dwarf_child.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_offdie_b.3: dwarf_child.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_siblingof.3: dwarf_child.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_siblingof_b.3: dwarf_child.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_fde_cie_list_dealloc.3: dwarf_dealloc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_funcs_dealloc.3: dwarf_dealloc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_globals_dealloc.3: dwarf_dealloc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_pubtypes_dealloc.3: dwarf_dealloc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_types_dealloc.3: dwarf_dealloc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_vars_dealloc.3: dwarf_dealloc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_weaks_dealloc.3: dwarf_dealloc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_ranges_dealloc.3: dwarf_dealloc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_srclines_dealloc.3: dwarf_dealloc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_elf_init.3: dwarf_init.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_die_CU_offset.3: dwarf_dieoffset.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_die_CU_offset_range.3: dwarf_dieoffset.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_cu_die_offset_given_cu_header_offset.3: dwarf_dieoffset.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_cu_die_offset_given_cu_header_offset_b.3: dwarf_dieoffset.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_object_finish.3: dwarf_finish.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_global_formref.3: dwarf_formref.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_formsdata.3: dwarf_formudata.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_ACCESS_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_ATE_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_CC_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_CFA_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_CHILDREN_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_DS_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_DSC_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_EH_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_END_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_FORM_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_ID_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_INL_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_LANG_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_LNE_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_LNS_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_MACINFO_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_OP_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_ORD_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_TAG_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_VIRTUALITY_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_VIS_name.3: dwarf_get_AT_name.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_arange_cu_header_offset.3: dwarf_get_cu_die_offset.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_fde_list_eh.3: dwarf_get_fde_list.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_func_die_offset.3: dwarf_get_funcs.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_func_cu_offset.3: dwarf_get_funcs.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_func_name_offsets.3: dwarf_get_funcs.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_funcname.3: dwarf_get_funcs.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_global_die_offset.3: dwarf_get_globals.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_global_cu_offset.3: dwarf_get_globals.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_global_name_offsets.3: dwarf_get_globals.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_globname.3: dwarf_get_globals.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_pubtype_die_offset.3: dwarf_get_pubtypes.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_pubtype_cu_offset.3: dwarf_get_pubtypes.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_pubtype_name_offsets.3: dwarf_get_pubtypes.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_pubtypename.3: dwarf_get_pubtypes.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_ranges_a.3: dwarf_get_ranges.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_get_section_max_offsets_b.3: dwarf_get_section_max_offsets.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_type_die_offset.3: dwarf_get_types.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_type_cu_offset.3: dwarf_get_types.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_type_name_offsets.3: dwarf_get_types.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_typename.3: dwarf_get_types.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_var_die_offset.3: dwarf_get_vars.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_var_cu_offset.3: dwarf_get_vars.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_var_name_offsets.3: dwarf_get_vars.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_varname.3: dwarf_get_vars.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_weak_die_offset.3: dwarf_get_weaks.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_weak_cu_offset.3: dwarf_get_weaks.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_weak_name_offsets.3: dwarf_get_weaks.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_weakname.3: dwarf_get_weaks.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_whatform.3: dwarf_hasform.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_whatform_direct.3: dwarf_hasform.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_arrayorder.3: dwarf_highpc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_bitoffset.3: dwarf_highpc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_bitsize.3: dwarf_highpc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_bytesize.3: dwarf_highpc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_highpc_b.3: dwarf_highpc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_lowpc.3: dwarf_highpc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_srclang.3: dwarf_highpc.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_lineaddr.3: dwarf_lineno.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_linebeginstatement.3: dwarf_lineno.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_lineblock.3: dwarf_lineno.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_lineendsequence.3: dwarf_lineno.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_lineoff.3: dwarf_lineno.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_linesrc.3: dwarf_lineno.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_line_srcfileno.3: dwarf_lineno.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_loclist_n.3: dwarf_loclist.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_loclist_from_expr_a.3: dwarf_loclist_from_expr.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_loclist_from_expr_b.3: dwarf_loclist_from_expr.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_next_cu_header_b.3: dwarf_next_cu_header.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_next_cu_header_c.3: dwarf_next_cu_header.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_producer_init_b.3: dwarf_producer_init.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_seterrhand.3: dwarf_seterrarg.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_set_frame_rule_initial_value.3: dwarf_set_frame_cfa_value.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_set_frame_rule_table_size.3: dwarf_set_frame_cfa_value.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_set_frame_same_value.3: dwarf_set_frame_cfa_value.3
	$(AM_V_GEN)$(LN_S) $< $@
dwarf_set_frame_undefined_value.3: dwarf_set_frame_cfa_value.3
	$(AM_V_GEN)$(LN_S) $< $@

dwarf_pubnames.c:	dwarf_nametbl.m4 dwarf_pubnames.m4
dwarf_pubtypes.c:	dwarf_nametbl.m4 dwarf_pubtypes.m4
dwarf_weaks.c:		dwarf_nametbl.m4 dwarf_weaks.m4
dwarf_funcs.c:		dwarf_nametbl.m4 dwarf_funcs.m4
dwarf_vars.c:		dwarf_nametbl.m4 dwarf_vars.m4
dwarf_types.c:		dwarf_nametbl.m4 dwarf_types.m4
dwarf_pro_pubnames.c:	dwarf_pro_nametbl.m4 dwarf_pro_pubnames.m4
dwarf_pro_weaks.c:	dwarf_pro_nametbl.m4 dwarf_pro_weaks.m4
dwarf_pro_funcs.c:	dwarf_pro_nametbl.m4 dwarf_pro_funcs.m4
dwarf_pro_types.c:	dwarf_pro_nametbl.m4 dwarf_pro_types.m4
dwarf_pro_vars.c:	dwarf_pro_nametbl.m4 dwarf_pro_vars.m4
.m4.c:
	$(AM_V_GEN)m4 -D SRCDIR=${top_srcdir}/libdwarf $< > $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
