#
#
# Template for setvars file for autobuilder package
#
# The file can set a number of variables, all of which have defaults
# to perform various actions during the build.  Copy this file to
# a new package directory and delete uneeded parts.


# Where to fetch the souces ?
#  1. Either via CVS:
#AB_CVS_ROOT=
#AB_CVS_MODULE=
#  2. Either via SVN:
#AB_SVN=
#  3. Either via an URL:
#AB_URL=
#  4. Either somewhere on a filing system:
#AB_NOREMOTE=
#  And if non of the above is defined, we'll fetch it via apt-get (if
#  available), or via ftp from one of the Debian FTP servers.

# List of man page files, to be processed by rman to make an HTML helpfile
# The produced HTML files will automatically be added to the package.
#AB_MANPAGE=

# RISC OS Version of the package
#AB_ROVERSION=1

# Command in front of invocation of RISC OS GNU configure wrapper.  If you do
# not want this to be called, you could set this var to ":"
#AB_PRECONF=

# Flags to pass to configure in addition to those added by the configure
# wrapper.
#AB_CONFLAGS=

# Continue on, even if the program or library fails to fully compile
# (e.g. example/test apps)
#AB_COMPILEFAIL=no

# Run "make install" (in fact: make $AB_INSTALLTARGET) after build
#AB_INSTALL=no

# Use this target as make target to install after build
#AB_INSTALLTARGET=install

# RISC OS configuration script
#AB_CONFIG=$GCCSDK_INSTALL_ENV/ro-config

# RISC OS make wrapper.  This can be set to just "make" if setting the
# path causes problems - e.g., the native compiler is required too
#AB_MAKE=$GCCSDK_INSTALL_ENV/ro-make

# Zip name; alternate name for package to be zipped as
# Useful if tools from a library, etc.
#AB_ZIPNAME=

# Name ReadMe should be zipped as.  For example, !Program/!Help,fff
# Don't forget to escape '!' in bash.
#AB_README=ReadMe,fff

# Make function
#
# Define this if you want special actions for make
#
# ab_make () {
#   :
# }

# Package function
#
# You will need to define this to do your packaging.  Its job
# is simply to copy files from the source directory ($S) or package
# script directory ($H) to the destination directory ($D)
#
# ab_package () {
#   :
# }



# Finally, as this file is executed as a bash script, you can place other
# commands in here.  These will be executed after unpack of the source
# and application of any patches, but before any configuration or build.

