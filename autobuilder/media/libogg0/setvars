AB_INSTALL=no
AB_ROVERSION=3

AB_DISTCLEAN="rm -rf build build-vfp"

AB_PRECONF=:

autoconf

if [ "$RO_SHAREDLIBS" == "yes" ] ; then
AB_PACKAGES="libogg-dev libogg"
else
AB_PACKAGES="libogg-dev"
fi

# Build normal and VFP versions by default.
BUILD_NORMAL=yes
BUILD_VFP=yes

if [ "$BUILD_NORMAL" == "yes" ]; then
  mkdir $S/build
  ( cd $S/build; ENABLE_VFP=no $AB_CONFIG && $AB_MAKE && $AB_MAKE install )
fi

if [ "$BUILD_VFP" == "yes" ]; then
  mkdir $S/build-vfp
  ( cd $S/build-vfp; ENABLE_VFP=yes $AB_CONFIG --prefix=$GCCSDK_INSTALL_ENV/vfp && $AB_MAKE && $AB_MAKE install )
fi

ab_make() {
  :
}

ab_package() {
  if [ "$RO_SHAREDLIBS" == "yes" ] ; then
    if [ "$BUILD_NORMAL" == "yes" ] ; then
	ab_create_sharedlib_skeleton libogg

	ab_add_sharedlib $S/build/src/.libs libogg.so.0

	AB_COMPONENTS=""
	$AB_HOME/add-riscpkg -name LibOgg -section Library -package libogg \
	    -depends SharedLibs-C2 -copyrightfile $S/COPYING
    fi
    if [ "$BUILD_VFP" == "yes" ] ; then
	ab_create_sharedlib_skeleton libogg-vfp

	ab_add_sharedlib $S/build-vfp/src/.libs libogg.so.0

	AB_COMPONENTS=""
	$AB_HOME/add-riscpkg -name LibOgg-VFP -section Library -package libogg-vfp \
	    -depends SharedLibs-C2 -copyrightfile $S/COPYING -env vfp
    fi
  fi

  ab_create_app LibOgg Apps/Library libogg-dev

  ab_add_headers $GCCSDK_INSTALL_ENV/include/ogg $A/ogg

  if [ "$BUILD_NORMAL" == "yes" ] ; then
    mv $S/build/src/.libs/*.a $A
  fi
  if [ "$BUILD_VFP" == "yes" ] ; then
    mkdir -p $A/vfp
    mv $S/build-vfp/src/.libs/*.a $A/vfp
  fi

  # Copy HTML documentation
  rsync -rv --exclude=Makefile.* $S/doc $A
  cp $S/AUTHORS $S/CHANGES $S/COPYING $S/README $A/doc/

  $AB_HOME/add-riscpkg -name LibOgg-Dev -unixlib -unixsound -copyrightfile $S/COPYING
}
