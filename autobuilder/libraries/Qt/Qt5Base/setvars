# Build both normal and VFP versions by default. Set either of these to no
# to disable that build.
BUILD_NORMAL=yes
BUILD_VFP=no

# Building with OpenGL requires working GLES/EGL libraries.
if [ "x$RO_BUILD_OPENGL" == "xyes" ]; then
  CONFIG_OPENGL="-opengl -openvg"
else
  CONFIG_OPENGL="-no-opengl -no-openvg -no-egl"
fi

AB_URL=https://download.qt.io/archive/qt/5.15/5.15.2/submodules/qtbase-everywhere-src-5.15.2.tar.xz

# We'll call "make install" ourselves.
AB_INSTALL=no
AB_PVERSION=5.15.2
AB_ROVERSION=1

AB_DISTCLEAN="rm -rf build ; rm -rf build-vfp"

QTBASE_VERSION=5.15.2

export PKG_CONFIG=$GCCSDK_INSTALL_ENV/ro-pkg-config
export PKG_CONFIG_LIBDIR=$GCCSDK_INSTALL_ENV/lib/pkgconfig:$GCCSDK_INSTALL_ENV/share/pkgconfig
export PKG_CONFIG_SYSROOT_DIR=$GCCSDK_INSTALL_ENV
export RO_SHAREDLIBS=yes
export PATH=$GCCSDK_INSTALL_CROSSBIN:$PATH

# Export to subshells
export GCCSDK_INSTALL_ENV

# We'll be calling configure ourselves because it uses '-prefix' rather than '--prefix'.
AB_PRECONF=:

mkdir -p $S/src/plugins/platforms/riscos
ln -T -s -f $H/src.plugins.platforms.riscos.main.cpp $S/src/plugins/platforms/riscos/main.cpp
ln -T -s -f $H/src.plugins.platforms.riscos.qriscosbackingstore.h $S/src/plugins/platforms/riscos/qriscosbackingstore.h
ln -T -s -f $H/src.plugins.platforms.riscos.qriscosbackingstore.cpp $S/src/plugins/platforms/riscos/qriscosbackingstore.cpp
ln -T -s -f $H/src.plugins.platforms.riscos.qriscoseventdispatcher.cpp $S/src/plugins/platforms/riscos/qriscoseventdispatcher.cpp
ln -T -s -f $H/src.plugins.platforms.riscos.qriscoseventdispatcher.h $S/src/plugins/platforms/riscos/qriscoseventdispatcher.h
ln -T -s -f $H/src.plugins.platforms.riscos.qriscosintegration.h $S/src/plugins/platforms/riscos/qriscosintegration.h
ln -T -s -f $H/src.plugins.platforms.riscos.qriscosintegration.cpp $S/src/plugins/platforms/riscos/qriscosintegration.cpp
ln -T -s -f $H/src.plugins.platforms.riscos.qriscosscreen.cpp $S/src/plugins/platforms/riscos/qriscosscreen.cpp
ln -T -s -f $H/src.plugins.platforms.riscos.qriscosscreen.h $S/src/plugins/platforms/riscos/qriscosscreen.h
ln -T -s -f $H/src.plugins.platforms.riscos.qriscoswindow.cpp $S/src/plugins/platforms/riscos/qriscoswindow.cpp
ln -T -s -f $H/src.plugins.platforms.riscos.qriscoswindow.h $S/src/plugins/platforms/riscos/qriscoswindow.h
ln -T -s -f $H/src.plugins.platforms.riscos.qriscoscursor.cpp $S/src/plugins/platforms/riscos/qriscoscursor.cpp
ln -T -s -f $H/src.plugins.platforms.riscos.qriscoscursor.h $S/src/plugins/platforms/riscos/qriscoscursor.h
ln -T -s -f $H/src.plugins.platforms.riscos.qsprite.cpp $S/src/plugins/platforms/riscos/qsprite.cpp
ln -T -s -f $H/src.plugins.platforms.riscos.qsprite.h $S/src/plugins/platforms/riscos/qsprite.h
ln -T -s -f $H/src.plugins.platforms.riscos.riscos.json $S/src/plugins/platforms/riscos/riscos.json
ln -T -s -f $H/src.plugins.platforms.riscos.riscos.pro $S/src/plugins/platforms/riscos/riscos.pro

ln -T -s -f $H/include.qdynamicarea.h $S/include/QtCore/qdynamicarea.h
ln -T -s -f $H/src.corelib.tools.qdynamicarea.h $S/src/corelib/tools/qdynamicarea.h
ln -T -s -f $H/src.corelib.tools.qdynamicarea.cpp $S/src/corelib/tools/qdynamicarea.cpp

mkdir -p $S/mkspecs/riscos-g++
if [ "x$RO_USE_ARMEABIHF" == "xyes" ]; then
    ln -T -s -f $H/mkspecs.riscos-g++.qmake.conf $S/mkspecs/riscos-g++/qmake.conf
    ABI_DIR=armeabihf
else
    ln -T -s -f $H/mkspecs.riscos-g++4.qmake.conf $S/mkspecs/riscos-g++/qmake.conf
    ABI_DIR=abi-2.0
fi
ln -T -s -f $H/mkspecs.riscos-g++.qplatformdefs.h $S/mkspecs/riscos-g++/qplatformdefs.h

# Insert qdynamicarea.h into the build system.
$S/bin/syncqt.pl -version $AB_PVERSION

if [ "$BUILD_NORMAL" == "yes" ]; then
  mkdir -p build
  ( cd build; ../configure -prefix "/SharedLibs:lib/$ABI_DIR/Qt" -extprefix $GCCSDK_INSTALL_ENV \
  -hostprefix $GCCSDK_INSTALL_ENV -opensource -system-zlib \
  -confirm-license -xplatform riscos-g++ \
  -no-cups -no-iconv -system-freetype $CONFIG_OPENGL \
  -fontconfig -no-pch -icu -no-dbus -no-xcb -no-kms -no-glib -force-asserts \
  -qpa riscos -v )
fi

ab_make() {
  if [ "$BUILD_NORMAL" == "yes" ]; then
    ( cd build; make -j6 && make install )
  fi
  if [ "$BUILD_VFP" == "yes" ]; then
    ( cd build-vfp; make -j6 && make install )
  fi
#  make install
#  make html_docs
}

# $1 = app name
# $2 = binary location
# $3 = binary name
# $4 = "VFP" or ""
create_test_app() {
  mkdir -p "$A/$4/!$1"

  # We're not too concerned about the size of the wimp slot, these are
  # just test programs, so it doesn't matter if it's oversized.
  echo "Wimpslot -min 1000k -max 1000k" >> "$A/$4/!$1/!Run,feb"
  echo "Set $1\$Dir <Obey\$Dir>" >> "$A/$4/!$1/!Run,feb"
  echo "Run <$1\$Dir>.$3 > <$1\$Dir>.debug 2>&1" >> "$A/$4/!$1/!Run,feb"

# Note: don't override the Prefix, or we'll search the wrong plugin path.
#  echo "[Paths]" >> "$A/$4/!$1/qt.conf"
#  echo "Prefix=/<$1\$Dir>/" >> "$A/$4/!$1/qt.conf"

  cp $2/$3 "$A/$4/!$1/$3$AB_EXEEXT"
}

# $1 = app name
# $2 = binary location
# $3 = binary name
create_example() {
  if [ "$BUILD_NORMAL" == "yes" ]; then
    create_test_app $1 $S/build/examples/$2 $3 ""
  fi
  if [ "$BUILD_VFP" == "yes" ]; then
    create_test_app $1 $S/build-vfp/examples/$2 $3 VFP
  fi
}

ab_package() {
  # Currently there is no dev package as we don't have RISC OS binaries
  # for the Qt tools (e.g, moc).

  # qt5base (We always build the shared libraries).
  ab_create_sharedlib_skeleton Qt5Base

  if [ "$BUILD_NORMAL" == "yes" ]; then
    ab_add_sharedlib $S/build/lib libQt5Core.so.5
    ab_add_sharedlib $S/build/lib libQt5Gui.so.5
    ab_add_sharedlib $S/build/lib libQt5Network.so.5
    ab_add_sharedlib $S/build/lib libQt5Widgets.so.5
    ab_add_sharedlib $S/build/lib libQt5Sql.so.5
    ab_add_sharedlib $S/build/lib libQt5Xml.so.5
    ab_add_sharedlib $S/build/lib libQt5Concurrent.so.5
    ab_add_sharedlib $S/build/lib libQt5PrintSupport.so.5
    if [ "x$RO_BUILD_OPENGL" == "xyes" ]; then
      ab_add_sharedlib $S/build/lib libQt5EglFSDeviceIntegration.so.5
      ab_add_sharedlib $S/build/lib libQt5OpenGL.so.5
    fi
    ab_add_sharedlib $S/build/lib libQt5Test.so.5

    # This is a dlopen library.
    mkdir -p $AA/Qt/plugins/bearer
    mkdir -p $AA/Qt/plugins/egldeviceintegrations
    mkdir -p $AA/Qt/plugins/generic
    mkdir -p $AA/Qt/plugins/platforms
    mkdir -p $AA/Qt/plugins/imageformats
    mkdir -p $AA/Qt/plugins/sqldrivers

    cp -T $S/build/plugins/bearer/libqgenericbearer.so $AA/Qt/plugins/bearer/libqgenericbearer.so,E1F
    cp -T $S/build/plugins/generic/libqtuiotouchplugin.so    $AA/Qt/plugins/generic/libqtuiotouchplugin.so,E1F
    cp -T $S/build/plugins/platforms/libqriscos.so     $AA/Qt/plugins/platforms/libqriscos.so,E1F
    cp -T $S/build/plugins/platforms/libqminimal.so    $AA/Qt/plugins/platforms/libqminimal.so,E1F
    cp -T $S/build/plugins/platforms/libqoffscreen.so  $AA/Qt/plugins/platforms/libqoffscreen.so,E1F
    if [ "x$RO_BUILD_OPENGL" == "xyes" ]; then
      cp -T $S/build/plugins/egldeviceintegrations/libqeglfs-emu-integration.so  \
              $AA/Qt/plugins/egldeviceintegrations/libqeglfs-emu-integration.so,E1F
      cp -T $S/build/plugins/platforms/libqeglfs.so      $AA/Qt/plugins/platforms/libqeglfs.so,E1F
      cp -T $S/build/plugins/platforms/libqminimalegl.so $AA/Qt/plugins/platforms/libqminimalegl.so,E1F
    fi
    cp -T $S/build/plugins/platforms/libqvnc.so        $AA/Qt/plugins/platforms/libqvnc.so,E1F
    cp -T $S/build/plugins/imageformats/libqgif.so     $AA/Qt/plugins/imageformats/libqgif.so,E1F
    cp -T $S/build/plugins/imageformats/libqico.so     $AA/Qt/plugins/imageformats/libqico.so,E1F
    cp -T $S/build/plugins/imageformats/libqjpeg.so    $AA/Qt/plugins/imageformats/libqjpeg.so,E1F
    cp -T $S/build/plugins/sqldrivers/libqsqlite.so    $AA/Qt/plugins/sqldrivers/libqsqlite.so,E1F
  fi

  AB_COMPONENTS=""
  $AB_HOME/add-riscpkg -package qt5base -name Qt5Base \
	-depends SharedLibs -depends LibPNG16-16 -depends ZLib1g \
	-depends LibJPEG8 -depends LibPcre3 \
	-depends LibFontConfig1 -depends LibFreeType6 -depends LibExpat1 \
	-depends LibICU52 -depends LibSSL \
	-depends TTF-DejaVu-Core -depends TTF-DejaVu-Extra \
        -depends TTF-Bitstream-Vera \
	-section Library

  # Use standard font packages - rather than copying from here
  # (see depends above)
  #
  #  ab_create_app UnixFont Apps/Fonts qt5fonts
  # mkdir -p $A/truetype/ttf-dejavu $A/truetype/ttf-vera
  # cp lib/fonts/DejaVu*.ttf $A/truetype/ttf-dejavu
  # cp lib/fonts/Vera*.ttf $A/truetype/ttf-vera
  # rm $A/\!Boot,feb

  # AB_COMPONENTS=""
  # $AB_HOME/add-riscpkg -package qt5fonts -name Qt5Fonts -section Fonts -depends UnixFont

  # qt5base-tests
  ab_create_app Qt5BaseTests Apps/Library qt5base-tests

  create_example Mandelbrot    corelib/threads/mandelbrot        mandelbrot
  create_example AnimatedTiles widgets/animation/animatedtiles   animatedtiles
  create_example Easing        widgets/animation/easing          easing
  create_example MoveBlocks    widgets/animation/moveblocks      moveblocks
  create_example States        widgets/animation/states          states
  create_example StickMan      widgets/animation/stickman        stickman
  create_example Sub-Attaq     widgets/animation/sub-attaq       sub-attaq
  create_example Affine        widgets/painting/affine           affine
  create_example BasicDrawing  widgets/painting/basicdrawing     basicdrawing
  create_example Composition   widgets/painting/composition      composition
  create_example ConcCircles   widgets/painting/concentriccircles  concentriccircles
  create_example Deform        widgets/painting/deform           deform
  create_example FontSampler   widgets/painting/fontsampler      fontsampler
  create_example Gradients     widgets/painting/gradients        gradients
  create_example ImageComp     widgets/painting/imagecomposition imagecomposition
  create_example PainterPaths  widgets/painting/painterpaths     painterpaths
  create_example PathStroke    widgets/painting/pathstroke       pathstroke
  create_example Transforms    widgets/painting/transformations  transformations
  create_example BlurPicker    widgets/effects/blurpicker        blurpicker
  create_example FadeMessage   widgets/effects/fademessage       fademessage
  create_example i18n          widgets/tools/i18n                i18n
  create_example RegExp        widgets/tools/regexp              regexp
  create_example AnalogClock   widgets/widgets/analogclock       analogclock
  create_example Calculator    widgets/widgets/calculator        calculator
  create_example CalendarWidget  widgets/widgets/calendarwidget  calendarwidget
  create_example CharacterMap  widgets/widgets/charactermap      charactermap
  create_example CodeEditor    widgets/widgets/codeeditor        codeeditor
  create_example DigitalClock  widgets/widgets/digitalclock      digitalclock
  create_example ElidedLabel   widgets/widgets/elidedlabel       elidedlabel
  create_example GroupBox      widgets/widgets/groupbox          groupbox
  create_example Icons         widgets/widgets/icons             icons
  create_example ImageViewer   widgets/widgets/imageviewer       imageviewer
  create_example LineEdits     widgets/widgets/lineedits         lineedits
  create_example MouseButtons  widgets/widgets/mousebuttons      mousebuttons
  create_example Movie         widgets/widgets/movie             movie
  create_example Scribble      widgets/widgets/scribble          scribble
  create_example ShapedClock   widgets/widgets/shapedclock       shapedclock
  create_example Sliders       widgets/widgets/sliders           sliders
  create_example Spinboxes     widgets/widgets/spinboxes         spinboxes
  create_example Styles        widgets/widgets/styles            styles
  create_example StyleSheet    widgets/widgets/stylesheet        stylesheet
  create_example Tablet        widgets/widgets/tablet            qttablet
  create_example Tetrix        widgets/widgets/tetrix            tetrix
  create_example ToolTips      widgets/widgets/tooltips          tooltips
  create_example Validators    widgets/widgets/validators        validators
  create_example Wiggly        widgets/widgets/wiggly            wiggly
  create_example WindowFlags   widgets/widgets/windowflags       windowflags

  $AB_HOME/add-riscpkg -package qt5base-tests -name Qt5Base-Tests -depends Qt5Base \
	-depends SharedLibs
}
