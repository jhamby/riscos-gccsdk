# This file is copied to the Configurations by setvar command
# Add any custom target here and alter the calling setvar commands
# Set exe_extension to "" if un-used.
# "armv4_asm" is inherited from 00-base-templates.conf and lists the assembly src files for armv4 and higher.
#
# RISC OS platform uses a subset of the following from 'gcc --target-help'
#
# valid arguments to '-march=' are: armv2 armv2a armv3 armv3m armv4 armv4t armv5 armv5e armv5t armv5te
# armv6 armv6-m armv6j armv6k armv6s-m armv6t2 armv6z armv6zk armv7 armv7-a armv7-m armv7-r armv7e-m ep9312 iwmmxt iwmmxt2 native
#
#Known ARM CPUs (for use with the -mcpu= and -mtune= options):
#    arm1020e arm1020t arm1022e arm1026ej-s arm10e arm10tdmi arm1136j-s
#    arm1136jf-s arm1156t2-s arm1156t2f-s arm1176jz-s arm1176jzf-s arm2 arm250
#    arm3 arm6 arm60 arm600 arm610 arm620 arm7 arm70 arm700 arm700i arm710
#    arm7100 arm710c arm710t arm720 arm720t arm740t arm7500 arm7500fe arm7d
#    arm7di arm7dm arm7dmi arm7m arm7tdmi arm7tdmi-s arm8 arm810 arm9 arm920
#    arm920t arm922t arm926ej-s arm940t arm946e-s arm966e-s arm968e-s arm9e
#    arm9tdmi cortex-a15 cortex-a5 cortex-a7 cortex-a8 cortex-a9 cortex-m0
#    cortex-m1 cortex-m3 cortex-m4 cortex-r4 cortex-r4f cortex-r5 ep9312 fa526
#    fa606te fa626 fa626te fa726te fmp626 generic-armv7-a iwmmxt iwmmxt2 mpcore
#    mpcorenovfp native strongarm strongarm110 strongarm1100 strongarm1110 xscale
#
#Known floating-point ABIs (for use with the -mfloat-abi= option):
#    hard soft softfp  
# If "tests" are required in package remove from (shared section) disable and set AB_PKGTESTS=yes in setvars
# 
my %targets = (
# RiscPC/A7000 and base for others to inherit, no asm or fpu specified.
    "riscos-armv3-static" => {
        inherit_from     => [ "BASE_common" ],
        CC               => "$ENV{GCCSDK_INSTALL_CROSSBIN}/arm-unknown-riscos-arm-unknown-riscos-gcc",
        LD               => "$ENV{GCCSDK_INSTALL_CROSSBIN}/arm-unknown-riscos-arm-unknown-riscos-gcc",
        CFLAGS           => "-march=armv3 -O3 -Wall",
        LDFLAGS          => "-static", 
        lib_cppflags     => "-DL_ENDIAN -D_REENTRANT",
        sys_id           => "RISCOS",
        thread_scheme    => "pthreads",
        bn_ops           => "BN_LLONG",
        exe_extension    => ",e1f",
        RANLIB           => "$ENV{GCCSDK_INSTALL_CROSSBIN}/arm-unknown-riscos-ranlib",
        AR               => "$ENV{GCCSDK_INSTALL_CROSSBIN}/arm-unknown-riscos-ar",
        ARFLAGS          => "r",
        disable          => [ "tests", "asm", "pic", "dso", "engine", "static-engine", "async", "idea", "mdc2", "rc5" ],
      },
    "riscos-armv3-shared" => {
        inherit_from     => [ "BASE_common", ],
        CC               => "$ENV{GCCSDK_INSTALL_CROSSBIN}/arm-unknown-riscos-arm-unknown-riscos-gcc",
        LD               => "$ENV{GCCSDK_INSTALL_CROSSBIN}/arm-unknown-riscos-arm-unknown-riscos-gcc",
        CFLAGS           => "-march=armv3 -O3 -Wall",
        bin_lflags       => "-ldl",
        lib_cppflags     => "-DL_ENDIAN -D_REENTRANT",
        shared_cppflag   => "-fPIC", 
        sys_id           => "RISCOS",
        thread_scheme    => "pthreads",
        dso_scheme       => "DLFCN",
        shared_target    => "linux-shared",
        bn_ops           => "BN_LLONG",
        exe_extension    => ",e1f",
        RANLIB           => "$ENV{GCCSDK_INSTALL_CROSSBIN}/arm-unknown-riscos-ranlib",
        AR               => "$ENV{GCCSDK_INSTALL_CROSSBIN}/arm-unknown-riscos-ar",
        ARFLAGS          => "r",  
        shared_extension => ".so.\$(SHLIB_VERSION_NUMBER)",
# If the shared executable tests aren't being packaged add ' "tests", ' here
        disable          => [ "asm", "engine", "static-engine", "dynamic-engine", "async", "idea", "mdc2", "rc5" ],
      },
# Newer targets, inherit from the above and armv4_asm then overwrite the lines that need changing
    "riscos-armv4-static" => {
        inherit_from     => [ "riscos-armv3-static", asm("armv4_asm") ],
        CFLAGS           => "-march=armv4 -O3 -Wall",
        disable          => [ "tests", "pic", "dso", "engine", "static-engine", "async", "idea", "mdc2", "rc5" ],
      },
    "riscos-armv4-shared" => {
        inherit_from     => [ "riscos-armv3-shared", asm("armv4_asm") ],
        CFLAGS           => "-march=armv4 -O3 -Wall",
        disable          => [ "engine", "static-engine", "dynamic-engine", "async", "idea", "mdc2", "rc5" ],
      },
    "riscos-armv6zk-static" => {
        inherit_from     => [ "riscos-armv4-static" ],
        CFLAGS           => "-mcpu=arm1176jzf-s -mfpu=vfp -O3 -Wall",
      },
    "riscos-armv6zk-shared" => {
        inherit_from     => [ "riscos-armv4-shared" ],
        CFLAGS           => "-mcpu=arm1176jzf-s -mfpu=vfp -O3 -Wall",
      },
    "riscos-aof-arm"     => {
       inherit_from      => [ "BASE_common" ],
       CC                => "gcc",
       lib_cppflags      => add("-DL_ENDIAN -DTERMIOS -DNO_SYS_UN_H -D_REENTRANT"),
       CFLAGS            => "-O3 -Wall -fomit-frame-pointer",
       bn_ops            => "BN_LLONG",
       disable           => [ "tests", "pic", "async", "engine", "asm", "idea", "mdc2", "rc5", "threads" ],
       exe_extension     => ",ff8",
    },
);
