| Obey file to run as many tests as possible. (last section needs grep)
| Tests skipped for good reason
| afalgtest,asynctest,enginetest,gmdifftest,ideatest,md2test,mdctest,rc5test
| Tests that segmentation fault (maybe need to be static)
| ecstresstest,fatalerrtest,pemtest,secmemtest,sysdefaulttest
| test_test,tls13encryptiontest,tls13secretstest,wpackettest

If "<alias$grep>" = "" Then set alias$grep Echo Missing grep, no testing for %*0

Set Teststart <Sys$Time>
echo <13><10>Tests that run without arguments
echo setting CSD to test-pic
Dir <LibSSL$Dir>.test-pic
asn1_decode_test
asn1_encode_test
asn1_string_table_test
asn1_time_test
bad_dtls_test
bftest
bioprinttest
bio_callback_test
bio_enc_test
bntest
casttest
cipherbytes_test
cipherlist_test
ciphername_test
constant_time_test
crltest
destest
dhtest
drbgtest
drbg_cavs_test
dsatest
dsa_no_digest_size_test
dtlsv1listentest
dtls_mtu_test
ecdsatest
ectest
errtest
evp_extra_test
exdatatest
exptest
hmactest
igetest
lhash_test
memleaktest
packettest
pbelutest
pkey_meth_kdf_test
pkey_meth_test
rc2test
rc4test
rsa_mp_test
rsa_test
sanitytest
srptest
stack_test
threadstest
time_offset_test
uitest
v3nametest
versions
x509_time_test
Echo <13><10>ct_test
Set CTLOG_FILE ct/log_list.conf
Set CT_DIR ct
Set CERTS_DIR certs
ct_test
Unset CTLOG_FILE
Unset  CT_DIR
Unset CERTS_DIR
Echo <13><10>tls13ccstest
openssl rsa -in server.pem -out privkey.pem
tls13ccstest server.pem privkey.pem
echo <13><10>conf_include_test(s)
Dir <LibSSL$Dir>.test-pic.recipes.90-test_includes_data
^.^.conf_include_test includes.cnf
^.^.conf_include_test includes-file.cnf
echo <13><10>conf_include_test with broken cnf, Failure expected
^.^.conf_include_test includes-broken.cnf f
Up
Up
echo <13><10>verify_extra_test
verify_extra_test certs/roots.pem certs/untrusted.pem certs/bad.pem
echo <13><10>clienthellotest
clienthellotest session.pem
echo <13><10>x509aux
x509aux certs/roots.pem certs/root+anyEKU.pem  certs/root-anyEKU.pem certs/root-cert.pem
echo <13><10>x509_check_cert_pkey_test(s)
x509_check_cert_pkey_test certs/servercert.pem certs/serverkey.pem cert ok
x509_check_cert_pkey_test certs/servercert.pem certs/wrongkey.pem cert failed
x509_check_cert_pkey_test certs/server-dsa-cert.pem certs/server-dsa-key.pem cert ok
x509_check_cert_pkey_test certs/server-ecdsa-cert.pem certs/server-ecdsa-key.pem cert ok
x509_check_cert_pkey_test certs/x509-check.csr certs/x509-check-key.pem req ok
x509_check_cert_pkey_test certs/x509-check.csr certs/wrongkey.pem req failed
echo <13><10>x509_dup_cert_test certs
x509_dup_cert_test certs/leaf.pem
echo <13><10>cmsapitest
cmsapitest certs/servercert.pem certs/serverkey.pem
echo <13><10>d2i_test(s)
d2i_test X509 decode d2i-tests/bad_cert.der
d2i_test GENERAL_NAME decode d2i-tests/bad_generalname.der
d2i_test ASN1_ANY BIO d2i-tests/bad_bio.der
d2i_test ASN1_ANY OK d2i-tests/high_tag.der
d2i_test ASN1_INTEGER decode d2i-tests/high_tag.der
d2i_test ASN1_INTEGER OK d2i-tests/int0.der
d2i_test ASN1_INTEGER OK d2i-tests/int1.der
d2i_test ASN1_INTEGER OK d2i-tests/intminus1.der
d2i_test ASN1_ANY OK d2i-tests/int0.der
d2i_test ASN1_ANY OK d2i-tests/int1.der
d2i_test ASN1_ANY OK d2i-tests/intminus1.der
d2i_test ASN1_INTEGER decode d2i-tests/bad-int-pad0.der
d2i_test ASN1_INTEGER decode d2i-tests/bad-int-padminus1.der
echo <13><10>sslapitest
sslapitest server.pem recipes/90-test_sslapi_data
echo <13><10>sslcorrupttest
sslcorrupttest server.pem
echo <13><10>asynciotest
asynciotest server.pem
echo <13><10>recordlentest
recordlentest server.pem
echo <13><10>servername_test
servername_test server.pem
echo <13><10>sslbuffertest
sslbuffertest server.pem
echo <13><10>dtlstest
dtlstest server.pem
echo <13><10>ssl_test_ctx_test
ssl_test_ctx_test ssl_test_ctx_test.conf
echo <13><10>danetest
danetest example.com danetest.pem danetest.in
echo <13><10>evp_test(s)
evp_test recipes/30-test_evp_data/evpciph.txt
evp_test recipes/30-test_evp_data/evpdigest.txt
evp_test recipes/30-test_evp_data/evpencod.txt
evp_test recipes/30-test_evp_data/evpkdf.txt
evp_test recipes/30-test_evp_data/evpmac.txt
evp_test recipes/30-test_evp_data/evppbe.txt
evp_test recipes/30-test_evp_data/evppkey.txt
evp_test recipes/30-test_evp_data/evppkey_ecc.txt
evp_test recipes/30-test_evp_data/evpcase.txt
echo <13><10>shlibloadtest(s)
shlibloadtest -crypto_first libcrypto libssl
shlibloadtest -ssl_first libcrypto libssl
shlibloadtest -just_crypto libcrypto libssl
shlibloadtest -dso_ref libcrypto libssl
|Copy pemread <LibSSL$Dir>.test-pic.recipes.04-test_pem_data.pemread F~C~V
Dir  <LibSSL$Dir>.test-pic.recipes.04-test_pem_data
echo Set expected "%%0"<10><13>SetEval pass %%1<10><13>If pass Then echo ** Should accept and find string ** Else echo ** Should Reject with no match **<10><13>Do If expected LEFT4 = "cert" then openssl x509 -text -inform PEM -out /tmp/pem -in |<expected><10><13>Do If expected LEFT3 = "dsa" Then openssl pkey -inform PEM -passin file:wellknown -text -out /tmp/pem -in |<expected><10><13>IfThere |<Wimp$ScrapDir>.pem Then Else Set expected xxxx<10><13>If expected LEFT4 = "cert" then grep "The Great State of Long-Winded Certificate Field Names Whereby to Increase the Output Size" /tmp/pem<10><13>If expected LEFT3 = "dsa" Then grep "68:42:02:16:63:54:16:eb:06:5c:ab:06:72:3b:78:" /tmp/pem<10><13>IfThere |<Wimp$ScrapDir>.pem Then Wipe |<Wimp$ScrapDir>.pem ~C~V { > pemread }
SetType pemread feb
echo <13><10>pemreading tests (04-test_pem.t)
pemread cert-1023line.pem 1
pemread cert-1024line.pem 1
pemread cert-1025line.pem 1
pemread cert-255line.pem 1
pemread cert-256line.pem 1
pemread cert-257line.pem 1
pemread cert-blankline.pem 0
pemread cert-comment.pem 0
pemread cert-earlypad.pem 0
pemread cert-extrapad.pem 0
pemread cert-infixwhitespace.pem 1
pemread cert-junk.pem 0
pemread cert-leadingwhitespace.pem 1
pemread cert-longline.pem 1
pemread cert-misalignedpad.pem 0
pemread cert-onecolumn.pem 1
pemread cert-oneline.pem 1
pemread cert-shortandlongline.pem 1
pemread cert-shortline.pem 1
pemread cert-threecolumn.pem 1
pemread cert-trailingwhitespace.pem 1
pemread cert.pem 1
echo <13><10>pemreading DSA
pemread dsa-1023line.pem 0
pemread dsa-1024line.pem 0
pemread dsa-1025line.pem 0
pemread dsa-255line.pem 0
pemread dsa-256line.pem 0
pemread dsa-257line.pem 0
pemread dsa-blankline.pem 0
pemread dsa-comment.pem 0
pemread dsa-corruptedheader.pem 0
pemread dsa-corruptiv.pem 0
pemread dsa-earlypad.pem 0
pemread dsa-extrapad.pem 0
pemread dsa-infixwhitespace.pem 0
pemread dsa-junk.pem 0
pemread dsa-leadingwhitespace.pem 0
pemread dsa-longline.pem 0
pemread dsa-misalignedpad.pem 0
pemread dsa-onecolumn.pem 0
pemread dsa-oneline.pem 0
pemread dsa-onelineheader.pem 0
pemread dsa-shortandlongline.pem 0
pemread dsa-shortline.pem 0
pemread dsa-threecolumn.pem 0
pemread dsa-trailingwhitespace.pem 1
pemread dsa.pem 1
Echo <13><10>pemreading RSA
openssl pkey -inform PEM -text -out /tmp/pem -in beermug.pem
grep "00:a0:3a:21:14:5d:cd:b6:d5:a0:3e:49:23:c1:3a:" /tmp/pem
Dir <Boot$Dir>.^
Set Testfinish <Sys$Time>
Seteval sh Teststart LEFT 2
Seteval sm (Teststart RIGHT5) LEFT 2
Seteval ss Teststart RIGHT 2
Seteval fh Testfinish LEFT 2
If fh < sh Then Seteval fh fh+24
Seteval fm (Testfinish RIGHT5) LEFT 2
Seteval fs Testfinish RIGHT 2
Seteval tt ((fh*3600)+(fm*60)+fs) - ((sh*3600)+(sm*60)+ss)
Echo  <13><10>** Testing took <tt> seconds **
Echo <13><10> end of tests, not running the aborttest
| <LibSSL$Dir>.test-pic.aborttest