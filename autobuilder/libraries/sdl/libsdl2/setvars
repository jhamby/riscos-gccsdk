AB_GIT=https://github.com/libsdl-org/SDL.git
AB_GIT_TAGORBRANCH=release-2.26.0
AB_PVERSION=2.26.0
AB_ROVERSION=1
AB_LICENCE=Free

AB_INSTALLDOCS="COPYING README.md README.RISCOS README-SDL.txt WhatsNew"
AB_SHORTDESC="Allows programs portable low level access to a video, audio, mouse, and keyboard"

# AB_INSTALL=yes 
AB_DISTCLEAN="rm -rf build build-vfp"
AB_PRECONF=":"

# Build normal and VFP versions by default. Note that only the VFP version currently has OpenGL support.
BUILD_NORMAL=yes
BUILD_VFP=yes

if [ "$RO_SHAREDLIBS" == "yes" ] ; then
AB_PACKAGES="libsdl2-dev libsdl2"
else
AB_PACKAGES="libsdl2-dev"
fi

./autogen.sh

if [ "$BUILD_NORMAL" == "yes" ]; then
  mkdir -p $S/build
  ( cd $S/build; $AB_CONFIG --disable-video-rpi --disable-video-opengles )
fi

if [ "$BUILD_VFP" == "yes" ]; then
  mkdir -p $S/build-vfp
  ( cd $S/build-vfp; CFLAGS="-mfpu=vfp -O3" $AB_CONFIG --prefix=$GCCSDK_INSTALL_ENV/vfp --enable-video-rpi )
  # Patch libtool to specify -mfpu=vfp when linking, so that the correct GCC multilib configuration is used
  # (We can't do the official hack of specifying CC when running configure, because $AB_CONFIG overwrites it)
  sed -i "s/    new_inherited_linker_flags=\$/    new_inherited_linker_flags=\"-mfpu=vfp\"/" $S/build-vfp/libtool 
fi

ab_make() {
  if [ "$BUILD_NORMAL" == "yes" ]; then
    $AB_MAKE -C build $@
    $AB_MAKE -C build install
  fi
  if [ "$BUILD_VFP" == "yes" ]; then
    $AB_MAKE -C build-vfp $@
    $AB_MAKE -C build-vfp install
  fi
}

ab_package() {
  ab_create_app SDL2 Apps/Library libsdl2-dev

  ab_add_headers $GCCSDK_INSTALL_ENV/vfp/include/SDL2 $A/SDL2

  if [ "$BUILD_NORMAL" == "yes" ] ; then
    if [ -d "$S/build/build/.libs/" ]; then
      cp -f $S/build/build/.libs/*.a $A
    else
      cp -f $S/build/build/*.a $A
    fi
  fi
  if [ "$BUILD_VFP" == "yes" ] ; then
    mkdir -p $A/vfp
    if [ -d "$S/build-vfp/build/.libs/" ]; then
      cp -f $S/build-vfp/build/.libs/*.a $A/vfp
    else
      cp -f $S/build-vfp/build/*.a $A/vfp
    fi
  fi

  $AB_HOME/add-riscpkg -unixlib -unixsound -package libsdl2-dev -name LibSDL2-Dev

  if [ "$RO_SHAREDLIBS" == "yes" ] ; then
    if [ "$BUILD_NORMAL" == "yes" ] ; then
      ab_create_sharedlib_skeleton libsdl2
      ab_add_sharedlib $S/build/build/.libs libSDL2-2.0.so.0

      $AB_HOME/add-riscpkg -package libsdl2 -name LibSDL2 -depends SharedLibs-C2 \
		 -unixsound -section Library -copyrightfile $H/Copyright

    fi
    if [ "$BUILD_VFP" == "yes" ] ; then
      ab_create_sharedlib_skeleton libsdl2-vfp
      ab_add_sharedlib $S/build-vfp/build/.libs libSDL2-2.0.so.0

      $AB_HOME/add-riscpkg -package libsdl2-vfp -name LibSDL2-VFP -depends SharedLibs-C2 \
		 -unixsound -section Library -copyrightfile $H/Copyright -env vfp

    fi
  fi
}
