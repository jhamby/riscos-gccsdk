# Note: We patch Makefile.am.features despite the fact that the file is
# generated by configure and a comment states do not edit. I suspect
# there is a chicken and egg problem here. If the RISC OS specific
# files are not mentioned in this file (as they would not initially
# before configure re-generates the file), then they are ignored for
# the rest of the build.

AB_INSTALL=yes

#export FONTCONFIG_LIBS="-lfontconfig -lfreetype -lexpat -lz"
AB_CONFLAGS="--enable-xlib=no --enable-xlib-xrender=no --enable-xcb=no --enable-xcb-shm=no --enable-png=yes --enable-ft=yes --enable-ps=yes --enable-pdf=yes --enable-svg=yes --enable-tee=yes --enable-qt=no"

ln -T -s -f $H/src.cairo-riscos-sprite-surface.c $S/src/cairo-riscos-sprite-surface.c
ln -T -s -f $H/src.cairo-riscos-memory.c $S/src/cairo-riscos-memory.c
ln -T -s -f $H/src.cairo-riscos.h $S/src/cairo-riscos.h
ln -T -s -f $H/src.cairo-riscos-font.c $S/src/cairo-riscos-font.c
ln -T -s -f $H/boilerplate.cairo-boilerplate-riscos.c $S/boilerplate/cairo-boilerplate-riscos.c

autoreconf -fi

ab_package() {
  ab_create_app LibCairo2 Apps/Library libcairo2-dev

  HERE=`pwd`
  cd $A

  unzip $AB_OUTPUTLIB/$RO_PKG.zip
  
  mv include/cairo cairo
  rm -rf include

  mv lib/*.a .
  rm -rf lib

  mv doc/$RO_PKG/* doc
  rm -rf doc/$RO_PKG

  cd $HERE

  $AB_HOME/add-riscpkg -package "libcairo2-dev" -unixlib -name LibCairo2-Dev \
	-copyrightfile COPYING

  if [ "$RO_SHAREDLIBS" == "yes" ]; then
    ab_create_app SharedLibs Apps/Library libcairo2-lib

    # Create a skeleton !SharedLibs directory and copy shared library.
    # Determine which ABI is in use and therefor which directory to install
    # to. We assume that GCC 4.1.1 is obsolete. For GCC 4.1.2, the ABI
    # directory is "abi-1.0", for newer versions of GCC, it is "abi-2.0".
    abi_dir=abi-2.0
    gcc_version=$($GCCSDK_INSTALL_CROSSBIN/arm-unknown-riscos-gcc --version)
    if [[ "$gcc_version" == *4.1.2* ]]; then
      abi_dir=abi-1.0
    fi

    mkdir -p $A/lib/$abi_dir
    ux_lib_name=$(readlink src/.libs/libcairo.so.2)
    ro_lib_name=$(echo $ux_lib_name | tr /. ./)
    cp -T $S/src/.libs/$ux_lib_name $A/lib/$abi_dir/$ux_lib_name,E1F
    $GCCSDK_INSTALL_CROSSBIN/arm-unknown-riscos-ln -s -f $ro_lib_name $A/lib/$abi_dir/libcairo.so,1C8
    $GCCSDK_INSTALL_CROSSBIN/arm-unknown-riscos-ln -s -f $ro_lib_name $A/lib/$abi_dir/libcairo.so.2,1C8

    ux_lib_name=$(readlink util/cairo-script/.libs/libcairo-script-interpreter.so.2)
    ro_lib_name=$(echo $ux_lib_name | tr /. ./)
    cp -T $S/util/cairo-script/.libs/$ux_lib_name $A/lib/$abi_dir/$ux_lib_name,E1F
    $GCCSDK_INSTALL_CROSSBIN/arm-unknown-riscos-ln -s -f $ro_lib_name $A/lib/$abi_dir/libcairo-script-interpreter.so,1C8
    $GCCSDK_INSTALL_CROSSBIN/arm-unknown-riscos-ln -s -f $ro_lib_name $A/lib/$abi_dir/libcairo-script-interpreter.so.2,1C8

    if [ -e $S/util/cairo-gobject/.libs/libcairo-gobject.so ]; then
      # libcairo-gobject will only exist if glib was built first.
      ux_lib_name=$(readlink util/cairo-gobject/.libs/libcairo-gobject.so.2)
      ro_lib_name=$(echo $ux_lib_name | tr /. ./)
      cp -T $S/util/cairo-gobject/.libs/$ux_lib_name $A/lib/$abi_dir/$ux_lib_name,E1F
      $GCCSDK_INSTALL_CROSSBIN/arm-unknown-riscos-ln -s -f $ro_lib_name $A/lib/$abi_dir/libcairo-gobject.so,1C8
      $GCCSDK_INSTALL_CROSSBIN/arm-unknown-riscos-ln -s -f $ro_lib_name $A/lib/$abi_dir/libcairo-gobject.so.2,1C8
    fi

    $AB_HOME/add-riscpkg -package "libcairo2-lib" -name LibCairo2-Lib \
	-depends SharedLibs -depends FontConfig-Lib -depends LibFreeType6-Lib \
	-depends LibPixman-1-Lib -depends LibPNG12-Lib -suggests UnixFont

    # Don't overwrite the original !SharedLibs.!Boot.
    rm $A/\!Boot,feb
  fi

  if [ -e $S/doc/public/html/index.html ]; then
    ab_create_app LibCairo2 Apps/Library libcairo2-doc

    mkdir -p $A/doc/html
    cp -av $S/doc/public/html/* $A/doc/html

    $AB_HOME/add-riscpkg -package "libcairo2-doc" -name LibCairo2-Doc
  fi
}
