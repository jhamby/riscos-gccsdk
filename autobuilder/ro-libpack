#!/bin/bash -e

if [ -z "$RO_PKG" ] ; then 
  echo "RO libpack: RO_PKG must be set to the package filename"
  exit 1
fi

if [ -z "$AB_MAKE" ] ; then
  AB_MAKE=$GCCSDK_INSTALL_ENV/ro-make
fi

if [ -z "$AB_INSTALLTARGET" ] ; then
  AB_INSTALLTARGET=install
fi

mkdir -p $AB_DIR/package/lib
mkdir -p $AB_DIR/package/include/
mkdir -p $AB_DIR/package/doc/$RO_PKG

echo "RO libpack: Running install target: $AB_INSTALLTARGET"
# Adding GCCSDK_INSTALL_ENV in our path to intercept cp/rm/ln calls and
# making sure ro-install gets found during installation.
INSTALL=ro-install PATH=$GCCSDK_INSTALL_ENV:$PATH eval "$AB_MAKE $AB_INSTALLTARGET"

# Check for bogus package conditions
pushd . > /dev/null
cd $AB_DIR/package

# Don't package any binaries
rm -rf bin

files=$(find . -type f)
if [ -z "$files" ] ; then
  echo "RO libpack: No files in $AB_DIR/package to pack" 1>&2
  exit 1
fi

for file in $files ; do
  if grep -q "/#" <<<$file; then
    echo "RO libpack: Temporary file \"$file\" found during packaging" 1>&2
    exit 1
  fi
  if file $file | grep -q -E "386|x86-64" ; then
    echo "RO libpack: Attempt to pack host binary: \"$file\"" 1>&2
    exit 1
  fi
done

popd > /dev/null

if [ ! -z "$AB_INSTALLDOCS" ] ; then
  for file in $AB_INSTALLDOCS ; do
     if [ -e $file ] ; then
       if echo $file | grep "/" > /dev/null ; then
         filename=$(basename $file)
         dirname=$(echo $file | sed s#/$filename\$##)
         mkdir -p $AB_DIR/package/doc/$RO_PKG/$dirname
       fi
       cp -av $file $AB_DIR/package/doc/$RO_PKG/$file
     fi
  done
fi

cd $AB_DIR/package


if [ -d "$AB_OUTPUTLIB" ] ; then

  tar cfvz $AB_OUTPUTLIB/$RO_PKG.tgz $files

  # Process to turn into RISC OS format filenames for zipping

  for file in $(find) ; do
   if echo $file | grep "\.h$" > /dev/null ; then
     filename=$(basename $file | sed s#\.h\$##)
     dirname=$(echo $file | sed s#/$filename\.h\$##)
     mkdir -p $dirname/h
     mv $file $dirname/h/$filename
   fi
  done

  if [ -e $AB_OUTPUTLIB/$RO_PKG.zip ] ; then
    rm $AB_OUTPUTLIB/$RO_PKG.zip
  fi
  $GCCSDK_INSTALL_ENV/bin/zip -, -9 -r -D $AB_OUTPUTLIB/$RO_PKG.zip .

else
  if [ -z "$AB_OUTPUTLIB" ] ; then
    echo "RO libpack: Output directory \$AB_OUTPUTLIB not set - library archives not created"
  else
    echo "RO libpack: Output directory '$AB_OUTPUTLIB' (defined by \$AB_OUTPUTLIB) does not exist - library archives not created"
  fi
fi

cd ..
rm -rf $AB_DIR/package
