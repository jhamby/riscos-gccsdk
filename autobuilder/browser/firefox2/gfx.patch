Index: gfx/src/Makefile.in
===================================================================
RCS file: /cvsroot/mozilla/gfx/src/Makefile.in,v
retrieving revision 1.139
diff -u -r1.139 Makefile.in
--- gfx/src/Makefile.in	20 Feb 2005 03:21:03 -0000	1.139
+++ gfx/src/Makefile.in	25 Nov 2007 22:27:04 -0000
@@ -75,6 +75,10 @@
 DIRS	    += mac
 endif
 
+ifeq ($(MOZ_GFX_TOOLKIT),riscos)
+DIRS        += riscos xlibrgb
+endif
+
 ifneq (,$(filter beos os2 mac windows,$(MOZ_GFX_TOOLKIT)))
 DIRS        += $(MOZ_GFX_TOOLKIT)
 endif
@@ -106,6 +110,9 @@
  ifdef MOZ_ENABLE_PHOTON
  DIRS        += photon
  endif
+ ifdef MOZ_ENABLE_RISCOS
+ DIRS        += xlib
+ endif
 
 endif
 
@@ -129,13 +136,13 @@
 REQUIRES += uconv
 endif
 
-ifneq (,$(filter gtk gtk2 xlib os2,$(MOZ_WIDGET_TOOLKIT)))
+ifneq (,$(filter gtk gtk2 xlib os2 riscos,$(MOZ_WIDGET_TOOLKIT)))
 CPPSRCS += \
         nsRegionImpl.cpp \
         $(NULL)
 endif
 
-ifneq (,$(filter gtk gtk2 xlib beos windows os2,$(MOZ_WIDGET_TOOLKIT)))
+ifneq (,$(filter gtk gtk2 xlib beos windows os2 riscos,$(MOZ_WIDGET_TOOLKIT)))
 CPPSRCS += imgScaler.cpp
 endif
 
Index: gfx/src/x11shared/nsFontDebug.h
===================================================================
RCS file: /cvsroot/mozilla/gfx/src/x11shared/Attic/nsFontDebug.h,v
retrieving revision 1.3
diff -u -r1.3 nsFontDebug.h
--- gfx/src/x11shared/nsFontDebug.h	20 Aug 2004 09:11:25 -0000	1.3
+++ gfx/src/x11shared/nsFontDebug.h	25 Nov 2007 22:27:05 -0000
@@ -52,7 +52,7 @@
 #define NS_FONT_DEBUG_FREETYPE_GRAPHICS 0x800
 
 #undef NS_FONT_DEBUG
-#define NS_FONT_DEBUG 1
+//#define NS_FONT_DEBUG 1
 #ifdef NS_FONT_DEBUG
 
 # define DEBUG_PRINTF(x) \
Index: gfx/src/x11shared/nsX11AlphaBlend.cpp
===================================================================
RCS file: /cvsroot/mozilla/gfx/src/x11shared/Attic/nsX11AlphaBlend.cpp,v
retrieving revision 1.4
diff -u -r1.4 nsX11AlphaBlend.cpp
--- gfx/src/x11shared/nsX11AlphaBlend.cpp	17 Apr 2004 21:52:34 -0000	1.4
+++ gfx/src/x11shared/nsX11AlphaBlend.cpp	25 Nov 2007 22:27:05 -0000
@@ -48,7 +48,7 @@
 #include "nsAntiAliasedGlyph.h"
 #include "nsX11AlphaBlend.h"
 
-#define ENABLE_X11ALPHA_BLEND_PRINTF 1
+//#define ENABLE_X11ALPHA_BLEND_PRINTF 1
 
 #if ENABLE_X11ALPHA_BLEND_PRINTF
 static PRUint32 gX11AlphaBlendDebug;
Index: gfx/src/xlib/Makefile.in
===================================================================
RCS file: /cvsroot/mozilla/gfx/src/xlib/Attic/Makefile.in,v
retrieving revision 1.63
diff -u -r1.63 Makefile.in
--- gfx/src/xlib/Makefile.in	9 Dec 2004 19:28:02 -0000	1.63
+++ gfx/src/xlib/Makefile.in	25 Nov 2007 22:27:05 -0000
@@ -81,10 +81,6 @@
 # Code shared between GTK+, Xlib and Xprint gfx modules
 # (empty for now - but this will be filled soon...)
 X11SHARED_LCPPSRCS = \
-		$(NULL)
-
-CPPSRCS		= \
-		$(X11SHARED_LCPPSRCS) \
 		nsDeviceContextSpecFactoryX.cpp \
 		nsDeviceContextSpecXlib.cpp \
 		nsDeviceContextXlib.cpp \
@@ -100,6 +96,11 @@
 		nsGCCache.cpp \
 		$(NULL)
 
+CPPSRCS         = \
+                $(X11SHARED_LCPPSRCS) \
+                $(NULL)
+
+
 ifdef HAVE_XIE
 CSRCS		+= XIE.c
 endif
Index: gfx/src/xlib/nsDeviceContextXlib.cpp
===================================================================
RCS file: /cvsroot/mozilla/gfx/src/xlib/Attic/nsDeviceContextXlib.cpp,v
retrieving revision 1.70.28.1
diff -u -r1.70.28.1 nsDeviceContextXlib.cpp
--- gfx/src/xlib/nsDeviceContextXlib.cpp	28 Feb 2006 14:55:53 -0000	1.70.28.1
+++ gfx/src/xlib/nsDeviceContextXlib.cpp	25 Nov 2007 22:27:05 -0000
@@ -76,6 +76,7 @@
 
 /* global default font handle */
 static XFontStruct *mDefaultFont = nsnull;
+nscoord nsDeviceContextXlib::mDpi = 96;
 
 nsDeviceContextXlib::nsDeviceContextXlib()
   : nsDeviceContextX()
@@ -116,6 +117,13 @@
     mRCContext          = nsnull;
     mFontMetricsContext = nsnull;
   }
+
+  nsresult rv;
+  nsCOMPtr<nsIPref> prefs = do_GetService(kPrefCID, &rv);
+  if (NS_SUCCEEDED(rv)) {
+    prefs->UnregisterCallback("layout.css.dpi",
+                              prefChanged, (void *)this);
+  }
 }
 
 nsFontMetricsXlibContext      *nsDeviceContextXlib::mFontMetricsContext = nsnull;
@@ -158,6 +166,37 @@
 }
 
 nsresult
+nsDeviceContextXlib::SetDPI(PRInt32 aPrefDPI)
+{
+  PRInt32 OSVal = 96;
+
+  if (aPrefDPI > 0) {
+    // If there's a valid pref value for the logical resolution,
+    // use it.
+    mDpi = aPrefDPI;
+  } else if ((aPrefDPI == 0) || (OSVal > 96)) {
+    // Either if the pref is 0 (force use of OS value) or the OS
+    // value is bigger than 96, use the OS value.
+    mDpi = OSVal;
+  } else {
+    // if we couldn't get the pref or it's negative, and the OS
+    // value is under 96ppi, then use 96.
+    mDpi = 96;
+  }
+  
+  int pt2t = 72;
+
+  // make p2t a nice round number - this prevents rounding problems
+  mPixelsToTwips = float(NSToIntRound(float(NSIntPointsToTwips(pt2t)) / float(mDpi)));
+  mTwipsToPixels = 1.0f / mPixelsToTwips;
+
+   PR_LOG(DeviceContextXlibLM, PR_LOG_DEBUG, ("GFX: dpi=%d t2p=%g p2t=%g\n", dpi, mTwipsToPixels, mPixelsToTwips));
+
+  // XXX need to reflow all documents
+  return NS_OK;
+}
+
+nsresult
 nsDeviceContextXlib::CommonInit(void)
 {
   nsresult rv = NS_OK;;
@@ -187,14 +226,12 @@
           dpi = nscoord(screenWidth / screenWidthIn);
         }
       }
+      prefs->RegisterCallback("layout.css.dpi", prefChanged,
+                              (void *)this);
     }
   }
+  SetDPI(dpi);
 
-  // Do extra rounding (based on GTK). KenF
-  mPixelsToTwips = float(NSToIntRound(float(NSIntPointsToTwips(72)) / float(dpi)));
-  mTwipsToPixels = 1.0f / mPixelsToTwips;
-
-  PR_LOG(DeviceContextXlibLM, PR_LOG_DEBUG, ("GFX: dpi=%d t2p=%g p2t=%g\n", dpi, mTwipsToPixels, mPixelsToTwips));
 
   mWidthFloat  = (float) XWidthOfScreen(mScreen);
   mHeightFloat = (float) XHeightOfScreen(mScreen);
@@ -540,3 +577,27 @@
 }
 
 
+int nsDeviceContextXlib::prefChanged(const char *aPref, void *aClosure)
+{
+  nsDeviceContextXlib *context = (nsDeviceContextXlib*)aClosure;
+  nsresult rv;
+  
+  if (nsCRT::strcmp(aPref, "layout.css.dpi")==0) {
+    PRInt32 dpi;
+    nsCOMPtr<nsIPref> prefs(do_GetService(kPrefCID, &rv));
+    rv = prefs->GetIntPref(aPref, &dpi);
+    if (NS_SUCCEEDED(rv))
+      context->SetDPI(dpi);
+
+    // If this pref changes, we have to clear our cache of stored system
+    // fonts.
+    //ClearCachedSystemFonts();
+  }
+
+  return 0;
+}
+
+
+
+
+
Index: gfx/src/xlib/nsDeviceContextXlib.h
===================================================================
RCS file: /cvsroot/mozilla/gfx/src/xlib/Attic/nsDeviceContextXlib.h,v
retrieving revision 1.33
diff -u -r1.33 nsDeviceContextXlib.h
--- gfx/src/xlib/nsDeviceContextXlib.h	18 Jul 2004 17:36:01 -0000	1.33
+++ gfx/src/xlib/nsDeviceContextXlib.h	25 Nov 2007 22:27:05 -0000
@@ -89,8 +89,11 @@
   virtual void GetFontMetricsContext(nsFontMetricsXlibContext *&aContext) { aContext = mFontMetricsContext; };
   virtual void GetRCContext(nsRenderingContextXlibContext *&aContext) { aContext = mRCContext; };
 
+  static int prefChanged(const char *aPref, void *aClosure);
+
 protected:
-  virtual ~nsDeviceContextXlib();
+  nsresult   SetDPI(PRInt32 aPrefDPI);
+  virtual    ~nsDeviceContextXlib();
 
 private:
   nsresult             CommonInit(void);
@@ -105,6 +108,7 @@
   static nsFontMetricsXlibContext      *mFontMetricsContext;
   static nsRenderingContextXlibContext *mRCContext;
   static int                            mContextCounter;
+  static nscoord mDpi;
 
   float                mWidthFloat;
   float                mHeightFloat;
