? toolkit/mozapps/extensions/src/nsExtensionManager.js
? toolkit/mozapps/update/src/nsUpdateService.js
? toolkit/mozapps/update/src/updater/updater,e1f
? toolkit/xre/nsNativeAppSupportRISCOS.cpp
Index: toolkit/components/remote/Makefile.in
===================================================================
RCS file: /cvsroot/mozilla/toolkit/components/remote/Makefile.in,v
retrieving revision 1.6.8.1
diff -u -r1.6.8.1 Makefile.in
--- toolkit/components/remote/Makefile.in	21 Dec 2007 20:04:18 -0000	1.6.8.1
+++ toolkit/components/remote/Makefile.in	21 Feb 2008 03:35:14 -0000
@@ -80,7 +80,7 @@
 CXXFLAGS += $(TK_CFLAGS)
 
 # Add explicit X11 dependency when building against X11 toolkits
-ifneq (,$(filter gtk gtk2 qt xlib,$(MOZ_WIDGET_TOOLKIT)))
+ifneq (,$(filter gtk gtk2 qt xlib riscos,$(MOZ_WIDGET_TOOLKIT)))
 EXTRA_DSO_LDOPTS += $(XLDFLAGS) $(XLIBS)
 endif
 
Index: toolkit/components/startup/src/nsAppStartup.cpp
===================================================================
RCS file: /cvsroot/mozilla/toolkit/components/startup/src/nsAppStartup.cpp,v
retrieving revision 1.8.4.2
diff -u -r1.8.4.2 nsAppStartup.cpp
--- toolkit/components/startup/src/nsAppStartup.cpp	8 Jun 2006 17:52:31 -0000	1.8.4.2
+++ toolkit/components/startup/src/nsAppStartup.cpp	21 Feb 2008 03:35:14 -0000
@@ -346,7 +346,7 @@
 void
 nsAppStartup::AttemptingQuit(PRBool aAttempt)
 {
-#if defined(XP_MAC) || defined(XP_MACOSX)
+#if defined(XP_MAC) || defined(XP_MACOSX) || defined(XP_RISCOS)
   if (aAttempt) {
     // now even the Mac wants to quit when the last window is closed
     if (!mAttemptingQuit)
Index: toolkit/content/globalOverlay.js
===================================================================
RCS file: /cvsroot/mozilla/toolkit/content/globalOverlay.js,v
retrieving revision 1.18.8.9
diff -u -r1.18.8.9 globalOverlay.js
--- toolkit/content/globalOverlay.js	17 Sep 2006 23:23:45 -0000	1.18.8.9
+++ toolkit/content/globalOverlay.js	21 Feb 2008 03:35:14 -0000
@@ -13,10 +13,12 @@
 
 # Closing the last window doesn't quit the application on OS X.
 #ifndef XP_MACOSX
+#ifndef XP_RISCOS
   // If we're down to the last window and someone tries to shut down, check to make sure we can!
   if (windowCount == 1 && !canQuitApplication())
     return false;
 #endif
+#endif
 
   if (aClose)    
     window.close();
Index: toolkit/content/xul.css
===================================================================
RCS file: /cvsroot/mozilla/toolkit/content/xul.css,v
retrieving revision 1.61.2.22
diff -u -r1.61.2.22 xul.css
--- toolkit/content/xul.css	29 Jan 2007 19:12:06 -0000	1.61.2.22
+++ toolkit/content/xul.css	21 Feb 2008 03:35:14 -0000
@@ -230,6 +230,13 @@
 }
 %endif
 
+%ifdef XP_RISCOS
+toolbar[type="menubar"] {
+  min-height: 0 !important;
+  border: 0 !important;
+}
+%endif
+
 toolbarseparator {
   -moz-binding: url("chrome://global/content/bindings/toolbar.xml#toolbardecoration");
 }
@@ -345,10 +352,15 @@
   display: none;
 }
 %else
+%ifdef XP_RISCOS
+.statusbar-resizerpanel {
+  display: none;
+}
 window[sizemode="maximized"] statusbarpanel.statusbar-resizerpanel {
   visibility: collapse;
 }
 %endif
+%endif
 
 /********** floating popups **********/
 
Index: toolkit/library/nsStaticXULComponents.cpp
===================================================================
RCS file: /cvsroot/mozilla/toolkit/library/nsStaticXULComponents.cpp,v
retrieving revision 1.10.2.3
diff -u -r1.10.2.3 nsStaticXULComponents.cpp
--- toolkit/library/nsStaticXULComponents.cpp	3 Apr 2007 14:32:27 -0000	1.10.2.3
+++ toolkit/library/nsStaticXULComponents.cpp	21 Feb 2008 03:35:14 -0000
@@ -100,6 +100,8 @@
 #  define GFX_MODULES MODULE(nsGfxQtModule)
 #  elif defined(MOZ_WIDGET_XLIB)
 #  define GFX_MODULES MODULE(nsGfxXlibModule)
+#  elif defined(MOZ_WIDGET_RISCOS)
+#  define GFX_MODULES MODULE(nsGfxRISCOSModule)
 #  elif defined(MOZ_WIDGET_PHOTON)
 #  define GFX_MODULES MODULE(nsGfxPhModule)
 #  endif
@@ -120,6 +122,9 @@
 #ifdef MOZ_WIDGET_XLIB
 #define WIDGET_MODULES MODULE(nsWidgetXLIBModule)
 #endif
+#ifdef MOZ_WIDGET_RISCOS
+#define WIDGET_MODULES MODULE(nsWidgetRISCOSModule)
+#endif
 #ifdef MOZ_WIDGET_PHOTON
 #define WIDGET_MODULES MODULE(nsWidgetPhModule)
 #endif
Index: toolkit/profile/src/nsToolkitProfileService.cpp
===================================================================
RCS file: /cvsroot/mozilla/toolkit/profile/src/nsToolkitProfileService.cpp,v
retrieving revision 1.12.2.1
diff -u -r1.12.2.1 nsToolkitProfileService.cpp
--- toolkit/profile/src/nsToolkitProfileService.cpp	19 Aug 2005 19:36:57 -0000	1.12.2.1
+++ toolkit/profile/src/nsToolkitProfileService.cpp	21 Feb 2008 03:35:14 -0000
@@ -305,6 +305,10 @@
 {
     nsresult rv;
 
+    mDirectory = aDirectory;
+    mLocalDirectory = aLocalDirectory;
+    return 0;
+
     rv = mLock.Lock(aDirectory, aUnlocker);
 
     if (NS_SUCCEEDED(rv)) {
Index: toolkit/xre/Makefile.in
===================================================================
RCS file: /cvsroot/mozilla/toolkit/xre/Makefile.in,v
retrieving revision 1.48.2.5
diff -u -r1.48.2.5 Makefile.in
--- toolkit/xre/Makefile.in	6 Feb 2007 07:13:20 -0000	1.48.2.5
+++ toolkit/xre/Makefile.in	21 Feb 2008 03:35:14 -0000
@@ -133,11 +133,15 @@
 ifeq ($(MOZ_WIDGET_TOOLKIT),beos)
 CPPSRCS += nsNativeAppSupportBeOS.cpp
 else
+ifeq ($(MOZ_WIDGET_TOOLKIT),riscos)
+CPPSRCS += nsNativeAppSupportRISCOS.cpp
+else
 CPPSRCS += nsNativeAppSupportDefault.cpp
 endif
 endif
 endif
 endif
+endif
 
 ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
 CMSRCS = MacLaunchHelper.m
Index: toolkit/xre/nsAppRunner.cpp
===================================================================
RCS file: /cvsroot/mozilla/toolkit/xre/nsAppRunner.cpp,v
retrieving revision 1.113.2.24
diff -u -r1.113.2.24 nsAppRunner.cpp
--- toolkit/xre/nsAppRunner.cpp	8 Nov 2007 11:56:25 -0000	1.113.2.24
+++ toolkit/xre/nsAppRunner.cpp	21 Feb 2008 03:35:14 -0000
@@ -1283,7 +1283,11 @@
 
   if (NS_FAILED(rv))
     return rv;
-
+#elif defined(XP_RISCOS)
+  rv = NS_NewNativeLocalFile(nsDependentCString("/Firefox:/firefox-bin"), PR_TRUE, getter_AddRefs(lf));
+  if (NS_FAILED(rv)) {
+    return rv;
+  }
 #elif defined(XP_UNIX)
   struct stat fileStat;
   char exePath[MAXPATHLEN];
@@ -2796,7 +2800,7 @@
           gLogConsoleErrors = PR_TRUE;
         }
         else {
-#ifndef XP_MACOSX
+#if !defined(XP_MACOSX) && !defined(XP_RISCOS)
           appStartup->ExitLastWindowClosingSurvivalArea();
 #endif
 
Index: toolkit/xre/nsNativeAppSupportWin.cpp
===================================================================
RCS file: /cvsroot/mozilla/toolkit/xre/nsNativeAppSupportWin.cpp,v
retrieving revision 1.20.4.4
diff -u -r1.20.4.4 nsNativeAppSupportWin.cpp
--- toolkit/xre/nsNativeAppSupportWin.cpp	6 Feb 2007 07:13:20 -0000	1.20.4.4
+++ toolkit/xre/nsNativeAppSupportWin.cpp	21 Feb 2008 03:35:15 -0000
@@ -663,7 +663,7 @@
  *        If not, then this is the first instance of Mozilla.  In
  *        that case, we create and set up the message window.
  *
- *        The checking for existance of the message window must
+ *        The checking for existence of the message window must
  *        be protected by use of a mutex semaphore.
  */
 NS_IMETHODIMP
Index: toolkit/xre/nsXREDirProvider.cpp
===================================================================
RCS file: /cvsroot/mozilla/toolkit/xre/nsXREDirProvider.cpp,v
retrieving revision 1.37.2.11
diff -u -r1.37.2.11 nsXREDirProvider.cpp
--- toolkit/xre/nsXREDirProvider.cpp	8 May 2007 19:25:29 -0000	1.37.2.11
+++ toolkit/xre/nsXREDirProvider.cpp	21 Feb 2008 03:35:15 -0000
@@ -904,6 +904,18 @@
   rv = localDir->AppendNative(nsDependentCString(gAppData->name));
   NS_ENSURE_SUCCESS(rv, rv);
 
+#elif defined(XP_RISCOS)
+  rv = NS_NewNativeLocalFile(nsDependentCString("/<Choices$Write>/"), PR_TRUE,
+                             getter_AddRefs(localDir));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  if (gAppData->vendor) {
+    rv = localDir->AppendNative(nsDependentCString(gAppData->vendor));
+    NS_ENSURE_SUCCESS(rv, rv);
+  }
+  rv = localDir->AppendNative(nsDependentCString(gAppData->name));
+  NS_ENSURE_SUCCESS(rv, rv);
+
 #elif defined(XP_UNIX)
   const char* homeDir = getenv("HOME");
   if (!homeDir || !*homeDir)
