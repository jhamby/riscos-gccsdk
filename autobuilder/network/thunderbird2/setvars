AB_CVS_ROOT=:pserver:anonymous@cvs-mirror.mozilla.org:/cvsroot
# See <URL:http://developer.mozilla.org/en/docs/CVS_Tags> for CVS branch/tag info.
AB_CVS_TAGORBRANCH=THUNDERBIRD_2_0_0_9_RELEASE
AB_CVS_MODULE=mozilla/client.mk
AB_ZIPNAME=thunderbird-2.0.0.9-$(date +%Y%m%d)

AB_CATEGORY=mail

# 'Official' build:
# We don't have permission for this
#export MOZILLA_OFFICIAL=1
#export BUILD_OFFICIAL=1

# Disable any Autobuilder configure/make.  We drive it all ourselves.
AB_PRECONF=:

AB_MAKE=:

# For Debian/Ubuntu users: make sure you have liborbit-dev, libglib2.0-dev
# and libidl-dev installed.  Other distributions will need to have similar
# named packages installed.

ab_make () {
  # Download source:
  $GCCSDK_INSTALL_ENV/ro-make -f client.mk checkout MOZ_CO_PROJECT=mail

  # Patch downloaded source:
  mozilla_patch

  # Run autoconf (because configure.in got changed).
  # Note this needs to be autconf 2.13 and no other version.
  autoconf2.13
  ( cd nsprpub ; autoconf2.13; $GCCSDK_INSTALL_ENV/ro-config)

  # Massage our configure script and run it:
  $GCCSDK_INSTALL_ENV/ro-config

  # Start the offical build procedure:
  #We can't call the offical build target because that will rerun configure without all
  #all clever hacks & tricks in $GCCSDK_INSTALL_ENV/ro-config.
  $GCCSDK_INSTALL_ENV/ro-make 
}

mozilla_patch () {
  # Apply patches:
  for AB_PATCH in $(find $AB_HOME/$AB_PACKAGEDIR -wholename '*.patch' ) ; do
    echo "Applying RISC OS patch: $AB_PATCH"
    patch -p0 -l < $AB_PATCH || [ "$AB_DEBUG" == "yes" ]
  done

  cp $H/mozconfig $S/.mozconfig

  cp $H/riscos.mk $S/security/coreconf/

  cp $H/xptcstubs_arm_riscos.cpp $S/xpcom/reflect/xptcall/src/md/unix/

  cp $H/nsNativeAppSupportRISCOS.cpp $S/toolkit/xre/

  cp -av $H/widget $S/widget/src/riscos
  cp -av $H/gfx $S/gfx/src/riscos
}

ab_package () {
  cp -pr $H/\!Thunderbird $D
  for f in \
      LICENSE.txt README.txt updater.ini chrome components defaults extensions \
      greprefs isp res \
    ; do
    cp -prL $S/dist/bin/$f $D/\!Thunderbird
  done
  if [ x"$AB_EXEEXT" == x,e1f ] ; then
    # Currently we're building ELF static, so we can create AIF binaries and don't
    # need to be dependent on an ELF loader.
    $GCCSDK_INSTALL_CROSSBIN/elf2aif $S/dist/bin/thunderbird-bin$AB_EXEEXT $D/\!Thunderbird/thunderbird-bin,ff8
  else
    cp -prL $S/dist/bin/thunderbird-bin$AB_EXEEXT $D/\!Thunderbird
  fi
}
