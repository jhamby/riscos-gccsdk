# Setvars for Nettle

AB_GIT=https://github.com/dpt/Nettle

AB_CATEGORY=Network
AB_ROVERSION=2
AB_FULLNAME=Nettle

# RISC OS make wrapper.  This can be set to just "make" if setting the
# path causes problems - e.g., the native compiler is required too
AB_MAKE=$GCCSDK_INSTALL_ENV/ro-make

# Each package should be created in a separate subdirectory
# of the package directory (the $D variable in the package function)
# with the same name as the package name specified in the variable.
AB_PACKAGES=Nettle

# Used for cleaning the build tree
AB_DISTCLEAN="$AB_MAKE -C nettle distclean || $AB_MAKE -C nettle clean"

# Make function
#
# Define this if you want special actions for make
#
ab_make () {
  CC=$GCCSDK_INSTALL_ENV/arm-unknown-riscos-gcc \
    ELF2AIF=$GCCSDK_INSTALL_CROSS/bin/elf2aif \
    $AB_MAKE -C nettle -f GNUmakefile
}

# Package function
#
# You will need to define this to do your packaging for RiscPkg. 
# There are several variables to use here:
# $S build directory
# $D top level of destination package directory
# $H autobuilder directory for package
# $A RISC OS application (after calling ab_create_app, etc)
#
ab_package () {
   AB_PVERSION=`grep -m 1 "RelVer" nettle/!Release,feb | cut -f 3 -d' '`
   mkdir -p $D/Nettle/Apps/Network
   cp -r $S/!Nettle $D/Nettle/Apps/Network
   rm -f $D/Nettle/Apps/Network/!Nettle/.cvsignore
   AB_COMPONENTS="Apps.Network.!Nettle (Movable)"
   $AB_HOME/add-riscpkg -package Nettle -unixlib -copyrightfile $S/nettle/License \
       -depends SocketWatch -depends CryptRandom
}

