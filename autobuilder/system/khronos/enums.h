/*
 * Copyright (c) 2015, GCCSDK Developers.
 * Written by Lee Noar.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the copyright holder nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifdef __ASSEMBLY__

  .set last_enum_value, 0
  .macro enum_val name
  .equiv \name, last_enum_value
  .set last_enum_value, last_enum_value + 1
  .endm

#define ENUM_BEGIN  .set last_enum_value, 0

#define ENUM_VAL(name) enum_val name
#define ENUM_VALASSIGN(name, value)            \
  .set last_enum_value, value                 ;\
  enum_val name
#define ENUM_END(enum_name)

#else

#define ENUM_BEGIN typedef enum {
#define ENUM_VAL(name) name,
#define ENUM_VALASSIGN(name, value) name = value,
#define ENUM_END(enum_name) } enum_name;

#endif

	ENUM_BEGIN
	ENUM_VALASSIGN(SWI_EGL,0x79800)
	ENUM_VAL(SWI_GL)
	ENUM_VAL(SWI_OpenVG)
	ENUM_VAL(SWI_VC)
	ENUM_VAL(SWI_Initialise)
	ENUM_END(swi_number)

	ENUM_BEGIN
	ENUM_VAL(vc_DispManxDisplayClose)
	ENUM_VAL(vc_DispManxDisplayGetInfo)
	ENUM_VAL(vc_DispManxDisplayOpen)
	ENUM_VAL(vc_DispManxElementAdd)
	ENUM_VAL(vc_DispManxElementModified)
	ENUM_VAL(vc_DispManxElementRemove)
	ENUM_VAL(vc_DispManxElementChangeAttributes)
	ENUM_VAL(vc_DispManxElementChangeSource)
	ENUM_VAL(vc_DispManxElementChangeLayer)
	ENUM_VAL(vc_DispManxResourceCreate)
	ENUM_VAL(vc_DispManxResourceDelete)
	ENUM_VAL(vc_DispManxResourceWriteData)
	ENUM_VAL(vc_DispManxSnapshot)
	ENUM_VAL(vc_DispManxUpdateStart)
	ENUM_VAL(vc_DispManxUpdateSubmitSync)
	ENUM_END(vc_reason_code)

	ENUM_BEGIN
	ENUM_VAL(egl_BindAPI)
	ENUM_VAL(egl_BindTexImage)
	ENUM_VAL(egl_ClientWaitSyncKHR)
	ENUM_VAL(egl_ChooseConfig)
	ENUM_VAL(egl_CopyBuffers)
	ENUM_VAL(egl_CreateContext)
	ENUM_VAL(egl_CreateImageKHR)
	ENUM_VAL(egl_CreatePbufferFromClientBuffer)
	ENUM_VAL(egl_CreatePbufferSurface)
	ENUM_VAL(egl_CreatePixmapSurface)
	ENUM_VAL(egl_CreateSyncKHR)
	ENUM_VAL(egl_CreateWindowSurface)
	ENUM_VAL(egl_DestroyContext)
	ENUM_VAL(egl_DestroyImageKHR)
	ENUM_VAL(egl_DestroySurface)
	ENUM_VAL(egl_DestroySyncKHR)
	ENUM_VAL(egl_FlushBRCM)
	ENUM_VAL(egl_GetConfigAttrib)
	ENUM_VAL(egl_GetConfigs)
	ENUM_VAL(egl_GetCurrentContext)
	ENUM_VAL(egl_GetCurrentDisplay)
	ENUM_VAL(egl_GetCurrentSurface)
	ENUM_VAL(egl_GetDisplay)
	ENUM_VAL(egl_GetError)
	ENUM_VAL(egl_GetProcAddress)
	ENUM_VAL(egl_GetSyncAttribKHR)
	ENUM_VAL(egl_Initialize)
	ENUM_VAL(egl_LockSurfaceKHR)
	ENUM_VAL(egl_MakeCurrent)
	ENUM_VAL(egl_QueryAPI)
	ENUM_VAL(egl_QueryContext)
	ENUM_VAL(egl_QueryString)
	ENUM_VAL(egl_QuerySurface)
	ENUM_VAL(egl_ReleaseTexImage)
	ENUM_VAL(egl_ReleaseThread)
	ENUM_VAL(egl_SignalSyncKHR)
	ENUM_VAL(egl_SurfaceAttrib)
	ENUM_VAL(egl_SwapBuffers)
	ENUM_VAL(egl_SwapInterval)
	ENUM_VAL(egl_Terminate)
	ENUM_VAL(egl_UnlockSurfaceKHR)
	ENUM_VAL(egl_WaitClient)
	ENUM_VAL(egl_WaitGL)
	ENUM_VAL(egl_WaitNative)
	ENUM_END(egl_reason_code)

	ENUM_BEGIN
	/* gl.h - Available only in Common profile */
	ENUM_VAL(gl_AlphaFunc)
	ENUM_VAL(gl_ClearColor)
	ENUM_VAL(gl_ClearDepthf)
	ENUM_VAL(gl_ClipPlanef)
	ENUM_VAL(gl_Color4f)
	ENUM_VAL(gl_DepthRangef)
	ENUM_VAL(gl_Fogf)
	ENUM_VAL(gl_Fogfv)
	ENUM_VAL(gl_Frustumf)
	ENUM_VAL(gl_GetClipPlanef)
	ENUM_VAL(gl_GetFloatv)
	ENUM_VAL(gl_GetLightfv)
	ENUM_VAL(gl_GetMaterialfv)
	ENUM_VAL(gl_GetTexEnvfv)
	ENUM_VAL(gl_GetTexParameterfv)
	ENUM_VAL(gl_LightModelf)
	ENUM_VAL(gl_LightModelfv)
	ENUM_VAL(gl_Lightf)
	ENUM_VAL(gl_Lightfv)
	ENUM_VAL(gl_LineWidth)
	ENUM_VAL(gl_LoadMatrixf)
	ENUM_VAL(gl_Materialf)
	ENUM_VAL(gl_Materialfv)
	ENUM_VAL(gl_MultMatrixf)
	ENUM_VAL(gl_MultiTexCoord4f)
	ENUM_VAL(gl_Normal3f)
	ENUM_VAL(gl_Orthof)
	ENUM_VAL(gl_PointParameterf)
	ENUM_VAL(gl_PointParameterfv)
	ENUM_VAL(gl_PointSize)
	ENUM_VAL(gl_PolygonOffset)
	ENUM_VAL(gl_Rotatef)
	ENUM_VAL(gl_Scalef)
	ENUM_VAL(gl_TexEnvf)
	ENUM_VAL(gl_TexEnvfv)
	ENUM_VAL(gl_TexParameterf)
	ENUM_VAL(gl_TexParameterfv)
	ENUM_VAL(gl_Translatef)

	/* gl.h - Available in both Common and Common-Lite profiles */
	ENUM_VAL(gl_ActiveTexture)
	ENUM_VAL(gl_AlphaFuncx)
	ENUM_VAL(gl_BindBuffer)
	ENUM_VAL(gl_BindTexture)
	ENUM_VAL(gl_BlendFunc)
	ENUM_VAL(gl_BufferData)
	ENUM_VAL(gl_BufferSubData)
	ENUM_VAL(gl_Clear)
	ENUM_VAL(gl_ClearColorx)
	ENUM_VAL(gl_ClearDepthx)
	ENUM_VAL(gl_ClearStencil)
	ENUM_VAL(gl_ClientActiveTexture)
	ENUM_VAL(gl_ClipPlanex)
	ENUM_VAL(gl_Color4ub)
	ENUM_VAL(gl_Color4x)
	ENUM_VAL(gl_ColorMask)
	ENUM_VAL(gl_ColorPointer)
	ENUM_VAL(gl_CompressedTexImage2D)
	ENUM_VAL(gl_CompressedTexSubImage2D)
	ENUM_VAL(gl_CopyTexImage2D)
	ENUM_VAL(gl_CopyTexSubImage2D)
	ENUM_VAL(gl_CullFace)
	ENUM_VAL(gl_DeleteBuffers)
	ENUM_VAL(gl_DeleteTextures)
	ENUM_VAL(gl_DepthFunc)
	ENUM_VAL(gl_DepthMask)
	ENUM_VAL(gl_DepthRangex)
	ENUM_VAL(gl_Disable)
	ENUM_VAL(gl_DisableClientState)
	ENUM_VAL(gl_DrawArrays)
	ENUM_VAL(gl_DrawElements)
	ENUM_VAL(gl_Enable)
	ENUM_VAL(gl_EnableClientState)
	ENUM_VAL(gl_Finish)
	ENUM_VAL(gl_Flush)
	ENUM_VAL(gl_Fogx)
	ENUM_VAL(gl_Fogxv)
	ENUM_VAL(gl_FrontFace)
	ENUM_VAL(gl_Frustumx)
	ENUM_VAL(gl_GetBooleanv)
	ENUM_VAL(gl_GetBufferParameteriv)
	ENUM_VAL(gl_GetClipPlanex)
	ENUM_VAL(gl_GenBuffers)
	ENUM_VAL(gl_GenTextures)
	ENUM_VAL(gl_GetError)
	ENUM_VAL(gl_GetFixedv)
	ENUM_VAL(gl_GetIntegerv)
	ENUM_VAL(gl_GetLightxv)
	ENUM_VAL(gl_GetMaterialxv)
	ENUM_VAL(gl_GetPointerv)
	ENUM_VAL(gl_GetString)
	ENUM_VAL(gl_GetTexEnviv)
	ENUM_VAL(gl_GetTexEnvxv)
	ENUM_VAL(gl_GetTexParameteriv)
	ENUM_VAL(gl_GetTexParameterxv)
	ENUM_VAL(gl_Hint)
	
	ENUM_VAL(gl_intAttrib)
	ENUM_VAL(gl_intAttribEnable)
	ENUM_VAL(gl_intAttribGetPointer)
	ENUM_VAL(gl_intAttribPointer)
	ENUM_VAL(gl_intColor)
	
	ENUM_VAL(gl_IsBuffer)
	ENUM_VAL(gl_IsEnabled)
	ENUM_VAL(gl_IsTexture)
	ENUM_VAL(gl_LightModelx)
	ENUM_VAL(gl_LightModelxv)
	ENUM_VAL(gl_Lightx)
	ENUM_VAL(gl_Lightxv)
	ENUM_VAL(gl_LineWidthx)
	ENUM_VAL(gl_LoadIdentity)
	ENUM_VAL(gl_LoadMatrixx)
	ENUM_VAL(gl_LogicOp)
	ENUM_VAL(gl_Materialx)
	ENUM_VAL(gl_Materialxv)
	ENUM_VAL(gl_MatrixMode)
	ENUM_VAL(gl_MultMatrixx)
	ENUM_VAL(gl_MultiTexCoord4x)
	ENUM_VAL(gl_Normal3x)
	ENUM_VAL(gl_NormalPointer)
	ENUM_VAL(gl_Orthox)
	ENUM_VAL(gl_PixelStorei)
	ENUM_VAL(gl_PointParameterx)
	ENUM_VAL(gl_PointParameterxv)
	ENUM_VAL(gl_PointSizex)
	ENUM_VAL(gl_PolygonOffsetx)
	ENUM_VAL(gl_PopMatrix)
	ENUM_VAL(gl_PushMatrix)
	ENUM_VAL(gl_ReadPixels)
	ENUM_VAL(gl_Rotatex)
	ENUM_VAL(gl_SampleCoverage)
	ENUM_VAL(gl_SampleCoveragex)
	ENUM_VAL(gl_Scalex)
	ENUM_VAL(gl_Scissor)
	ENUM_VAL(gl_ShadeModel)
	ENUM_VAL(gl_StencilFunc)
	ENUM_VAL(gl_StencilMask)
	ENUM_VAL(gl_StencilOp)
	ENUM_VAL(gl_TexCoordPointer)
	ENUM_VAL(gl_TexEnvi)
	ENUM_VAL(gl_TexEnvx)
	ENUM_VAL(gl_TexEnviv)
	ENUM_VAL(gl_TexEnvxv)
	ENUM_VAL(gl_TexImage2D)
	ENUM_VAL(gl_TexParameteri)
	ENUM_VAL(gl_TexParameterx)
	ENUM_VAL(gl_TexParameteriv)
	ENUM_VAL(gl_TexParameterxv)
	ENUM_VAL(gl_TexSubImage2D)
	ENUM_VAL(_texSubImage2DAsync)
	ENUM_VAL(gl_Translatex)
	ENUM_VAL(gl_VertexPointer)
	ENUM_VAL(gl_Viewport)

	/* GL2 (where not already listed above) */
	ENUM_VAL(gl_AttachShader)
	ENUM_VAL(gl_BindAttribLocation)
	ENUM_VAL(gl_BindFramebuffer)
	ENUM_VAL(gl_BindRenderbuffer)
	ENUM_VAL(gl_BlendColor)
	ENUM_VAL(gl_BlendEquation)
	ENUM_VAL(gl_BlendEquationSeparate)
	ENUM_VAL(gl_BlendFuncSeparate)
	ENUM_VAL(gl_CheckFramebufferStatus)
	ENUM_VAL(gl_CreateProgram)
	ENUM_VAL(gl_CompileShader)
	ENUM_VAL(gl_CreateShader)
	ENUM_VAL(gl_DeleteFramebuffers)
	ENUM_VAL(gl_DeleteProgram)
	ENUM_VAL(gl_DeleteRenderbuffers)
	ENUM_VAL(gl_DeleteShader)
	ENUM_VAL(gl_DetachShader)
	ENUM_VAL(gl_DisableVertexAttribArray)
	ENUM_VAL(gl_EnableVertexAttribArray)
	ENUM_VAL(gl_FramebufferRenderbuffer)
	ENUM_VAL(gl_FramebufferTexture2D)
	ENUM_VAL(gl_GenerateMipmap)
	ENUM_VAL(gl_GenFramebuffers)
	ENUM_VAL(gl_GenRenderbuffers)
	ENUM_VAL(gl_GetActiveAttrib)
	ENUM_VAL(gl_GetActiveUniform)
	ENUM_VAL(gl_GetAttachedShaders)
	ENUM_VAL(gl_GetAttribLocation)
	ENUM_VAL(gl_GetFramebufferAttachmentParameteriv)
	ENUM_VAL(gl_GetProgramiv)
	ENUM_VAL(gl_GetProgramInfoLog)
	ENUM_VAL(gl_GetRenderbufferParameteriv)
	ENUM_VAL(gl_GetShaderInfoLog)
	ENUM_VAL(gl_GetShaderiv)
	ENUM_VAL(gl_GetShaderPrecisionFormat)
	ENUM_VAL(gl_GetShaderSource)
	ENUM_VAL(gl_GetUniformfv)
	ENUM_VAL(gl_GetUniformiv)
	ENUM_VAL(gl_GetUniformLocation)
	ENUM_VAL(gl_GetVertexAttribfv)
	ENUM_VAL(gl_GetVertexAttribiv)
	ENUM_VAL(gl_GetVertexAttribPointerv)
	ENUM_VAL(gl_IsFramebuffer)
	ENUM_VAL(gl_IsProgram)
	ENUM_VAL(gl_IsRenderbuffer)
	ENUM_VAL(gl_IsShader)
	ENUM_VAL(gl_LinkProgram)
	ENUM_VAL(gl_ReleaseShaderCompiler)
	ENUM_VAL(gl_RenderbufferStorage)
	ENUM_VAL(gl_ShaderBinary)
	ENUM_VAL(gl_ShaderSource)
	ENUM_VAL(gl_StencilFuncSeparate)
	ENUM_VAL(gl_StencilMaskSeparate)
	ENUM_VAL(gl_StencilOpSeparate)
	ENUM_VAL(gl_Uniform1f)
	ENUM_VAL(gl_Uniform1fv)
	ENUM_VAL(gl_Uniform1i)
	ENUM_VAL(gl_Uniform1iv)
	ENUM_VAL(gl_Uniform2f)
	ENUM_VAL(gl_Uniform2fv)
	ENUM_VAL(gl_Uniform2i)
	ENUM_VAL(gl_Uniform2iv)
	ENUM_VAL(gl_Uniform3f)
	ENUM_VAL(gl_Uniform3fv)
	ENUM_VAL(gl_Uniform3i)
	ENUM_VAL(gl_Uniform3iv)
	ENUM_VAL(gl_Uniform4f)
	ENUM_VAL(gl_Uniform4fv)
	ENUM_VAL(gl_Uniform4i)
	ENUM_VAL(gl_Uniform4iv)
	ENUM_VAL(gl_UniformMatrix2fv)
	ENUM_VAL(gl_UniformMatrix3fv)
	ENUM_VAL(gl_UniformMatrix4fv)
	ENUM_VAL(gl_UseProgram)
	ENUM_VAL(gl_ValidateProgram)
	ENUM_VAL(gl_VertexAttrib1f)
	ENUM_VAL(gl_VertexAttrib1fv)
	ENUM_VAL(gl_VertexAttrib2f)
	ENUM_VAL(gl_VertexAttrib2fv)
	ENUM_VAL(gl_VertexAttrib3f)
	ENUM_VAL(gl_VertexAttrib3fv)
	ENUM_VAL(gl_VertexAttrib4f)
	ENUM_VAL(gl_VertexAttrib4fv)
	ENUM_VAL(gl_VertexAttribPointer)

	ENUM_VAL(gl_BindFramebufferOES)
	ENUM_VAL(gl_BindRenderbufferOES)
	ENUM_VAL(gl_CheckFramebufferStatusOES)
	ENUM_VAL(gl_CurrentPaletteMatrixOES)
	ENUM_VAL(gl_DeleteFramebuffersOES)
	ENUM_VAL(gl_DeleteRenderbuffersOES)
	ENUM_VAL(gl_DrawTexsOES)
	ENUM_VAL(gl_DrawTexiOES)
	ENUM_VAL(gl_DrawTexxOES)
	ENUM_VAL(gl_DrawTexsvOES)
	ENUM_VAL(gl_DrawTexivOES)
	ENUM_VAL(gl_DrawTexxvOES)
	ENUM_VAL(gl_DrawTexfOES)
	ENUM_VAL(gl_DrawTexfvOES)
	ENUM_VAL(gl_EGLImageTargetRenderbufferStorageOES)
	ENUM_VAL(gl_EGLImageTargetTexture2DOES)
	ENUM_VAL(gl_FramebufferRenderbufferOES)
	ENUM_VAL(gl_FramebufferTexture2DOES)
	ENUM_VAL(gl_GenFramebuffersOES)
	ENUM_VAL(gl_GenRenderbuffersOES)
	ENUM_VAL(gl_GetBufferPointervOES)
	ENUM_VAL(gl_GetFramebufferAttachmentParameterivOES)
	ENUM_VAL(gl_GetRenderbufferParameterivOES)
	ENUM_VAL(gl_IsFramebufferOES)
	ENUM_VAL(gl_IsRenderbufferOES)
	ENUM_VAL(gl_LoadPaletteFromModelViewMatrixOES)
	ENUM_VAL(gl_MapBufferOES)
	ENUM_VAL(gl_MatrixIndexPointerOES)
	ENUM_VAL(gl_GenerateMipmapOES)
	ENUM_VAL(gl_PointSizePointerOES)
	ENUM_VAL(gl_RenderbufferStorageOES)
	ENUM_VAL(gl_WeightPointerOES)
	ENUM_VAL(gl_QueryMatrixxOES)
	ENUM_VAL(gl_UnmapBufferOES)

	ENUM_VAL(gl_DiscardFramebufferEXT)
	ENUM_END(gl_reason_code)

	ENUM_BEGIN
	ENUM_VAL(vg_AppendPath)
	ENUM_VAL(vg_AppendPathData)
	ENUM_VAL(vg_ChildImage)
	ENUM_VAL(vg_Clear)
	ENUM_VAL(vg_ClearGlyph)
	ENUM_VAL(vg_ClearImage)
	ENUM_VAL(vg_ClearPath)
	ENUM_VAL(vg_ColorMatrix)
	ENUM_VAL(vg_Convolve)
	ENUM_VAL(vg_CopyImage)
	ENUM_VAL(vg_CopyMask)
	ENUM_VAL(vg_CopyPixels)
	ENUM_VAL(vg_CreateEGLImageTargetKHR)
	ENUM_VAL(vg_CreateFont)
	ENUM_VAL(vg_CreateImage)
	ENUM_VAL(vg_CreateMaskLayer)
	ENUM_VAL(vg_CreatePaint)
	ENUM_VAL(vg_CreatePath)
	ENUM_VAL(vg_DestroyFont)
	ENUM_VAL(vg_DestroyImage)
	ENUM_VAL(vg_DestroyMaskLayer)
	ENUM_VAL(vg_DestroyPaint)
	ENUM_VAL(vg_DestroyPath)
	ENUM_VAL(vg_DrawGlyph)
	
	ENUM_VAL(vg_DrawGlyphs)
	ENUM_VAL(vg_DrawImage)
	ENUM_VAL(vg_DrawPath)
	ENUM_VAL(vg_FillMaskLayer)
	ENUM_VAL(vg_Finish)
	ENUM_VAL(vg_Flush)
	ENUM_VAL(vg_GaussianBlur)
	ENUM_VAL(vg_GetColor)
	ENUM_VAL(vg_GetError)
	ENUM_VAL(vg_Getf)
	ENUM_VAL(vg_Getfv)
	ENUM_VAL(vg_Geti)
	ENUM_VAL(vg_GetImageSubData)
	ENUM_VAL(vg_Getiv)
	ENUM_VAL(vg_GetMatrix)
	ENUM_VAL(vg_GetPaint)
	ENUM_VAL(vg_GetParameterf)
	ENUM_VAL(vg_GetParameterfv)
	ENUM_VAL(vg_GetParameteri)
	ENUM_VAL(vg_GetParameteriv)
	ENUM_VAL(vg_GetParameterVectorSize)
	ENUM_VAL(vg_GetParent)
	ENUM_VAL(vg_GetPathCapabilities)
	ENUM_VAL(vg_GetPixels)
	ENUM_VAL(vg_GetString)
	ENUM_VAL(vg_GetVectorSize)
	ENUM_VAL(vg_HardwareQuery)
	ENUM_VAL(vg_ImageSubData)
	ENUM_VAL(vg_InterpolatePath)
	ENUM_VAL(vg_LoadIdentity)
	ENUM_VAL(vg_LoadMatrix)
	ENUM_VAL(vg_Lookup)
	ENUM_VAL(vg_LookupSingle)
	ENUM_VAL(vg_Mask)
	ENUM_VAL(vg_ModifyPathCoords)
	ENUM_VAL(vg_MultMatrix)
	ENUM_VAL(vg_PaintPattern)
	ENUM_VAL(vg_PathBounds)
	ENUM_VAL(vg_PathLength)
	ENUM_VAL(vg_PathTransformedBounds)
	ENUM_VAL(vg_PointAlongPath)
	ENUM_VAL(vg_ReadPixels)
	ENUM_VAL(vg_RemovePathCapabilities)
	ENUM_VAL(vg_RenderToMask)
	ENUM_VAL(vg_Rotate)
	ENUM_VAL(vg_Scale)
	ENUM_VAL(vg_SeparableConvolve)
	ENUM_VAL(vg_SetColor)
	ENUM_VAL(vg_Setf)
	ENUM_VAL(vg_Setfv)
	ENUM_VAL(vg_SetGlyphToImage)
	ENUM_VAL(vg_SetGlyphToPath)
	ENUM_VAL(vg_Seti)
	ENUM_VAL(vg_Setiv)
	ENUM_VAL(vg_SetPaint)
	ENUM_VAL(vg_SetParameterf)
	ENUM_VAL(vg_SetParameterfv)
	ENUM_VAL(vg_SetParameteri)
	ENUM_VAL(vg_SetParameteriv)
	ENUM_VAL(vg_SetPixels)
	ENUM_VAL(vg_Shear)
	ENUM_VAL(vg_TransformPath)
	ENUM_VAL(vg_Translate)
	ENUM_VAL(vg_WritePixels)

	ENUM_VAL(vgu_Arc)
	ENUM_VAL(vgu_ComputeWarpQuadToQuad)
	ENUM_VAL(vgu_ComputeWarpQuadToSquare)
	ENUM_VAL(vgu_ComputeWarpSquareToQuad)
	ENUM_VAL(vgu_Ellipse)
	ENUM_VAL(vgu_Line)
	ENUM_VAL(vgu_Polygon)
	ENUM_VAL(vgu_Rect)
	ENUM_VAL(vgu_RoundRect)

	ENUM_END(openvg_reason_code)
