/* This file contains the code numbers used to store some specific tree
   nodes used in a GPI file as produced by the GNU Pascal compiler.
   Copyright (C) 1997  Free Software Foundation, Inc.

This file is part of GNU Pascal.

GNU Pascal is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Pascal is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Pascal; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */


/*
 * The numbers are added to LAST_AND_UNUSED_TREE_CODE; the sum serves
 * as a one-byte abbreviation to store the given node in the GPI file.
 *
 * The nodes are declared in gpc-decl.c and in util.c.
 *
 * For more about GPI files, see gpc-module.c and section
 * "GPI Files" of the Texinfo documentation.
 *
 * Peter Gerwinski, Essen, Germany
 * <peter@gerwinski.de>
 */
 
/* These are in gpc-decl.c. */
PROCESS_NODE (1, error_mark_node);
PROCESS_NODE (2, short_integer_type_node);
PROCESS_NODE (3, integer_type_node);
PROCESS_NODE (4, long_integer_type_node);
PROCESS_NODE (5, long_long_integer_type_node);
PROCESS_NODE (6, short_unsigned_type_node);
PROCESS_NODE (7, unsigned_type_node);
PROCESS_NODE (8, long_unsigned_type_node);
PROCESS_NODE (9, long_long_unsigned_type_node);
PROCESS_NODE (10, boolean_type_node);
PROCESS_NODE (11, boolean_false_node);
PROCESS_NODE (12, boolean_true_node);
PROCESS_NODE (13, ptrdiff_type_node);
PROCESS_NODE (14, unsigned_char_type_node);
PROCESS_NODE (15, signed_char_type_node);
PROCESS_NODE (16, char_type_node);
PROCESS_NODE (17, wchar_type_node);
PROCESS_NODE (18, signed_wchar_type_node);
PROCESS_NODE (19, unsigned_wchar_type_node);
PROCESS_NODE (20, float_type_node);
PROCESS_NODE (21, double_type_node);
PROCESS_NODE (22, long_double_type_node);
PROCESS_NODE (23, complex_integer_type_node);
PROCESS_NODE (24, complex_float_type_node);
PROCESS_NODE (25, complex_double_type_node);
PROCESS_NODE (26, complex_long_double_type_node);
PROCESS_NODE (27, intQI_type_node);
PROCESS_NODE (28, intHI_type_node);
PROCESS_NODE (29, intSI_type_node);
PROCESS_NODE (30, intDI_type_node);
PROCESS_NODE (31, unsigned_intQI_type_node);
PROCESS_NODE (32, unsigned_intHI_type_node);
PROCESS_NODE (33, unsigned_intSI_type_node);
PROCESS_NODE (34, unsigned_intDI_type_node);
PROCESS_NODE (35, void_type_node);
PROCESS_NODE (36, ptr_type_node);
PROCESS_NODE (37, const_ptr_type_node);
PROCESS_NODE (38, string_type_node);
PROCESS_NODE (39, const_string_type_node);
PROCESS_NODE (40, char_array_type_node);
PROCESS_NODE (41, int_array_type_node);
PROCESS_NODE (42, wchar_array_type_node);
PROCESS_NODE (43, default_function_type);
PROCESS_NODE (44, double_ftype_double);
PROCESS_NODE (45, double_ftype_double_double);
PROCESS_NODE (46, int_ftype_int);
PROCESS_NODE (47, long_ftype_long);

#ifndef GPC
/* Not present in the Pascal compiler. */
PROCESS_NODE (48, float_ftype_float);
PROCESS_NODE (49, ldouble_ftype_ldouble);
#endif

PROCESS_NODE (50, void_ftype_ptr_ptr_int);
PROCESS_NODE (51, int_ftype_ptr_ptr_int);
PROCESS_NODE (52, void_ftype_ptr_int_int);
PROCESS_NODE (53, string_ftype_ptr_ptr);
PROCESS_NODE (54, int_ftype_string_string);
PROCESS_NODE (55, int_ftype_cptr_cptr_sizet);
PROCESS_NODE (56, integer_zero_node);
PROCESS_NODE (57, null_pointer_node);
PROCESS_NODE (58, integer_one_node);

/* These are in util.c */
PROCESS_NODE (59, integer_set_type_node);
PROCESS_NODE (60, integer_ptr_type_node);
PROCESS_NODE (61, size_of_file_type);
PROCESS_NODE (62, text_type_node);
PROCESS_NODE (64, complex_type_node);
PROCESS_NODE (65, integer_maxint_node);
PROCESS_NODE (66, identifier_output);
PROCESS_NODE (67, identifier_input);
PROCESS_NODE (68, global_input_file_node);
PROCESS_NODE (69, global_output_file_node);
PROCESS_NODE (70, real_zero_node);
PROCESS_NODE (71, char_array_index_type_node);
PROCESS_NODE (72, string_schema_proto_type);
PROCESS_NODE (73, const_string_schema_proto_type);
PROCESS_NODE (74, cstring_type_node);
PROCESS_NODE (75, empty_arglist);
PROCESS_NODE (76, complex_zero_node);
PROCESS_NODE (77, real_max_node);
PROCESS_NODE (78, real_min_node);
PROCESS_NODE (79, real_eps_node);
PROCESS_NODE (80, char_max_node);
PROCESS_NODE (81, gpc_type_TIME);
PROCESS_NODE (82, gpc_type_DATE);
PROCESS_NODE (83, gpc_type_TIMESTAMP);
PROCESS_NODE (84, gpc_type_BINDINGTYPE);

/* End of gpc-nodes.def */
