TARGET_LIBGCC2_CFLAGS=-O2
LIBGCC2_DEBUG_CFLAGS=

# Don't build enquire
ENQUIRE=

# Can't test libgcc1 since it tries to bring in things like malloc, and
# there probably isn't a libc to link against until we have a compiler.
LIBGCC1_TEST =

CROSS_LIBGCC1 = libgcc1-asm.a
LIB1ASMSRC = arm/lib1aof.s
LIB1ASMFUNCS = _ashldi3 _ashrdi3 _clear_icache _cmpdi2 _divdi3 _divsi3 _ffs \
	_fixunssfdi _fixunsdfdi _fixunsxfdi _floatdidf _floatdisf _floatdixf \
	_lshrdi3 _moddi3 _modsi3 _muldi3 _ucmpdi2 _udivdi3 _udivsi3 _umoddi3 \
	_umodsi3 _ctors _builtin_next_arg _arm_alloca
LIB2FUNCS = __gcc_bcmp _varargs __dummy _eprintf _bb _shtab _trampoline \
	__main _exit _pure

AR_FLAGS_FOR_TARGET=-c -i
AR_EXTRACT_FLAGS_FOR_TARGET=-x

#Don't try to run fixproto
STMP_FIXPROTO =

# These are really part of libgcc1, but this will cause them to be
# built correctly, so...

LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#ifdef __SOFTFP__' > fp-bit.c
	echo '#define FLOAT' >> fp-bit.c
	echo '#ifndef __ARMEB__' >> fp-bit.c
	echo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c
	echo '#endif' >> fp-bit.c
	cat $(srcdir)/config/fp-bit.c >> fp-bit.c
	echo '#endif' >> fp-bit.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#ifdef __SOFTFP__' > dp-bit.c
	echo '#ifndef __ARMEB__' >> dp-bit.c
	echo '#define FLOAT_BIT_ORDER_MISMATCH' >> dp-bit.c
	echo '#define FLOAT_WORD_ORDER_MISMATCH' >> dp-bit.c
	echo '#endif' >> dp-bit.c
	cat $(srcdir)/config/fp-bit.c >> dp-bit.c
	echo '#endif' >> dp-bit.c

MULTILIB_OPTIONS =
MULTILIB_DIRNAMES =
MULTILIB_EXCEPTIONS =

