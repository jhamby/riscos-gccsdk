# Makefile for the GNU Compiler Collection for ARM/RISC OS
# Copyright (c) 1997, 1998, 1999, 2000 Nick Burrett
# Written by Nick Burrett <nick@dsvr.net>

CC_S = $(CROSS_CC) -xassembler-with-cpp
INCLUDES = -I. -I../../include -I./include -I./config
CROSS_CFLAGS += -D$(targetsystem)
CROSS_CFLAGS += -DIN_GCC -DHAVE_CONFIG_H -DIN_LIBGCC2 -D__GCC_FLOAT_NOT_NEEDED

FPBIT_FLAGS=-DFINE_GRAINED_LIBRARIES -I. -I../../include -I./config

libgccobjdir=$(objdir)/gcc-$(VERSION)/libgcc/$(TRG)

# All the file that go into the gcc library
GCC_LIB_COMMON = $(libgccobjdir)/dummy.o \
	$(libgccobjdir)/getopt.o \
	$(libgccobjdir)/getopt1.o \
	$(libgccobjdir)/floatdidf.o \
	$(libgccobjdir)/divsi3.o \
	$(libgccobjdir)/modsi3.o \
	$(libgccobjdir)/umodsi3.o \
	$(libgccobjdir)/udivsi3.o \
	$(libgccobjdir)/fixsfdi.o \
	$(libgccobjdir)/fixunsxfdi.o \
	$(libgccobjdir)/fixunsdfdi.o \
	$(libgccobjdir)/fixunssfdi.o \
	$(libgccobjdir)/libgcc_fix.o \
	$(libgccobjdir)/ffs.o \
	$(libgccobjdir)/dynamic.o \
	$(libgccobjdir)/gcc_bcmp.o \
	$(libgccobjdir)/ashldi3.o \
	$(libgccobjdir)/ashrdi3.o \
	$(libgccobjdir)/lshrdi3.o \
	$(libgccobjdir)/clricache.o \
	$(libgccobjdir)/divdi3.o \
	$(libgccobjdir)/muldi3.o \
	$(libgccobjdir)/moddi3.o \
	$(libgccobjdir)/udivdi3.o \
	$(libgccobjdir)/umoddi3.o \
	$(libgccobjdir)/cmpdi2.o \
	$(libgccobjdir)/ucmpdi2.o \
	$(libgccobjdir)/ctors.o \
	$(libgccobjdir)/nextarg.o \
	$(libgccobjdir)/main.o \
	$(libgccobjdir)/eh.o \
	$(libgccobjdir)/eprintf.o \
	$(libgccobjdir)/pure.o \
	$(libgccobjdir)/bb.o \
	$(libgccobjdir)/div0.o

FP_BIT_DOUBLE = $(libgccobjdir)/pack_df.o \
	$(libgccobjdir)/unpack_df.o \
	$(libgccobjdir)/addsub_df.o \
	$(libgccobjdir)/mul_df.o \
	$(libgccobjdir)/div_df.o \
	$(libgccobjdir)/fpcmp_p_df.o \
	$(libgccobjdir)/compare_df.o \
	$(libgccobjdir)/eq_df.o \
	$(libgccobjdir)/ne_df.o \
	$(libgccobjdir)/gt_df.o \
	$(libgccobjdir)/ge_df.o \
	$(libgccobjdir)/lt_df.o \
	$(libgccobjdir)/le_df.o \
	$(libgccobjdir)/si_to_df.o \
	$(libgccobjdir)/df_to_si.o \
	$(libgccobjdir)/df_to_usi.o \
	$(libgccobjdir)/negate_df.o \
	$(libgccobjdir)/make_df.o \
	$(libgccobjdir)/df_to_sf.o

FP_BIT_SINGLE = $(libgccobjdir)/pack_sf.o \
	$(libgccobjdir)/unpack_sf.o \
	$(libgccobjdir)/addsub_sf.o \
	$(libgccobjdir)/mul_sf.o \
	$(libgccobjdir)/div_sf.o \
	$(libgccobjdir)/fpcmp_p_sf.o \
	$(libgccobjdir)/compare_sf.o \
	$(libgccobjdir)/eq_sf.o \
	$(libgccobjdir)/ne_sf.o \
	$(libgccobjdir)/gt_sf.o \
	$(libgccobjdir)/ge_sf.o \
	$(libgccobjdir)/lt_sf.o \
	$(libgccobjdir)/le_sf.o \
	$(libgccobjdir)/si_to_sf.o \
	$(libgccobjdir)/sf_to_usi.o \
	$(libgccobjdir)/sf_to_si.o \
	$(libgccobjdir)/negate_sf.o \
	$(libgccobjdir)/make_sf.o \
	$(libgccobjdir)/sf_to_df.o


all:	$(ux_gcc_bin_dir)/$(TRG)/libgcc.o $(ro_gcc_bin_dir)/$(TRG)/o/libgcc

install_headers:
	$(insthdr) ginclude "*.h" . $(ux_gccpkg)/$(gn_gcc_include_dir) $(ro_gccpkg)/$(gn_gcc_include_dir)

$(ux_gcc_bin_dir)/$(TRG)/libgcc.o: $(GCC_LIB_ULIB) \
	$(GCC_LIB_COMMON) $(FP_BIT_DOUBLE) $(FP_BIT_SINGLE)
	$(CROSS_AR) $(CROSS_AR_FLAGS) -c $@ $(GCC_LIB_ULIB) \
	$(GCC_LIB_COMMON) $(FP_BIT_DOUBLE) $(FP_BIT_SINGLE)

$(ro_gcc_bin_dir)/$(TRG)/o/libgcc: $(GCC_LIB_ULIB) \
	$(GCC_LIB_COMMON) $(FP_BIT_DOUBLE) $(FP_BIT_SINGLE)
	$(CROSS_AR) $(CROSS_AR_FLAGS) -c $@ $(GCC_LIB_ULIB) \
	$(GCC_LIB_COMMON) $(FP_BIT_DOUBLE) $(FP_BIT_SINGLE)

############################################################################

# GCC standard run-time libraries
$(libgccobjdir)/getopt.o:	../../libiberty/getopt.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c ../../libiberty/getopt.c $(INCLUDES)

$(libgccobjdir)/getopt1.o:	../../libiberty/getopt1.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c ../../libiberty/getopt1.c $(INCLUDES)

$(libgccobjdir)/dummy.o:	libgcc2.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c libgcc2.c $(INCLUDES) -DL__dummy

$(libgccobjdir)/gcc_bcmp.o:	libgcc2.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c libgcc2.c $(INCLUDES) -DL__gcc_bcmp

$(libgccobjdir)/eh.o:	libgcc2.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c libgcc2.c $(INCLUDES) -DL_eh -DDONT_USE_BUILTIN_SETJMP

$(libgccobjdir)/eprintf.o:	libgcc2.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c libgcc2.c $(INCLUDES) -DL_eprintf

$(libgccobjdir)/pure.o:	libgcc2.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c libgcc2.c $(INCLUDES) -DL_pure

$(libgccobjdir)/main.o:	libgcc2.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c libgcc2.c $(INCLUDES) -DL__main -DCTOR_LISTS_DEFINED_EXTERNALLY

$(libgccobjdir)/bb.o:	libgcc2.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c libgcc2.c $(INCLUDES) -DL_bb



# Assembler versions of certain library functions

$(libgccobjdir)/div0.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_div0
$(libgccobjdir)/dynamic.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_arm_alloca
$(libgccobjdir)/clricache.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_clear_icache
$(libgccobjdir)/ctors.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_ctors
$(libgccobjdir)/libgcc_fix.o:	config/arm/libgcc_fix.s
	$(CC_S) -c config/arm/libgcc_fix.s -o $@
$(libgccobjdir)/cmpdi2.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_cmpdi2
$(libgccobjdir)/ucmpdi2.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_ucmpdi2
$(libgccobjdir)/modsi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_modsi3
$(libgccobjdir)/umodsi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_umodsi3
$(libgccobjdir)/divsi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_divsi3
$(libgccobjdir)/udivsi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_udivsi3
$(libgccobjdir)/moddi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_moddi3
$(libgccobjdir)/umoddi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_umoddi3
$(libgccobjdir)/divdi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_divdi3
$(libgccobjdir)/udivdi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_udivdi3
#$(libgccobjdir)/floatdisf.o:	config/arm/lib1aof.s
#	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_floatdisf
$(libgccobjdir)/floatdidf.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_floatdidf
#$(libgccobjdir)/floatdixf.o:	config/arm/lib1aof.s
#	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_floatdixf
$(libgccobjdir)/fixunsxfdi.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_fixunsxfdi
$(libgccobjdir)/fixunsdfdi.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_fixunsdfdi
$(libgccobjdir)/fixunssfdi.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_fixunssfdi
$(libgccobjdir)/fixsfdi.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_fixsfdi
$(libgccobjdir)/ffs.o:		config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_ffs
$(libgccobjdir)/ashldi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_ashldi3
$(libgccobjdir)/ashrdi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_ashrdi3
$(libgccobjdir)/lshrdi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_lshrdi3
$(libgccobjdir)/muldi3.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_muldi3
$(libgccobjdir)/nextarg.o:	config/arm/lib1aof.s
	$(CC_S) -c config/arm/lib1aof.s -o $@ -DL_builtin_next_arg

# fp-bit library (double precision)
$(libgccobjdir)/pack_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_pack_df
$(libgccobjdir)/unpack_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_unpack_df
$(libgccobjdir)/addsub_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_addsub_df
$(libgccobjdir)/mul_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_mul_df
$(libgccobjdir)/div_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_div_df
$(libgccobjdir)/fpcmp_p_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_fpcmp_parts_df
$(libgccobjdir)/compare_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_compare_df
$(libgccobjdir)/eq_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_eq_df
$(libgccobjdir)/ne_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_ne_df
$(libgccobjdir)/gt_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_gt_df
$(libgccobjdir)/ge_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_ge_df
$(libgccobjdir)/lt_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_lt_df
$(libgccobjdir)/le_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_le_df
$(libgccobjdir)/si_to_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_si_to_df
$(libgccobjdir)/df_to_si.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_df_to_si
$(libgccobjdir)/df_to_usi.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_df_to_usi
$(libgccobjdir)/negate_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_negate_df
$(libgccobjdir)/make_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_make_df


# fplib (single precision)
$(libgccobjdir)/pack_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_pack_sf
$(libgccobjdir)/unpack_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_unpack_sf
$(libgccobjdir)/addsub_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_addsub_sf
$(libgccobjdir)/mul_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_mul_sf
$(libgccobjdir)/div_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_div_sf
$(libgccobjdir)/fpcmp_p_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_fpcmp_parts_sf
$(libgccobjdir)/compare_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_compare_sf
$(libgccobjdir)/eq_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_eq_sf
$(libgccobjdir)/ne_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_ne_sf
$(libgccobjdir)/gt_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_gt_sf
$(libgccobjdir)/ge_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_ge_sf
$(libgccobjdir)/lt_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_lt_sf
$(libgccobjdir)/le_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_le_sf
$(libgccobjdir)/si_to_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_si_to_sf
$(libgccobjdir)/sf_to_si.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_sf_to_si
$(libgccobjdir)/sf_to_usi.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_sf_to_usi
$(libgccobjdir)/negate_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_negate_sf
$(libgccobjdir)/make_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_make_sf

$(libgccobjdir)/df_to_sf.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c $(FPBIT_FLAGS) -DL_df_to_sf
$(libgccobjdir)/sf_to_df.o:	config/fp-bit.c
	$(CROSS_CC) $(CROSS_CFLAGS) -o $@ -c config/fp-bit.c -DFLOAT $(FPBIT_FLAGS) -DL_sf_to_df
