; Generated by gcc 2.95.2 19991024 (release) for ARM/RISC OS
__r0	RN	0
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	ALIGN
|__store_long|
	KEEP |__store_long|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	stmfd	__sp!, {__v1, __v2, __lr}
	cmp	__a1, #0
	movlt	__v2, #128
	movge	__v2, #0
	cmp	__a1, #0
	mov	__a4, __a1
	bge	|L..5|
	rsb	__a1, __a1, #0
	rsb	__ip, __a1, #0
	cmp	__a4, __ip
	beq	|L..5|
|L..21|
	mov	__a1, #1
	ldmfd	__sp!, {__v1, __v2, __pc}^
|L..5|
	mov	__a4, #0
	cmp	__a3, #4
	movcc	__ip, __a3
	movcs	__ip, #4
	cmp	__a4, __ip
	bcs	|L..8|
	sub	__v1, __a3, #1
	mov	__lr, __ip
|L..10|
	cmp	__a4, __v1
	andeq	__ip, __a1, #127
	streqb	__ip, [__a2, __a4]
|L..11|
	strneb	__a1, [__a2, __a4]
|L..12|
	cmp	__a1, #0
	addlt	__ip, __a1, #255
	movge	__ip, __a1
	mov	__a1, __ip, asr #8
	add	__a4, __a4, #1
	cmp	__a4, __lr
	bcc	|L..10|
|L..8|
	add	__ip, __a1, #1
	cmp	__ip, #1
	bhi	|L..21|
	cmp	__a4, __a3
	add	__lr, __a3, __a2
	bcs	|L..16|
	mov	__ip, #0
|L..18|
	strb	__ip, [__a2, __a4]
	add	__a4, __a4, #1
	cmp	__a4, __a3
	bcc	|L..18|
|L..16|
	mvn	__a3, #0
	ldrb	__ip, [__lr, __a3]
	mov	__a1, #0
	orr	__ip, __ip, __v2
	strb	__ip, [__lr, __a3]
	ldmfd	__sp!, {__v1, __v2, __pc}^
	ALIGN
|__fetch_long|
	KEEP |__fetch_long|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	stmfd	__sp!, {__v1, __v2, __lr}
	mov	__lr, #0
	sub	__a4, __a3, #1
	cmp	__a4, #3
	mov	__v2, __a1
	bls	|L..24|
	mov	__a1, __a4
|L..26|
	cmp	__a4, __a1
	ldrb	__ip, [__a2, __a4]	; zero_extendqisi2
	bne	|L..28|
	tst	__ip, #127
	bne	|L..29|
	b	|L..25|
|L..28|
	cmp	__ip, #0
	beq	|L..25|
|L..29|
	mov	__a1, #1
	ldmfd	__sp!, {__v1, __v2, __pc}^
|L..25|
	sub	__a4, __a4, #1
	cmp	__a4, #3
	bhi	|L..26|
|L..24|
	cmp	__a4, #0
	add	__v1, __a3, __a2
	blt	|L..40|
	sub	__a3, __a3, #1
|L..34|
	cmp	__a4, __a3
	mov	__a1, __lr, asl #8
	ldrb	__ip, [__a2, __a4]	; zero_extendqisi2
	andeq	__ip, __ip, #127
	addeq	__lr, __a1, __ip
|L..35|
	orrne	__lr, __a1, __ip
|L..33|
	subs	__a4, __a4, #1
	bpl	|L..34|
|L..40|
	mov	__a1, #0
	ldrb	__ip, [__v1, #-1]	; zero_extendqisi2
	cmp	__lr, __a1
	movle	__ip, #0
	movgt	__ip, __ip, lsr #7
	cmp	__ip, __a1
	rsbne	__lr, __lr, #0
	str	__lr, [__v2, #0]
	ldmfd	__sp!, {__v1, __v2, __pc}^
	ALIGN
|__write_long|
	KEEP |__write_long|
	; args = 0, pretend = 0, frame = 12, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #12
	mov	__v1, __a3
	cmp	__v1, #10
	mov	__v2, __a2
	bhi	|L..43|
	mov	__a2, __sp
	bl	|__store_long|
	cmp	__a1, #0
	beq	|L..42|
|L..43|
	mov	__a1, #1
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
|L..42|
	mov	__a1, __sp
	mov	__a2, #1
	mov	__a3, __v1
	mov	__a4, __v2
	bl	|fwrite|
	subs	__a1, __a1, __v1
	movne	__a1, #1
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
	ALIGN
|__read_long|
	KEEP |__read_long|
	; args = 0, pretend = 0, frame = 12, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #12
	mov	__v1, __a3
	cmp	__v1, #10
	mov	__v2, __a1
	mov	__a4, __a2
	bhi	|L..48|
	mov	__a1, __sp
	mov	__a2, #1
	bl	|fread|
	mov	__a3, __a1
	cmp	__a3, __v1
	beq	|L..47|
|L..48|
	mov	__a1, #1
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
|L..47|
	mov	__a1, __v2
	mov	__a2, __sp
	bl	|__fetch_long|
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
	IMPORT	|__udivsi3|
	ALIGN
|num_digits|
	KEEP |num_digits|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v2, __a2
	cmp	__v2, #16
	moveq	__ip, #0
	movne	__ip, __a1, lsr #31
	cmp	__ip, #0
	rsbne	__a1, __a1, #0
	mov	__v1, __ip
|L..56|
	add	__v1, __v1, #1
	mov	__a2, __v2
	bl	|__udivsi3|
	cmp	__a1, #0
	bne	|L..56|
	mov	__a1, __v1
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
	ALIGN
|LC..0|
	DCB &2e, &64, &61, &00
	ALIGN
|LC..1|
	DCB &72, &00
	ALIGN
|LC..2|
	DCB &61, &72, &63, &20
	DCB &70, &72, &6f, &66
	DCB &69, &6c, &69, &6e
	DCB &67, &3a, &20, &43
	DCB &61, &6e, &27, &74
	DCB &20, &72, &65, &61
	DCB &64, &20, &6f, &75
	DCB &74, &70, &75, &74
	DCB &20, &66, &69, &6c
	DCB &65, &20, &25, &73
	DCB &2e, &0a, &00
	ALIGN
|LC..3|
	DCB &61, &72, &63, &20
	DCB &70, &72, &6f, &66
	DCB &69, &6c, &69, &6e
	DCB &67, &3a, &20, &45
	DCB &72, &72, &6f, &72
	DCB &20, &63, &6c, &6f
	DCB &73, &69, &6e, &67
	DCB &20, &6f, &75, &74
	DCB &70, &75, &74, &20
	DCB &66, &69, &6c, &65
	DCB &20, &25, &73, &2e
	DCB &0a, &00
	ALIGN
|LC..4|
	DCB &77, &00
	ALIGN
|LC..5|
	DCB &61, &72, &63, &20
	DCB &70, &72, &6f, &66
	DCB &69, &6c, &69, &6e
	DCB &67, &3a, &20, &43
	DCB &61, &6e, &27, &74
	DCB &20, &6f, &70, &65
	DCB &6e, &20, &6f, &75
	DCB &74, &70, &75, &74
	DCB &20, &66, &69, &6c
	DCB &65, &20, &25, &73
	DCB &2e, &0a, &00
	ALIGN
|LC..6|
	DCB &61, &72, &63, &20
	DCB &70, &72, &6f, &66
	DCB &69, &6c, &69, &6e
	DCB &67, &3a, &20, &45
	DCB &72, &72, &6f, &72
	DCB &20, &77, &72, &69
	DCB &74, &69, &6e, &67
	DCB &20, &6f, &75, &74
	DCB &70, &75, &74, &20
	DCB &66, &69, &6c, &65
	DCB &20, &25, &73, &2e
	DCB &0a, &00
	ALIGN
|LC..7|
	DCB &62, &62, &2e, &6f
	DCB &75, &74, &00
	ALIGN
|LC..8|
	DCB &61, &00
	ALIGN
|LC..9|
	DCB &42, &61, &73, &69
	DCB &63, &20, &62, &6c
	DCB &6f, &63, &6b, &20
	DCB &70, &72, &6f, &66
	DCB &69, &6c, &69, &6e
	DCB &67, &20, &66, &69
	DCB &6e, &69, &73, &68
	DCB &65, &64, &20, &6f
	DCB &6e, &20, &25, &73
	DCB &0a, &00
	ALIGN
|LC..10|
	DCB &46, &69, &6c, &65
	DCB &20, &25, &73, &2c
	DCB &20, &25, &6c, &64
	DCB &20, &62, &61, &73
	DCB &69, &63, &20, &62
	DCB &6c, &6f, &63, &6b
	DCB &73, &20, &0a, &0a
	DCB &00
	ALIGN
|LC..11|
	DCB &3c, &6e, &6f, &6e
	DCB &65, &3e, &00
	ALIGN
|LC..12|
	DCB &20, &20, &20, &20
	DCB &42, &6c, &6f, &63
	DCB &6b, &20, &23, &25
	DCB &2a, &64, &3a, &20
	DCB &65, &78, &65, &63
	DCB &75, &74, &65, &64
	DCB &20, &25, &2a, &6c
	DCB &64, &20, &74, &69
	DCB &6d, &65, &28, &73
	DCB &29, &00
	ALIGN
|LC..13|
	DCB &20, &61, &64, &64
	DCB &72, &65, &73, &73
	DCB &3d, &20, &30, &78
	DCB &25, &2e, &2a, &6c
	DCB &78, &00
	ALIGN
|LC..14|
	DCB &20, &66, &75, &6e
	DCB &63, &74, &69, &6f
	DCB &6e, &3d, &20, &25
	DCB &2d, &2a, &73, &00
	ALIGN
|LC..15|
	DCB &20, &6c, &69, &6e
	DCB &65, &3d, &20, &25
	DCB &2a, &6c, &64, &00
	ALIGN
|LC..16|
	DCB &20, &66, &69, &6c
	DCB &65, &3d, &20, &25
	DCB &73, &00
	ALIGN
|LC..17|
	DCB &0a, &00
	ALIGN
|LC..18|
	DCB &0a, &0a, &00
	ALIGN
	EXPORT	|__bb_exit_func|
|__bb_exit_func|
	; args = 0, pretend = 0, frame = 64, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #64
	ldr	__v2, |L..122|
	ldr	__ip, [__v2, #0]
	cmp	__ip, #0
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	ldr	__a1, [__ip, #4]
	bl	|strlen|
	ldr	__ip, [__v2, #0]
	ldr	__a3, [__ip, #4]
	sub	__a1, __a1, #3
	ldr	__a2, |L..122|+4
	add	__a1, __a3, __a1
	bl	|strcmp|
	cmp	__a1, #0
	bne	|L..59|
	ldr	__v3, [__v2, #0]
	cmp	__v3, #0
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	ldr	__v6, |L..122|+8
|L..63|
	ldr	__a1, [__v3, #4]
	ldr	__a2, |L..122|+12
	bl	|fopen|
	subs	__v4, __a1, #0
	beq	|L..64|
	mov	__ip, #0
	str	__ip, [__sp, #8]
	add	__a1, __sp, #8
	mov	__a2, __v4
	mov	__a3, #8
	bl	|__read_long|
	cmp	__a1, #0
	ldrne	__a1, [__v6, #0]
	ldrne	__a2, |L..122|+16
	bne	|L..121|
|L..65|
	ldr	__a3, [__sp, #8]
	ldr	__ip, [__v3, #12]
	cmp	__a3, __ip
	bne	|L..66|
	mov	__v1, __a1
	b	|L..67|
|L..71|
	ldr	__ip, [__v3, #8]
	ldr	__a4, [__sp, #12]
	ldr	__a3, [__ip, __v1, asl #2]
	add	__a3, __a3, __a4
	str	__a3, [__ip, __v1, asl #2]
	add	__v1, __v1, #1
|L..67|
	ldr	__ip, [__sp, #8]
	cmp	__v1, __ip
	bge	|L..66|
	mov	__ip, #0
	str	__ip, [__sp, #12]
	add	__a1, __sp, #12
	mov	__a2, __v4
	mov	__a3, #8
	bl	|__read_long|
	cmp	__a1, #0
	beq	|L..71|
	ldr	__a1, [__v6, #0]
	ldr	__a2, |L..122|+16
	ldr	__a3, [__v3, #4]
	bl	|fprintf|
|L..66|
	mov	__a1, __v4
	bl	|fclose|
	cmn	__a1, #1
	bne	|L..64|
	ldr	__a1, [__v6, #0]
	ldr	__a2, |L..122|+20
	ldr	__a3, [__v3, #4]
	bl	|fprintf|
|L..64|
	ldr	__a1, [__v3, #4]
	ldr	__a2, |L..122|+24
	bl	|fopen|
	subs	__v4, __a1, #0
	bne	|L..74|
	ldr	__a1, [__v6, #0]
	ldr	__a2, |L..122|+28
|L..121|
	ldr	__a3, [__v3, #4]
	bl	|fprintf|
	b	|L..62|
|L..74|
	mov	__a2, __v4
	ldr	__a1, [__v3, #12]
	mov	__a3, #8
	bl	|__write_long|
	cmp	__a1, #0
	beq	|L..75|
	ldr	__a1, [__v6, #0]
	ldr	__a2, |L..122|+32
	ldr	__a3, [__v3, #4]
	bl	|fprintf|
	b	|L..76|
|L..75|
	ldr	__v2, [__v3, #8]
	ldr	__v1, [__v3, #12]
	mov	__v5, __a1
	b	|L..77|
|L..81|
	add	__v2, __v2, #4
	sub	__v1, __v1, #1
|L..77|
	cmp	__v1, #0
	ble	|L..78|
	mov	__a2, __v4
	ldr	__a1, [__v2, #0]
	mov	__a3, #8
	bl	|__write_long|
	cmp	__a1, #0
	beq	|L..81|
	mov	__v5, #1
|L..78|
	cmp	__v5, #0
	beq	|L..76|
	ldr	__a1, [__v6, #0]
	ldr	__a2, |L..122|+32
	ldr	__a3, [__v3, #4]
	bl	|fprintf|
|L..76|
	mov	__a1, __v4
	bl	|fclose|
	cmn	__a1, #1
	bne	|L..62|
	ldr	__a1, [__v6, #0]
	ldr	__a2, |L..122|+20
	ldr	__a3, [__v3, #4]
	bl	|fprintf|
|L..62|
	ldr	__v3, [__v3, #16]
	cmp	__v3, #0
	bne	|L..63|
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..59|
	ldr	__v1, |L..122|+36
	ldr	__a2, |L..122|+40
	mov	__a1, __v1
	bl	|fopen|
	subs	__v3, __a1, #0
	bne	|L..86|
	mov	__a1, __v1
	bl	|perror|
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..123|
	ALIGN
|L..122|
	DCD	|bb_head|
	DCD	|LC..0|
	DCD	|__stderr|
	DCD	|LC..1|
	DCD	|LC..2|
	DCD	|LC..3|
	DCD	|LC..4|
	DCD	|LC..5|
	DCD	|LC..6|
	DCD	|LC..7|
	DCD	|LC..8|
|L..86|
	add	__v1, __sp, #16
	mov	__a1, __v1
	bl	|time|
	mov	__a1, __v1
	bl	|ctime|
	mov	__a3, __a1
	ldr	__a2, |L..124|
	mov	__a1, __v3
	bl	|fprintf|
	ldr	__v1, [__v2, #0]
	cmp	__v1, #0
	beq	|L..89|
|L..91|
	ldr	__a3, [__v1, #24]
	mov	__ip, #0
	str	__ip, [__sp, #20]
	cmp	__a3, #1000
	movgt	__ip, #0
	movle	__ip, #1
	cmp	__a3, #43
	movls	__ip, #0
	cmp	__ip, #0
	beq	|L..92|
	ldr	__ip, [__v1, #28]
	subs	__ip, __ip, #0
	movne	__ip, #1
	str	__ip, [__sp, #20]
|L..92|
	mov	__ip, #0
	str	__ip, [__sp, #24]
	ldr	__ip, [__sp, #20]
	cmp	__ip, #0
	beq	|L..93|
	ldr	__ip, [__v1, #32]
	subs	__ip, __ip, #0
	movne	__ip, #1
	str	__ip, [__sp, #24]
|L..93|
	mov	__ip, #0
	str	__ip, [__sp, #28]
	ldr	__ip, [__sp, #20]
	cmp	__ip, #0
	beq	|L..94|
	ldr	__ip, [__v1, #36]
	subs	__ip, __ip, #0
	movne	__ip, #1
	str	__ip, [__sp, #28]
|L..94|
	mov	__v4, #0
	str	__v4, [__sp, #36]
	str	__v4, [__sp, #40]
	str	__v4, [__sp, #44]
	ldr	__ip, [__v1, #20]
	ldr	__v5, [__v1, #12]
	subs	__ip, __ip, __v4
	movne	__ip, #1
	str	__ip, [__sp, #32]
	mov	__a2, #10
	mov	__a1, __v5
	bl	|num_digits|
	str	__a1, [__sp, #48]
	mov	__v2, __v4
	ldr	__a2, |L..124|+4
	mov	__a1, __v3
	ldr	__a3, [__v1, #4]
	mov	__a4, __v5
	bl	|fprintf|
	cmp	__v2, __v5
	bge	|L..96|
	ldr	__v6, |L..124|+8
|L..98|
	ldr	__ip, [__v1, #8]
	ldr	__a3, [__ip, __v2, asl #2]
	ldr	__ip, [__sp, #36]
	cmp	__ip, __a3
	movlt	__ip, __a3
	str	__ip, [__sp, #36]
	ldr	__ip, [__sp, #32]
	cmp	__ip, #0
	beq	|L..100|
	ldr	__ip, [__v1, #20]
	ldr	__a3, [__ip, __v2, asl #2]
	ldr	__ip, [__sp, #40]
	cmp	__ip, __a3
	movcc	__ip, __a3
	str	__ip, [__sp, #40]
|L..100|
	ldr	__ip, [__sp, #24]
	cmp	__ip, #0
	beq	|L..101|
	ldr	__ip, [__v1, #32]
	ldr	__a3, [__ip, __v2, asl #2]
	cmp	__v4, __a3
	movlt	__v4, __a3
|L..101|
	ldr	__ip, [__sp, #20]
	cmp	__ip, #0
	beq	|L..102|
	ldr	__ip, [__v1, #28]
	ldr	__ip, [__ip, __v2, asl #2]
	cmp	__ip, #0
	movne	__a1, __ip
	moveq	__a1, __v6
	bl	|strlen|
	ldr	__ip, [__sp, #44]
	cmp	__ip, __a1
	movlt	__ip, __a1
	str	__ip, [__sp, #44]
|L..102|
	ldr	__ip, [__sp, #28]
	cmp	__ip, #0
	beq	|L..97|
	ldr	__ip, [__v1, #36]
	ldr	__ip, [__ip, __v2, asl #2]
	cmp	__ip, #0
	movne	__a1, __ip
	moveq	__a1, __v6
	bl	|strlen|
|L..97|
	add	__v2, __v2, #1
	cmp	__v2, __v5
	blt	|L..98|
|L..96|
	ldr	__a1, [__sp, #40]
	mov	__a2, #16
	bl	|num_digits|
	str	__a1, [__sp, #60]
	ldr	__a1, [__sp, #36]
	mov	__a2, #10
	bl	|num_digits|
	str	__a1, [__sp, #52]
	mov	__a1, __v4
	mov	__a2, #10
	mov	__v2, #0
	bl	|num_digits|
	cmp	__v2, __v5
	str	__a1, [__sp, #56]
	bge	|L..110|
	ldr	__v6, |L..124|+8
|L..112|
	ldr	__ip, [__sp, #52]
	str	__ip, [__sp, #0]
	ldr	__ip, [__v1, #8]
	ldr	__a3, [__ip, __v2, asl #2]
	str	__a3, [__sp, #4]
	mov	__a1, __v3
	ldr	__a2, |L..124|+12
	add	__v4, __v2, #1
	ldr	__a3, [__sp, #48]
	mov	__a4, __v4
	bl	|fprintf|
	ldr	__ip, [__sp, #32]
	cmp	__ip, #0
	beq	|L..113|
	ldr	__a2, |L..124|+16
	ldr	__ip, [__v1, #20]
	ldr	__a3, [__sp, #60]
	ldr	__a4, [__ip, __v2, asl #2]
	mov	__a1, __v3
	bl	|fprintf|
|L..113|
	ldr	__ip, [__sp, #20]
	cmp	__ip, #0
	beq	|L..114|
	ldr	__ip, [__v1, #28]
	ldr	__a3, [__sp, #44]
	ldr	__a4, [__ip, __v2, asl #2]
	mov	__a1, __v3
	ldr	__a2, |L..124|+20
	cmp	__a4, #0
	moveq	__a4, __v6
	bl	|fprintf|
|L..114|
	ldr	__ip, [__sp, #24]
	cmp	__ip, #0
	beq	|L..116|
	ldr	__a2, |L..124|+24
	ldr	__ip, [__v1, #32]
	ldr	__a3, [__sp, #56]
	ldr	__a4, [__ip, __v2, asl #2]
	mov	__a1, __v3
	bl	|fprintf|
|L..116|
	ldr	__ip, [__sp, #28]
	cmp	__ip, #0
	beq	|L..117|
	ldr	__ip, [__v1, #36]
	ldr	__a3, [__ip, __v2, asl #2]
	mov	__a1, __v3
	ldr	__a2, |L..124|+28
	cmp	__a3, #0
	moveq	__a3, __v6
	bl	|fprintf|
|L..117|
	mov	__a1, __v3
	ldr	__a2, |L..124|+32
	mov	__v2, __v4
	bl	|fprintf|
	cmp	__v2, __v5
	blt	|L..112|
|L..110|
	ldr	__a2, |L..124|+32
	mov	__a1, __v3
	bl	|fprintf|
	mov	__a1, __v3
	bl	|fflush|
	ldr	__v1, [__v1, #16]
	cmp	__v1, #0
	bne	|L..91|
|L..89|
	ldr	__a2, |L..124|+36
	mov	__a1, __v3
	bl	|fprintf|
	mov	__a1, __v3
	bl	|fclose|
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..125|
	ALIGN
|L..124|
	DCD	|LC..9|
	DCD	|LC..10|
	DCD	|LC..11|
	DCD	|LC..12|
	DCD	|LC..13|
	DCD	|LC..14|
	DCD	|LC..15|
	DCD	|LC..16|
	DCD	|LC..17|
	DCD	|LC..18|
	ALIGN
	EXPORT	|__bb_init_func|
|__bb_init_func|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	ldr	__ip, [__a1, #0]
	cmp	__ip, #0
	movnes	__pc, __lr
	mov	__ip, #1
	str	__ip, [__a1, #0]
	ldr	__a3, |L..128|
	ldr	__ip, [__a3, #0]
	str	__a1, [__a3, #0]
	str	__ip, [__a1, #16]
	movs	__pc, __lr
|L..129|
	ALIGN
|L..128|
	DCD	|bb_head|
	AREA |C$$data1|, DATA
	ALIGN
|bb_src|
	KEEP |bb_src|
	DCD	0
	ALIGN
|bb_dst|
	KEEP |bb_dst|
	DCD	0
	ALIGN
|bb_tracefile|
	KEEP |bb_tracefile|
	DCD	0
	ALIGN
|bb_hashbuckets|
	KEEP |bb_hashbuckets|
	DCD	0
	ALIGN
|bb_func_head|
	KEEP |bb_func_head|
	DCD	0
	ALIGN
|bb_callcount|
	KEEP |bb_callcount|
	DCD	0
	ALIGN
|bb_mode|
	KEEP |bb_mode|
	DCD	0
	ALIGN
|bb_stack|
	KEEP |bb_stack|
	DCD	0
	ALIGN
|bb_stacksize|
	KEEP |bb_stacksize|
	DCD	0
	ALIGN
|reported|
	KEEP |reported|
	DCD	0
	AREA |C$$code2|, CODE, READONLY
	ALIGN
|LC..19|
	DCB &62, &62, &74, &72
	DCB &61, &63, &65, &00
	ALIGN
|LC..20|
	DCB &46, &75, &6e, &63
	DCB &74, &69, &6f, &6e
	DCB &73, &20, &69, &6e
	DCB &20, &60, &62, &62
	DCB &2e, &69, &6e, &27
	DCB &20, &6e, &6f, &74
	DCB &20, &65, &78, &65
	DCB &63, &75, &74, &65
	DCB &64, &20, &64, &75
	DCB &72, &69, &6e, &67
	DCB &20, &62, &61, &73
	DCB &69, &63, &20, &62
	DCB &6c, &6f, &63, &6b
	DCB &20, &70, &72, &6f
	DCB &66, &69, &6c, &69
	DCB &6e, &67, &20, &6f
	DCB &6e, &20, &25, &73
	DCB &0a, &00
	ALIGN
|LC..21|
	DCB &09, &46, &75, &6e
	DCB &63, &74, &69, &6f
	DCB &6e, &20, &25, &73
	DCB &00
	ALIGN
|LC..22|
	DCB &20, &6f, &66, &20
	DCB &66, &69, &6c, &65
	DCB &20, &25, &73, &00
	ALIGN
|LC..23|
	DCB &50, &72, &6f, &66
	DCB &69, &6c, &65, &72
	DCB &3a, &20, &6f, &75
	DCB &74, &20, &6f, &66
	DCB &20, &6d, &65, &6d
	DCB &6f, &72, &79, &0a
	DCB &00
	ALIGN
|LC..24|
	DCB &42, &61, &73, &69
	DCB &63, &20, &62, &6c
	DCB &6f, &63, &6b, &20
	DCB &6a, &75, &6d, &70
	DCB &20, &74, &72, &61
	DCB &63, &69, &6e, &67
	DCB &00
	ALIGN
|LC..25|
	DCB &20, &28, &77, &69
	DCB &74, &68, &20, &63
	DCB &61, &6c, &6c, &29
	DCB &00
	ALIGN
|LC..26|
	DCB &20, &28, &77, &69
	DCB &74, &68, &20, &63
	DCB &61, &6c, &6c, &20
	DCB &26, &20, &72, &65
	DCB &74, &29, &00
	ALIGN
|LC..27|
	DCB &20, &28, &77, &69
	DCB &74, &68, &20, &72
	DCB &65, &74, &29, &00
	ALIGN
|LC..28|
	DCB &20, &66, &69, &6e
	DCB &69, &73, &68, &65
	DCB &64, &20, &6f, &6e
	DCB &20, &25, &73, &0a
	DCB &00
	ALIGN
|LC..29|
	DCB &4a, &75, &6d, &70
	DCB &20, &66, &72, &6f
	DCB &6d, &20, &62, &6c
	DCB &6f, &63, &6b, &20
	DCB &30, &78, &25, &2e
	DCB &2a, &6c, &78, &20
	DCB &74, &6f, &20, &62
	DCB &6c, &6f, &63, &6b
	DCB &20, &30, &78, &25
	DCB &2e, &2a, &6c, &78
	DCB &20, &65, &78, &65
	DCB &63, &75, &74, &65
	DCB &64, &20, &25, &2a
	DCB &6c, &75, &20, &74
	DCB &69, &6d, &65, &28
	DCB &73, &29, &0a, &00
	ALIGN
|__bb_exit_trace_func|
	KEEP |__bb_exit_trace_func|
	; args = 0, pretend = 0, frame = 24, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #24
	ldr	__v1, |L..218|
	ldr	__a2, |L..218|+4
	mov	__a1, __v1
	bl	|fopen|
	subs	__v4, __a1, #0
	bne	|L..131|
	mov	__a1, __v1
	bl	|perror|
|L..131|
	ldr	__a3, |L..218|+8
	ldr	__ip, [__a3, #0]
	tst	__ip, #1
	beq	|L..132|
	ldr	__ip, |L..218|+12
	ldr	__a1, [__ip, #0]
	cmp	__a1, #0
	ldreq	__a1, |L..218|+16
	bleq	|perror|
	beq	|L..132|
|L..133|
	bl	|fclose|
|L..132|
	cmp	__v4, #0
	ldr	__v6, |L..218|+20
	beq	|L..135|
	add	__v1, __sp, #16
	mov	__a1, __v1
	bl	|time|
	ldr	__ip, |L..218|+24
	ldr	__v3, [__ip, #0]
	mov	__v5, #0
	cmp	__v3, __v5
	beq	|L..137|
|L..139|
	ldr	__ip, |L..218|+28
	ldr	__v1, [__ip, #0]
	cmp	__v1, #0
	beq	|L..141|
|L..143|
	ldr	__a2, [__v1, #4]
	cmp	__a2, #0
	beq	|L..142|
	ldr	__a1, [__v3, #8]
	cmp	__a1, #0
	beq	|L..144|
	bl	|strcmp|
	cmp	__a1, #0
	bne	|L..142|
|L..144|
	ldr	__ip, [__v1, #12]
	mov	__v2, #0
	cmp	__v2, __ip
	bge	|L..142|
|L..149|
	ldr	__ip, [__v1, #28]
	ldr	__a1, [__v3, #4]
	ldr	__a2, [__ip, __v2, asl #2]
	bl	|strcmp|
	cmp	__a1, #0
	beq	|L..138|
	ldr	__ip, [__v1, #12]
	add	__v2, __v2, #1
	cmp	__v2, __ip
	blt	|L..149|
|L..142|
	ldr	__v1, [__v1, #16]
	cmp	__v1, #0
	bne	|L..143|
|L..141|
	cmp	__v5, #0
	bne	|L..154|
	add	__a1, __sp, #16
	bl	|ctime|
	mov	__a3, __a1
	mov	__a1, __v4
	ldr	__a2, |L..218|+32
	mov	__v5, #1
	bl	|fprintf|
|L..154|
	ldr	__a2, |L..218|+36
	ldr	__a3, [__v3, #4]
	mov	__a1, __v4
	bl	|fprintf|
	ldr	__a3, [__v3, #8]
	cmp	__a3, #0
	beq	|L..155|
	ldr	__a2, |L..218|+40
	mov	__a1, __v4
	bl	|fprintf|
|L..155|
	ldr	__a2, |L..218|+44
	mov	__a1, __v4
	bl	|fprintf|
|L..138|
	ldr	__v3, [__v3, #0]
	cmp	__v3, #0
	bne	|L..139|
|L..137|
	cmp	__v5, #0
	beq	|L..135|
	ldr	__a2, |L..218|+44
	mov	__a1, __v4
	bl	|fprintf|
|L..135|
	ldr	__a3, |L..218|+8
	ldr	__ip, [__a3, #0]
	tst	__ip, #2
	beq	|L..158|
	ldr	__ip, [__v6, #0]
	cmp	__ip, #0
	bne	|L..159|
	ldr	__v1, |L..218|+48
	ldr	__ip, [__v1, #0]
	cmp	__ip, #0
	ldmneea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	ldr	__ip, |L..218|+52
	ldr	__a2, |L..218|+56
	ldr	__a1, [__ip, #0]
	bl	|fprintf|
	mov	__ip, #1
	str	__ip, [__v1, #0]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..159|
	cmp	__v4, #0
	beq	|L..158|
	mov	__v3, #0
	add	__v1, __sp, #20
	mov	__a1, __v1
	bl	|time|
	ldr	__a2, |L..218|+60
	mov	__a1, __v4
	bl	|fprintf|
	ldr	__a3, |L..218|+8
	ldr	__ip, [__a3, #0]
	mov	__v2, __v3
	and	__ip, __ip, #12
	cmp	__ip, #12
	ldrls	__pc, [__pc, __ip, asl #2]
	b	|L..163|
	ALIGN
	ALIGN
|L..168|
	DCD	|L..164|
	DCD	|L..163|
	DCD	|L..163|
	DCD	|L..163|
	DCD	|L..163|
	DCD	|L..163|
	DCD	|L..163|
	DCD	|L..163|
	DCD	|L..166|
	DCD	|L..163|
	DCD	|L..163|
	DCD	|L..163|
	DCD	|L..167|
|L..164|
	ldr	__a2, |L..218|+64
	b	|L..217|
|L..166|
	ldr	__a2, |L..218|+68
|L..217|
	mov	__a1, __v4
	bl	|fprintf|
	b	|L..163|
|L..219|
	ALIGN
|L..218|
	DCD	|LC..7|
	DCD	|LC..8|
	DCD	|bb_mode|
	DCD	|bb_tracefile|
	DCD	|LC..19|
	DCD	|bb_hashbuckets|
	DCD	|bb_func_head|
	DCD	|bb_head|
	DCD	|LC..20|
	DCD	|LC..21|
	DCD	|LC..22|
	DCD	|LC..17|
	DCD	|reported|
	DCD	|__stderr|
	DCD	|LC..23|
	DCD	|LC..24|
	DCD	|LC..25|
	DCD	|LC..26|
|L..167|
	ldr	__a2, |L..220|
	mov	__a1, __v4
	bl	|fprintf|
|L..163|
	mov	__a1, __v1
	bl	|ctime|
	mov	__a3, __a1
	ldr	__a2, |L..220|+4
	mov	__a1, __v4
	bl	|fprintf|
	mov	__a1, #0
	mov	__lr, #308
	ldr	__ip, |L..220|+8
	add	__lr, __lr, #2
	ldr	__v1, [__ip, #0]
|L..173|
	ldr	__a2, [__v1, __a1, asl #2]
	cmp	__a2, #0
	beq	|L..172|
|L..177|
	ldr	__ip, [__a2, #4]
	add	__a3, __a2, #8
	ldmia	__a3, {__a3, __a4}	; phole ldm
	ldr	__a2, [__a2, #0]
	cmp	__v2, __ip
	movcc	__v2, __ip
	cmp	__v2, __a3
	movcc	__v2, __a3
	cmp	__v3, __a4
	movcc	__v3, __a4
	cmp	__a2, #0
	bne	|L..177|
|L..172|
	add	__a1, __a1, #1
	cmp	__a1, __lr
	ble	|L..173|
	mov	__a1, __v2
	mov	__a2, #16
	bl	|num_digits|
	mov	__v2, __a1
	mov	__a1, __v3
	mov	__a2, #10
	bl	|num_digits|
	mov	__v5, __a1
	mov	__a1, #0
|L..186|
	ldr	__ip, [__v6, #0]
	ldr	__v1, [__ip, __a1, asl #2]
	add	__v3, __a1, #1
	cmp	__v1, #0
	beq	|L..185|
|L..190|
	ldr	__a4, [__v1, #4]
	str	__v2, [__sp, #0]
	ldr	__a3, [__v1, #8]
	stmib	__sp, {__a3, __v5}	; phole stm
	ldr	__ip, [__v1, #12]
	str	__ip, [__sp, #12]
	mov	__a1, __v4
	ldr	__a2, |L..220|+12
	mov	__a3, __v2
	bl	|fprintf|
	ldr	__v1, [__v1, #0]
	cmp	__v1, #0
	bne	|L..190|
|L..185|
	mov	__a1, __v3
	mov	__ip, #308
	add	__ip, __ip, #2
	cmp	__a1, __ip
	ble	|L..186|
	ldr	__a2, |L..220|+16
	mov	__a1, __v4
	bl	|fprintf|
|L..158|
	cmp	__v4, #0
	beq	|L..193|
	mov	__a1, __v4
	bl	|fclose|
|L..193|
	ldr	__ip, |L..220|+20
	ldr	__v2, [__ip, #0]
	cmp	__v2, #0
	beq	|L..195|
|L..196|
	mov	__v1, __v2
	ldr	__a1, [__v1, #4]
	ldr	__v2, [__v2, #0]
	cmp	__a1, #0
	beq	|L..197|
	bl	|free|
|L..197|
	ldr	__a1, [__v1, #8]
	cmp	__a1, #0
	beq	|L..198|
	bl	|free|
|L..198|
	mov	__a1, __v1
	bl	|free|
	cmp	__v2, #0
	bne	|L..196|
|L..195|
	ldr	__ip, |L..220|+24
	ldr	__a1, [__ip, #0]
	cmp	__a1, #0
	beq	|L..200|
	bl	|free|
|L..200|
	ldr	__ip, [__v6, #0]
	cmp	__ip, #0
	beq	|L..201|
	mov	__a3, #0
	mov	__v3, #308
	add	__v3, __v3, #2
|L..205|
	ldr	__ip, [__v6, #0]
	ldr	__v1, [__ip, __a3, asl #2]
	add	__v2, __a3, #1
	cmp	__v1, #0
	beq	|L..204|
|L..208|
	mov	__a1, __v1
	ldr	__v1, [__v1, #0]
	bl	|free|
	cmp	__v1, #0
	bne	|L..208|
|L..204|
	mov	__a3, __v2
	cmp	__a3, __v3
	ble	|L..205|
	ldr	__a1, [__v6, #0]
	bl	|free|
|L..201|
	ldr	__ip, |L..220|+28
	ldr	__v1, [__ip, #0]
	cmp	__v1, #0
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..214|
	ldr	__a1, [__v1, #40]
	cmp	__a1, #0
	beq	|L..213|
	bl	|free|
|L..213|
	ldr	__v1, [__v1, #16]
	cmp	__v1, #0
	bne	|L..214|
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..221|
	ALIGN
|L..220|
	DCD	|LC..27|
	DCD	|LC..28|
	DCD	|bb_hashbuckets|
	DCD	|LC..29|
	DCD	|LC..17|
	DCD	|bb_func_head|
	DCD	|bb_stack|
	DCD	|bb_head|
	ALIGN
|LC..30|
	DCB &62, &62, &2e, &69
	DCB &6e, &00
	ALIGN
|LC..31|
	DCB &20, &25, &34, &39
	DCB &39, &73, &20, &00
	ALIGN
|LC..32|
	DCB &5f, &5f, &62, &62
	DCB &5f, &74, &72, &61
	DCB &63, &65, &5f, &5f
	DCB &00
	ALIGN
|LC..33|
	DCB &5f, &5f, &62, &62
	DCB &5f, &6a, &75, &6d
	DCB &70, &73, &5f, &5f
	DCB &00
	ALIGN
|LC..34|
	DCB &5f, &5f, &62, &62
	DCB &5f, &68, &69, &64
	DCB &65, &63, &61, &6c
	DCB &6c, &5f, &5f, &00
	ALIGN
|LC..35|
	DCB &5f, &5f, &62, &62
	DCB &5f, &73, &68, &6f
	DCB &77, &72, &65, &74
	DCB &5f, &5f, &00
	ALIGN
|__bb_init_prg|
	KEEP |__bb_init_prg|
	; args = 0, pretend = 0, frame = 508, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	sub	__ip, __sp, #508
	cmp	__ip, __sl
	IMPORT	|__rt_stkovf_split_big|
	bllt	|__rt_stkovf_split_big|
	sub	__sp, __sp, #508
	ldr	__a1, |L..250|
	ldr	__a2, |L..250|+4
	bl	|fopen|
	cmp	__a1, #0
	str	__a1, [__sp, #500]
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	ldr	__v5, |L..250|+8
	b	|L..224|
|L..226|
	ldrb	__ip, [__sp, #0]	; zero_extendqisi2
	mov	__v3, __sp
	cmp	__ip, #45
	moveq	__ip, #2
	addeq	__v3, __sp, #1
|L..227|
	movne	__ip, #1
|L..249|
	str	__ip, [__sp, #504]
	ldr	__a2, |L..250|+12
	mov	__a1, __v3
	bl	|strcmp|
	cmp	__a1, #0
	ldreq	__ip, [__v5, #0]
	orreq	__ip, __ip, #1
	streq	__ip, [__v5, #0]
	beq	|L..224|
|L..229|
	ldr	__a2, |L..250|+16
	mov	__a1, __v3
	bl	|strcmp|
	cmp	__a1, #0
	ldreq	__ip, [__v5, #0]
	orreq	__ip, __ip, #2
	streq	__ip, [__v5, #0]
	beq	|L..224|
|L..231|
	ldr	__a2, |L..250|+20
	mov	__a1, __v3
	bl	|strcmp|
	cmp	__a1, #0
	ldreq	__ip, [__v5, #0]
	orreq	__ip, __ip, #4
	streq	__ip, [__v5, #0]
	beq	|L..224|
|L..233|
	ldr	__a2, |L..250|+24
	mov	__a1, __v3
	bl	|strcmp|
	cmp	__a1, #0
	ldreq	__ip, [__v5, #0]
	orreq	__ip, __ip, #8
	streq	__ip, [__v5, #0]
	beq	|L..224|
|L..235|
	mov	__a1, #16
	bl	|malloc|
	subs	__v2, __a1, #0
	beq	|L..224|
	ldr	__v1, |L..250|+28
	ldr	__ip, [__v1, #0]
	str	__ip, [__v2, #0]
	mov	__a1, __v3
	mov	__a2, #58
	bl	|strchr|
	subs	__v4, __a1, #0
	mov	__v6, __v1
	beq	|L..238|
	add	__v1, __v4, #1
	mov	__a1, __v1
	bl	|strlen|
	add	__a1, __a1, #1
	bl	|malloc|
	cmp	__a1, #0
	str	__a1, [__v2, #4]
	beq	|L..224|
	mov	__a2, __v1
	bl	|strcpy|
	rsb	__v1, __v3, __v4
	add	__a1, __v1, #1
	bl	|malloc|
	cmp	__a1, #0
	str	__a1, [__v2, #8]
	beq	|L..240|
	mov	__a2, __v3
	mov	__a3, __v1
	bl	|strncpy|
	ldr	__a3, [__v2, #8]
	mov	__ip, #0
	strb	__ip, [__a3, __v1]
	b	|L..242|
|L..240|
	str	__a1, [__v2, #8]
	b	|L..242|
|L..238|
	mov	__a1, __v3
	bl	|strlen|
	add	__a1, __a1, #1
	bl	|malloc|
	cmp	__a1, #0
	str	__a1, [__v2, #4]
	beq	|L..224|
	mov	__a2, __v3
	bl	|strcpy|
	str	__v4, [__v2, #8]
|L..242|
	ldr	__ip, [__sp, #504]
	str	__ip, [__v2, #12]
	str	__v2, [__v6, #0]
|L..224|
	ldr	__a1, [__sp, #500]
	ldr	__a2, |L..250|+32
	mov	__a3, __sp
	bl	|fscanf|
	cmn	__a1, #1
	bne	|L..226|
	ldr	__a1, [__sp, #500]
	bl	|fclose|
	ldr	__ip, [__v5, #0]
	tst	__ip, #1
	beq	|L..245|
	ldr	__a1, |L..250|+36
	ldr	__a2, |L..250|+40
	bl	|fopen|
	ldr	__ip, |L..250|+44
	str	__a1, [__ip, #0]
|L..245|
	ldr	__ip, [__v5, #0]
	tst	__ip, #2
	beq	|L..246|
	mov	__v1, #1232
	add	__v1, __v1, #12
	mov	__a1, __v1
	bl	|malloc|
	ldr	__ip, |L..250|+48
	cmp	__a1, #0
	str	__a1, [__ip, #0]
	beq	|L..246|
	mov	__a2, #0
	mov	__a3, __v1
	bl	|memset|
|L..246|
	ldr	__ip, [__v5, #0]
	tst	__ip, #12
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	ldr	__ip, |L..250|+52
	mov	__a1, #10
	str	__a1, [__ip, #0]
	ldr	__v1, |L..250|+56
	mov	__a1, __a1, asl #2
	bl	|malloc|
	str	__a1, [__v1, #0]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..251|
	ALIGN
|L..250|
	DCD	|LC..30|
	DCD	|LC..1|
	DCD	|bb_mode|
	DCD	|LC..32|
	DCD	|LC..33|
	DCD	|LC..34|
	DCD	|LC..35|
	DCD	|bb_func_head|
	DCD	|LC..31|
	DCD	|LC..19|
	DCD	|LC..4|
	DCD	|bb_tracefile|
	DCD	|bb_hashbuckets|
	DCD	|bb_stacksize|
	DCD	|bb_stack|
	IMPORT	|__modsi3|
	ALIGN
	EXPORT	|__bb_trace_func|
|__bb_trace_func|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	ldr	__ip, |L..269|
	ldr	__a3, [__ip, #0]
	cmp	__a3, #0
	ldmeqea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
	ldr	__a4, |L..269|+4
	ldr	__a2, [__a4, #4]
	ldr	__a3, [__a2, #40]
	cmp	__a3, #0
	beq	|L..253|
	ldr	__ip, [__a4, #0]
	ldrb	__a3, [__a3, __ip]
	tst	__a3, #2
	ldmneea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..253|
	ldr	__a4, [__a4, #0]
	ldr	__a3, [__a2, #20]
	ldr	__a1, |L..269|+8
	ldr	__ip, [__a3, __a4, asl #2]
	str	__ip, [__a1, #0]
	ldr	__a2, [__a2, #8]
	ldr	__ip, [__a2, __a4, asl #2]
	add	__ip, __ip, #1
	str	__ip, [__a2, __a4, asl #2]
	ldr	__a3, |L..269|+12
	ldr	__a4, [__a3, #0]
	mov	__v2, __a1
	cmp	__a4, #0
	beq	|L..256|
	mov	__a2, #4
	mov	__a3, #1
	bl	|fwrite|
|L..256|
	ldr	__ip, |L..269|+16
	ldr	__v1, [__ip, #0]
	ldr	__v3, |L..269|+20
	cmp	__v1, #0
	beq	|L..263|
	ldr	__ip, [__v3, #0]
	mov	__a2, #308
	ldr	__a1, [__v2, #0]
	add	__a2, __a2, #3
	eor	__a1, __a1, __ip, asl #3
	bl	|__modsi3|
	mov	__a1, __a1, asl #2
	ldr	__a4, [__v1, __a1]
	add	__v1, __v1, __a1
	mov	__a2, __v1
	cmp	__a4, #0
	beq	|L..259|
	mov	__lr, __v2
	ldr	__a1, [__v3, #0]
|L..261|
	ldr	__ip, [__a4, #4]
	cmp	__ip, __a1
	bne	|L..260|
	ldr	__a3, [__a4, #8]
	ldr	__ip, [__lr, #0]
	cmp	__a3, __ip
	beq	|L..268|
|L..260|
	mov	__a2, __a4
	ldr	__a4, [__a4, #0]
	cmp	__a4, #0
	bne	|L..261|
|L..259|
	mov	__a1, #16
	bl	|malloc|
	subs	__a4, __a1, #0
	bne	|L..265|
	ldr	__v1, |L..269|+24
	ldr	__ip, [__v1, #0]
	cmp	__ip, #0
	bne	|L..263|
	ldr	__ip, |L..269|+28
	ldr	__a2, |L..269|+32
	ldr	__a1, [__ip, #0]
	bl	|fprintf|
	mov	__ip, #1
	str	__ip, [__v1, #0]
	b	|L..263|
|L..268|
	ldr	__ip, [__a4, #12]
	add	__ip, __ip, #1
	str	__ip, [__a4, #12]
	ldr	__a3, [__a4, #0]
	str	__a3, [__a2, #0]
	ldr	__ip, [__v1, #0]
	str	__ip, [__a4, #0]
	str	__a4, [__v1, #0]
	b	|L..263|
|L..265|
	ldr	__ip, [__v3, #0]
	str	__ip, [__a4, #4]
	ldr	__a3, [__v2, #0]
	str	__a3, [__a4, #8]
	ldr	__ip, [__v1, #0]
	str	__ip, [__a4, #0]
	str	__a4, [__v1, #0]
	mov	__ip, #1
	str	__ip, [__a4, #12]
|L..263|
	ldr	__ip, [__v2, #0]
	str	__ip, [__v3, #0]
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..270|
	ALIGN
|L..269|
	DCD	|bb_callcount|
	DCD	|__bb|
	DCD	|bb_dst|
	DCD	|bb_tracefile|
	DCD	|bb_hashbuckets|
	DCD	|bb_src|
	DCD	|reported|
	DCD	|__stderr|
	DCD	|LC..23|
	ALIGN
|__bb_trace_func_ret|
	KEEP |__bb_trace_func_ret|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	ldr	__ip, |L..287|
	ldr	__a3, [__ip, #0]
	cmp	__a3, #0
	ldmeqea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
	ldr	__a4, |L..287|+4
	ldr	__ip, [__a4, #4]
	ldr	__a3, [__ip, #40]
	cmp	__a3, #0
	beq	|L..272|
	ldr	__ip, [__a4, #0]
	ldrb	__a3, [__a3, __ip]
	tst	__a3, #2
	ldmneea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..272|
	ldr	__ip, |L..287|+8
	ldr	__v3, |L..287|+12
	ldr	__v1, [__ip, #0]
	ldr	__v2, |L..287|+16
	cmp	__v1, #0
	beq	|L..281|
	ldr	__ip, [__v3, #0]
	mov	__a2, #308
	ldr	__a1, [__v2, #0]
	add	__a2, __a2, #3
	eor	__a1, __a1, __ip, asl #3
	bl	|__modsi3|
	mov	__a1, __a1, asl #2
	ldr	__a4, [__v1, __a1]
	add	__v1, __v1, __a1
	mov	__a2, __v1
	cmp	__a4, #0
	beq	|L..277|
	mov	__lr, __v2
	ldr	__a1, [__v3, #0]
|L..279|
	ldr	__ip, [__a4, #4]
	cmp	__ip, __a1
	bne	|L..278|
	ldr	__a3, [__a4, #8]
	ldr	__ip, [__lr, #0]
	cmp	__a3, __ip
	beq	|L..286|
|L..278|
	mov	__a2, __a4
	ldr	__a4, [__a4, #0]
	cmp	__a4, #0
	bne	|L..279|
|L..277|
	mov	__a1, #16
	bl	|malloc|
	subs	__a4, __a1, #0
	bne	|L..283|
	ldr	__v1, |L..287|+20
	ldr	__ip, [__v1, #0]
	cmp	__ip, #0
	bne	|L..281|
	ldr	__ip, |L..287|+24
	ldr	__a2, |L..287|+28
	ldr	__a1, [__ip, #0]
	bl	|fprintf|
	mov	__ip, #1
	str	__ip, [__v1, #0]
	b	|L..281|
|L..286|
	ldr	__ip, [__a4, #12]
	add	__ip, __ip, #1
	str	__ip, [__a4, #12]
	ldr	__a3, [__a4, #0]
	str	__a3, [__a2, #0]
	ldr	__ip, [__v1, #0]
	str	__ip, [__a4, #0]
	str	__a4, [__v1, #0]
	b	|L..281|
|L..283|
	ldr	__ip, [__v3, #0]
	str	__ip, [__a4, #4]
	ldr	__a3, [__v2, #0]
	str	__a3, [__a4, #8]
	ldr	__ip, [__v1, #0]
	str	__ip, [__a4, #0]
	str	__a4, [__v1, #0]
	mov	__ip, #1
	str	__ip, [__a4, #12]
|L..281|
	ldr	__ip, [__v2, #0]
	str	__ip, [__v3, #0]
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..288|
	ALIGN
|L..287|
	DCD	|bb_callcount|
	DCD	|__bb|
	DCD	|bb_hashbuckets|
	DCD	|bb_dst|
	DCD	|bb_src|
	DCD	|reported|
	DCD	|__stderr|
	DCD	|LC..23|
	ALIGN
|__bb_init_file|
	KEEP |__bb_init_file|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v3, __a1
	mov	__ip, #1
	str	__ip, [__v3, #0]
	mov	__v1, #0
	str	__v1, [__v3, #40]
	ldr	__ip, |L..309|
	ldr	__a3, [__ip, #0]
	str	__v3, [__ip, #0]
	str	__a3, [__v3, #16]
	ldr	__a4, |L..309|+4
	ldr	__v4, [__v3, #12]
	ldr	__ip, [__a4, #0]
	ldr	__v6, [__v3, #28]
	cmp	__ip, __v1
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	mov	__a1, __v4
	bl	|malloc|
	cmp	__a1, __v1
	str	__a1, [__v3, #40]
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	mov	__v2, __v1
	cmp	__v2, __v4
	bge	|L..293|
	mov	__a3, __v2
|L..295|
	ldr	__ip, [__v3, #40]
	strb	__a3, [__ip, __v2]
	add	__v2, __v2, #1
	cmp	__v2, __v4
	blt	|L..295|
|L..293|
	mov	__v2, #0
	cmp	__v2, __v4
	ldmgeea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..300|
	ldr	__ip, |L..309|+4
	ldr	__v1, [__ip, #0]
	add	__v5, __v2, #1
	cmp	__v1, #0
	beq	|L..299|
|L..304|
	ldr	__a1, [__v1, #4]
	ldr	__a2, [__v6, __v2, asl #2]
	bl	|strcmp|
	cmp	__a1, #0
	bne	|L..303|
	ldr	__a1, [__v1, #8]
	cmp	__a1, #0
	beq	|L..306|
	ldr	__a2, [__v3, #4]
	bl	|strcmp|
	cmp	__a1, #0
	bne	|L..303|
|L..306|
	ldr	__ip, [__v3, #40]
	ldrb	__a4, [__v1, #12]
	ldrb	__a3, [__ip, __v2]
	orr	__a3, __a3, __a4
	strb	__a3, [__ip, __v2]
|L..303|
	ldr	__v1, [__v1, #0]
	cmp	__v1, #0
	bne	|L..304|
|L..299|
	mov	__v2, __v5
	cmp	__v2, __v4
	blt	|L..300|
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..310|
	ALIGN
|L..309|
	DCD	|bb_head|
	DCD	|bb_func_head|
	ALIGN
	EXPORT	|__bb_trace_ret|
|__bb_trace_ret|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	ldr	__ip, |L..315|
	ldr	__a2, [__ip, #0]
	mov	__v1, __ip
	cmp	__a2, #0
	ldmeqea	__fp, {__v1, __fp, __sp, __pc}^
	ldr	__ip, |L..315|+4
	ldr	__a1, [__ip, #0]
	tst	__a1, #12
	beq	|L..313|
	ldr	__ip, |L..315|+8
	ldr	__a3, [__ip, #0]
	cmp	__a3, __a2
	bls	|L..313|
	ldr	__ip, |L..315|+12
	ldr	__a4, |L..315|+16
	ldr	__a3, [__ip, #0]
	ldr	__ip, [__a3, __a2, asl #2]
	tst	__a1, #8
	str	__ip, [__a4, #0]
	beq	|L..313|
	bl	|__bb_trace_func_ret|
|L..313|
	ldr	__ip, [__v1, #0]
	sub	__ip, __ip, #1
	str	__ip, [__v1, #0]
	ldmea	__fp, {__v1, __fp, __sp, __pc}^
|L..316|
	ALIGN
|L..315|
	DCD	|bb_callcount|
	DCD	|bb_mode|
	DCD	|bb_stacksize|
	DCD	|bb_stack|
	DCD	|bb_src|
	AREA |C$$data2|, DATA
	ALIGN
|trace_init.42|
	KEEP |trace_init.42|
	DCD	0
	AREA |C$$code3|, CODE, READONLY
	ALIGN
	EXPORT	|__bb_init_trace_func|
|__bb_init_trace_func|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v1, __a1
	ldr	__ip, [__v1, #0]
	mov	__v2, __a2
	cmp	__ip, #0
	bne	|L..318|
	ldr	__a3, |L..330|
	ldr	__ip, [__a3, #0]
	cmp	__ip, #0
	bne	|L..319|
	mov	__ip, #1
	str	__ip, [__a3, #0]
	bl	|__bb_init_prg|
|L..319|
	mov	__a1, __v1
	bl	|__bb_init_file|
|L..318|
	ldr	__lr, |L..330|+4
	ldr	__a2, [__lr, #0]
	mov	__v6, __lr
	cmp	__a2, #0
	beq	|L..320|
	ldr	__a3, |L..330|+8
	add	__a4, __a2, #1
	ldr	__ip, [__a3, #0]
	mov	__v5, __a3
	str	__a4, [__lr, #0]
	tst	__ip, #12
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	ldr	__v4, |L..330|+12
	ldr	__ip, [__v4, #0]
	ldr	__v3, |L..330|+16
	cmp	__a4, __ip
	bcc	|L..322|
	add	__v2, __a2, #101
	ldr	__a1, [__v3, #0]
	mov	__a2, __v2
	bl	|realloc|
	mov	__v1, __a1
	cmp	__v1, #0
	str	__v1, [__v3, #0]
	bne	|L..323|
	ldr	__v2, |L..330|+20
	ldr	__ip, [__v2, #0]
	cmp	__ip, #0
	bne	|L..324|
	ldr	__ip, |L..330|+24
	ldr	__a2, |L..330|+28
	ldr	__a1, [__ip, #0]
	bl	|fprintf|
	mov	__ip, #1
	str	__ip, [__v2, #0]
|L..324|
	str	__v1, [__v4, #0]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..323|
	str	__v2, [__v4, #0]
|L..322|
	ldr	__a2, [__v6, #0]
	ldr	__a1, |L..330|+32
	ldr	__a4, [__v3, #0]
	ldr	__ip, [__a1, #0]
	str	__ip, [__a4, __a2, asl #2]
	ldr	__a3, [__v5, #0]
	tst	__a3, #4
	movne	__ip, #0
	strne	__ip, [__a1, #0]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..320|
	ldr	__a1, [__v1, #40]
	cmp	__a1, #0
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	ldrb	__ip, [__a1, __v2]
	tst	__ip, #1
	ldmeqea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	mov	__ip, #1
	str	__ip, [__lr, #0]
	ldr	__a3, |L..330|+16
	ldr	__ip, |L..330|+32
	ldr	__a3, [__a3, #0]
	str	__a2, [__ip, #0]
	cmp	__a3, #0
	strne	__a2, [__a3, #4]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..331|
	ALIGN
|L..330|
	DCD	|trace_init.42|
	DCD	|bb_callcount|
	DCD	|bb_mode|
	DCD	|bb_stacksize|
	DCD	|bb_stack|
	DCD	|reported|
	DCD	|__stderr|
	DCD	|LC..23|
	DCD	|bb_src|
	AREA |C$$zidata1|,NOINIT
|bb_head|
	% 4	; size=4
	AREA |Common$$__bb|, DATA, COMMON
|__bb|
	% 8	; size=8
	EXPORT	|__bb|
	IMPORT	|realloc|
	IMPORT	|memset|
	IMPORT	|strncpy|
	IMPORT	|strcpy|
	IMPORT	|strchr|
	IMPORT	|malloc|
	IMPORT	|fscanf|
	IMPORT	|free|
	IMPORT	|fflush|
	IMPORT	|ctime|
	IMPORT	|time|
	IMPORT	|perror|
	IMPORT	|fclose|
	IMPORT	|__stderr|
	IMPORT	|fprintf|
	IMPORT	|fopen|
	IMPORT	|strcmp|
	IMPORT	|strlen|
	IMPORT	|fread|
	IMPORT	|fwrite|
	END
