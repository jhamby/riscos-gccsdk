; Generated by gcc 2.95.1 19990816 (release) for ARM/RISC OS
__r0	RN	0
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY, PIC, REENTRANT
|gcc2_compiled.|
	ALIGN
|rase|
	KEEP |rase|
	; args = 0, pretend = 0, frame = 16, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, __v6
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __fp, __ip, __lr, __pc}
	stfe	__f4, [__sp, #-12]!
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #16
	ldr	__v1, [__v6, #0]
	ldr	__ip, [__v1, #0]
	fltd	__f0, __ip
	stfd	__f0, [__sp, #-8]!
	ldmfd	__sp!, {__a1, __a2}
	bl	|log10|
	ldr	__ip, [__v6, #4]
	ldr	__a3, [__v6, #8]
	ldr	__a4, [__ip, #0]
	ldr	__ip, [__a3, #0]
	mov	__a2, #0
	str	__a2, [__sp, #0]
	str	__v1, [__sp, #12]
	mvfs	__f4, __f0
	str	__a3, [__sp, #8]
	cmp	__a4, __ip
	bgt	|L..4|
|L..6|
	flts	__f0, __a4
	fmls	__f0, __f0, __f4
	mov	__v3, #1
	add	__v5, __a4, __v3
	fixz	__ip, __f0
	add	__v4, __ip, __v3
	cmp	__v3, __v4
	bgt	|L..5|
	ldr	__a3, [__v6, #12]
	str	__a3, [__sp, #4]
|L..10|
	ldr	__a4, [__sp, #4]
	ldr	__a2, [__sp, #12]
	ldr	__v1, [__sp, #0]
	ldr	__v2, [__a4, #0]
	ldr	__ip, [__a2, #0]
	ldrb	__a3, [__v2, __v3]	; zero_extendqisi2
	mla	__v1, __a3, __ip, __v1
	mov	__a2, #10
	mov	__a1, __v1
	bl	|__divsi3|
	str	__a1, [__sp, #0]
	mov	__a1, __v1
	mov	__a2, #10
	bl	|__modsi3|
	strb	__a1, [__v2, __v3]
	add	__v3, __v3, #1
	cmp	__v3, __v4
	ble	|L..10|
|L..5|
	ldr	__a3, [__sp, #8]
	ldr	__ip, [__a3, #0]
	mov	__a4, __v5
	cmp	__a4, __ip
	ble	|L..6|
|L..4|
	ldfe	__f4, [__fp, #-44]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __fp, __sp, __pc}^
	ALIGN
|ipower|
	KEEP |ipower|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__a4, #1
|L..14|
	cmp	__a2, #0
	ble	|L..15|
	mul	__a3, __a4, __a1
	tst	__a2, #1
	add	__ip, __a2, __a2, lsr #31
	mov	__a2, __ip, asr #1
	mul	__ip, __a1, __a1
	mov	__a1, __ip
	movne	__a4, __a3
	b	|L..14|
|L..15|
	mov	__a1, __a4
	movs	__pc, __lr
	ALIGN
|LC..0|
	DCB &55, &73, &61, &67
	DCB &65, &3a, &20, &50
	DCB &6f, &77, &65, &72
	DCB &73, &20, &3c, &6e
	DCB &75, &6d, &62, &65
	DCB &72, &3e, &20, &3c
	DCB &72, &61, &69, &73
	DCB &65, &3e, &0a, &00
	ALIGN
|LC..1|
	DCB &3c, &6e, &75, &6d
	DCB &62, &65, &72, &3e
	DCB &20, &69, &73, &20
	DCB &62, &65, &74, &77
	DCB &65, &65, &6e, &20
	DCB &32, &20, &61, &6e
	DCB &64, &20, &31, &39
	DCB &39, &35, &32, &36
	DCB &31, &33, &31, &20
	DCB &6f, &6e, &6c, &79
	DCB &0a, &00
	ALIGN
|LC..2|
	DCB &3c, &72, &61, &69
	DCB &73, &65, &3e, &20
	DCB &69, &73, &20, &62
	DCB &65, &74, &77, &65
	DCB &65, &6e, &20, &32
	DCB &20, &61, &6e, &64
	DCB &20, &32, &31, &34
	DCB &37, &34, &38, &33
	DCB &36, &34, &37, &20
	DCB &6f, &6e, &6c, &79
	DCB &0a, &00
	ALIGN
|LC..3|
	DCB &25, &64, &20, &5e
	DCB &20, &25, &64, &20
	DCB &69, &73, &20, &65
	DCB &78, &61, &63, &74
	DCB &6c, &79, &0a, &0a
	DCB &00
	ALIGN
|LC..4|
	DCB &25, &64, &00
	ALIGN
|LC..5|
	DCB &0a, &0a, &28, &77
	DCB &68, &69, &63, &68
	DCB &20, &69, &73, &20
	DCB &61, &62, &6f, &75
	DCB &74, &20, &25, &64
	DCB &20, &78, &20, &31
	DCB &30, &5e, &25, &64
	DCB &29, &0a, &00
	ALIGN
|LC..6|
	DCB &54, &69, &6d, &65
	DCB &20, &74, &61, &6b
	DCB &65, &6e, &3a, &20
	DCB &25, &64, &20, &63
	DCB &73, &65, &63, &73
	DCB &0a, &0a, &00
	ALIGN
	EXPORT	|powers|
|powers|
	; args = 0, pretend = 0, frame = 32, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, __v6
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __fp, __ip, __lr, __pc}
	stfe	__f4, [__sp, #-12]!
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #32
	mov	__v1, __a1
	mov	__v2, __a2
	bl	|clock|
	sub	__v1, __v1, #1
	cmp	__v1, #1
	str	__a1, [__sp, #4]
	ldrls	__a1, [__v6, #16]
	blls	|printf|
	bls	|L..35|
|L..19|
	mov	__a2, #0
	ldr	__a1, [__v2, #4]
	mov	__a3, #10
	ldr	__v1, [__v6, #0]
	bl	|strtol|
	str	__a1, [__v1, #0]
	mov	__a2, #0
	ldr	__a1, [__v2, #8]
	mov	__a3, #10
	ldr	__v2, [__v6, #8]
	bl	|strtol|
	str	__a1, [__v2, #0]
	ldr	__a4, [__v1, #0]
	str	__v1, [__sp, #28]
	ldr	__a3, |L..36|
	str	__v2, [__sp, #24]
	sub	__ip, __a4, #2
	cmp	__ip, __a3
	ldrhi	__a1, [__v6, #20]
	blhi	|printf|
	bhi	|L..35|
|L..20|
	cmp	__a1, #1
	bgt	|L..21|
	ldr	__a1, [__v6, #24]
	bl	|printf|
	b	|L..35|
|L..37|
	ALIGN
|L..36|
	DCD	199526129
|L..21|
	fltd	__f0, __a4
	stfd	__f0, [__sp, #-8]!
	ldmfd	__sp!, {__a1, __a2}
	bl	|log10|
	ldr	__a3, [__sp, #24]
	ldr	__v4, [__a3, #0]
	fltd	__f2, __v4
	ldfd	__f1, |L..39|
	mvfd	__f4, __f0
	adfd	__f1, __f4, __f1
	mufd	__f2, __f2, __f1
	fixz	__ip, __f2
	add	__v2, __ip, #1
	ldr	__ip, [__sp, #28]
	ldr	__ip, [__ip, #0]
	str	__ip, [__sp, #0]
	ldr	__v1, [__v6, #12]
	add	__a1, __v2, #1
	bl	|malloc|
	str	__a1, [__v1, #0]
	ldr	__a3, [__v6, #4]
	str	__a3, [__sp, #16]
	ldr	__ip, [__v6, #28]
	str	__ip, [__sp, #8]
	ldr	__ip, [__v6, #32]
	str	__ip, [__sp, #20]
	mov	__v5, __v1
	mov	__a3, #1
	ldr	__ip, [__v6, #36]
	cmp	__a3, __v2
	str	__ip, [__sp, #12]
	bgt	|L..23|
	mov	__a2, __v5
	mov	__a4, #0
|L..25|
	ldr	__ip, [__a2, #0]
	strb	__a4, [__ip, __a3]
	add	__a3, __a3, #1
	cmp	__a3, __v2
	ble	|L..25|
|L..23|
	ldfd	__f0, |L..39|+8
	dvfd	__f0, __f0, __f4
	ldr	__a3, [__v5, #0]
	mov	__ip, #1
	strb	__ip, [__a3, #1]
	ldr	__a3, [__sp, #16]
	str	__ip, [__a3, #0]
	ldr	__ip, [__sp, #24]
	ldr	__a3, [__ip, #0]
	mov	__a1, __a3
	fixz	__v1, __f0
	cmp	__v1, __a3
	movgt	__v1, #1
	mov	__a2, __v1
	bl	|__modsi3|
	ldr	__a3, [__sp, #28]
	mov	__v3, __a1
	ldr	__a1, [__a3, #0]
	mov	__a2, __v1
	bl	|ipower|
	ldr	__ip, [__sp, #28]
	str	__a1, [__ip, #0]
	ldr	__a3, [__sp, #24]
	ldr	__a1, [__a3, #0]
	mov	__a2, __v1
	bl	|__divsi3|
	ldr	__ip, [__sp, #24]
	str	__a1, [__ip, #0]
	bl	|rase|
	cmp	__v3, #0
	beq	|L..28|
	ldr	__ip, [__sp, #0]
	ldr	__a3, [__sp, #28]
	str	__ip, [__a3, #0]
	rsb	__ip, __v3, __v4
	ldr	__a3, [__sp, #16]
	add	__ip, __ip, #1
	str	__ip, [__a3, #0]
	ldr	__ip, [__sp, #24]
	str	__v4, [__ip, #0]
	bl	|rase|
|L..28|
	ldr	__a1, [__sp, #8]
	mov	__a3, __v4
	ldr	__a2, [__sp, #0]
	mov	__v1, __v2
	bl	|printf|
	cmp	__v2, #0
	sub	__v3, __v2, #1
	beq	|L..30|
|L..32|
	ldr	__ip, [__v5, #0]
	ldr	__a1, [__v6, #40]
	ldrb	__a2, [__ip, __v1]	; zero_extendqisi2
	bl	|printf|
	subs	__v1, __v1, #1
	bne	|L..32|
|L..30|
	ldr	__ip, [__v5, #0]
	ldr	__a1, [__sp, #20]
	ldrb	__a2, [__ip, __v2]	; zero_extendqisi2
	mov	__a3, __v3
	bl	|printf|
	bl	|clock|
	ldr	__a3, [__sp, #4]
	rsb	__a2, __a3, __a1
	ldr	__a1, [__sp, #12]
	bl	|printf|
|L..35|
	mov	__a1, #0
	b	|L..38|
|L..40|
	ALIGN
|L..39|
	DCD &3e212e0b, &e826d695	; double 2.00000000000000012456e-9
	DCD &40209999, &9999999a	; double 8.30000000000000071054e0
|L..38|
	ldfe	__f4, [__fp, #-44]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __fp, __sp, __pc}^
	AREA |C$$zidata1|,NOINIT
|begin|
	% 4	; size=4
|expon|
	% 4	; size=4
|numb|
	% 4	; size=4
|fig|
	% 4	; size=4
	AREA |v6$$adcons|, BASED __v6
|x$adcons|
	DCD	|numb|
	DCD	|begin|
	DCD	|expon|
	DCD	|fig|
	DCD	|LC..0|
	DCD	|LC..1|
	DCD	|LC..2|
	DCD	|LC..3|
	DCD	|LC..5|
	DCD	|LC..6|
	DCD	|LC..4|
	END
