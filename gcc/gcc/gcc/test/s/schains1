; Generated by gcc 2.95.1 19990816 (release) for ARM/RISC OS
__r0	RN	0
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	ALIGN
|LC..0|
	DCB &73, &70, &61, &6d
	DCB &32, &3a, &20, &25
	DCB &64, &2c, &20, &25
	DCB &64, &20, &25, &64
	DCB &20, &25, &64, &0a
	DCB &00
	ALIGN
|spam2.3|
	KEEP |spam2.3|
	; args = 0, pretend = 0, frame = 8, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	stmfd	__sp!, {__sp, __lr, __pc}
	stmfd	__sp!, {__v1, __v2, __v5, __fp}
	add	__fp, __sp, #24
	mov	__v5, __ip
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #8
	str	__v5, [__sp, #4]
	ldr	__ip, [__v5, #0]
	ldr	__a3, [__v5, #4]
	mov	__v2, __a2
	str	__v2, [__sp, #0]
	mov	__v1, __a1
	mov	__a4, __v1
	ldr	__a1, |L..4|
	mov	__a2, __ip
	bl	|printf|
	mov	__a1, __v1
	mov	__a2, __v2
	mov	__lr, __pc
	ldr	__pc, [__v5, #8]
	ldr	__a1, [__v5, #0]
	ldmea	__fp, {__v1, __v2, __v5, __fp, __sp, __pc}^
|L..5|
	ALIGN
|L..4|
	DCD	|LC..0|
	ALIGN
|LC..1|
	DCB &63, &61, &6c, &6c
	DCB &69, &6e, &67, &20
	DCB &73, &70, &61, &6d
	DCB &32, &20, &28, &25
	DCB &64, &2c, &20, &25
	DCB &64, &29, &0a, &00
	ALIGN
|LC..2|
	DCB &72, &65, &74, &75
	DCB &72, &6e, &20, &76
	DCB &61, &6c, &20, &66
	DCB &72, &6f, &6d, &20
	DCB &73, &70, &61, &6d
	DCB &32, &20, &3d, &20
	DCB &25, &64, &2c, &20
	DCB &73, &68, &6f, &75
	DCB &6c, &64, &20, &62
	DCB &65, &20, &25, &64
	DCB &0a, &00
	ALIGN
	EXPORT	|spam3|
|spam3|
	; args = 0, pretend = 0, frame = 12, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #12
	str	__a1, [__sp, #8]
	stmia	__sp, {__a2, __a3}	; phole stm
	ldr	__a1, |L..6|
	bl	|printf|
	ldmia	__sp, {__a1, __a2}	; phole ldm
	mov	__ip, __sp
	bl	|spam2.3|
	mov	__a2, __a1
	ldr	__a1, |L..6|+4
	ldr	__a3, [__sp, #0]
	bl	|printf|
	ldmea	__fp, {__fp, __sp, __pc}^
|L..7|
	ALIGN
|L..6|
	DCD	|LC..1|
	DCD	|LC..2|
	ALIGN
|LC..3|
	DCB &73, &70, &61, &6d
	DCB &31, &3a, &20, &25
	DCB &64, &2c, &20, &25
	DCB &64, &2c, &20, &25
	DCB &64, &2c, &20, &25
	DCB &64, &00
	ALIGN
|LC..4|
	DCB &2c, &20, &25, &64
	DCB &2c, &20, &25, &64
	DCB &2c, &20, &25, &64
	DCB &0a, &00
	ALIGN
|spam1.10|
	KEEP |spam1.10|
	; args = 0, pretend = 0, frame = 8, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	stmfd	__sp!, {__sp, __lr, __pc}
	stmfd	__sp!, {__v1, __v2, __v5, __fp}
	add	__fp, __sp, #24
	mov	__v5, __ip
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #8
	str	__v5, [__sp, #4]
	ldr	__lr, [__v5, #0]
	ldmib	__v5, {__a3, __a4, __ip}	; phole ldm
	str	__ip, [__sp, #0]
	mov	__v2, __a1
	mov	__v1, __a2
	ldr	__a1, |L..10|
	mov	__a2, __lr
	bl	|printf|
	ldr	__a1, |L..10|+4
	ldr	__ip, [__v5, #16]
	mov	__a3, __v2
	ldr	__a2, [__ip, #0]
	mov	__a4, __v1
	bl	|printf|
	ldr	__a1, [__v5, #0]
	ldmea	__fp, {__v1, __v2, __v5, __fp, __sp, __pc}^
|L..11|
	ALIGN
|L..10|
	DCD	|LC..3|
	DCD	|LC..4|
	ALIGN
|LTRAMP..0|
	ldr	__ip, [__pc, #0]
	ldr	__pc, [__pc, #0]
	DCD	0
	DCD	0
	ALIGN
	EXPORT	|spam|
|spam|
	; args = 4, pretend = 0, frame = 40, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #40
	stmia	__sp, {__a1, __a2, __a3, __a4}	; phole stm
	add	__ip, __fp, #4
	str	__ip, [__sp, #16]
	add	__v1, __sp, #20
	mov	__a1, __v1
	ldr	__a2, |L..12|
	mov	__a3, #16
	bl	|memcpy|
	str	__sp, [__v1, #8]
	ldr	__v2, |L..12|+4
	str	__v2, [__v1, #12]
	mov	__a1, __v1
	add	__a2, __a1, #16
	bl	|__clear_icache|
	ldr	__a2, [__sp, #12]
	ldr	__a3, [__sp, #0]
	add	__a1, __sp, #20
	bl	|spam3|
	ldr	__a1, [__fp, #4]
	ldr	__a2, [__sp, #0]
	mov	__ip, __sp
	mov	__lr, __pc
	mov	__pc, __v2
	add	__a2, __sp, #8
	ldmia	__a2, {__a2, __a3}	; phole ldm
	add	__a1, __sp, #20
	bl	|spam3|
	ldmib	__sp, {__a1, __a2}	; phole ldm
	mov	__ip, __sp
	mov	__lr, __pc
	mov	__pc, __v2
	ldmia	__sp, {__a1, __ip}
	add	__a1, __a1, __ip
	ldr	__ip, [__sp, #8]
	ldr	__a4, [__sp, #12]
	ldr	__a3, [__fp, #4]
	add	__a1, __a1, __ip
	add	__a1, __a1, __a4
	add	__a1, __a1, __a3
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
|L..13|
	ALIGN
|L..12|
	DCD	|LTRAMP..0|
	DCD	|spam1.10|
	ALIGN
|LC..5|
	DCB &73, &70, &61, &6d
	DCB &20, &3d, &20, &25
	DCB &64, &0a, &00
	ALIGN
	EXPORT	|main|
|main|
	; args = 0, pretend = 0, frame = 4, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #4
	bl	|__gccmain|
	mov	__ip, #5
	str	__ip, [__sp, #0]
	mov	__a1, #1
	mov	__a2, #2
	mov	__a3, #3
	mov	__a4, #4
	bl	|spam|
	mov	__a2, __a1
	ldr	__a1, |L..15|
	bl	|printf|
	mov	__a1, #0
	ldmea	__fp, {__fp, __sp, __pc}^
|L..16|
	ALIGN
|L..15|
	DCD	|LC..5|
	IMPORT	|__main|
	DCD	|__main|
	END
