; Generated by gcc 2.95.2 19991024 (release) for ARM/RISC OS
__r0	RN	0
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	ALIGN
	EXPORT	|init__7filebuf|
|init__7filebuf|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_init|
	IMPORT	|setjmp|
	IMPORT	|__terminate|
	IMPORT	|__sjthrow|
	ALIGN
	EXPORT	|__7filebuf|
|__7filebuf|
	; args = 0, pretend = 0, frame = 200, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #200
	mov	__v2, __a1
	bl	|__get_eh_context|
	mov	__v1, __a1
	mov	__ip, __v1
	mov	__a1, __v2
	mov	__a2, #0
	bl	|__9streambufi|
	ldr	__ip, [__v1, #4]
	str	__ip, [__sp, #0]
	mov	__a3, #0
	str	__a3, [__sp, #4]
	add	__a1, __sp, #8
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..191|
	str	__sp, [__v1, #4]
	ldr	__ip, |L..198|
	str	__ip, [__v2, #72]
	mov	__a1, __v2
	bl	|_IO_file_init|
	ldr	__ip, [__v1, #4]
	ldr	__a3, [__ip, #0]
	mov	__a1, __v2
	str	__a3, [__v1, #4]
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..191|
	ldr	__ip, [__v1, #4]
	mov	__v3, #0
	str	__v3, [__sp, #104]
	str	__ip, [__sp, #100]
	add	__a1, __sp, #108
	bl	|___arm_alloca_setjmp|
	cmp	__a1, __v3
	bne	|L..194|
	add	__ip, __sp, #100
	str	__ip, [__v1, #4]
	mov	__a1, __v2
	mov	__a2, __v3
	bl	|_$_9streambuf|
	ldr	__ip, [__v1, #4]
	ldr	__a3, [__ip, #0]
	str	__a3, [__v1, #4]
	bl	|__sjthrow|
|L..194|
	bl	|__terminate|
|L..199|
	ALIGN
|L..198|
	DCD	|_vt$7filebuf|
	ALIGN
	EXPORT	|__7filebufi|
|__7filebufi|
	; args = 0, pretend = 0, frame = 200, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #200
	mov	__v2, __a1
	mov	__v3, __a2
	bl	|__get_eh_context|
	mov	__v1, __a1
	mov	__ip, __v1
	mov	__a1, __v2
	mov	__a2, #0
	bl	|__9streambufi|
	ldr	__ip, [__v1, #4]
	str	__ip, [__sp, #0]
	mov	__a3, #0
	str	__a3, [__sp, #4]
	add	__a1, __sp, #8
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..201|
	str	__sp, [__v1, #4]
	ldr	__ip, |L..208|
	str	__ip, [__v2, #72]
	mov	__a1, __v2
	bl	|_IO_file_init|
	mov	__a1, __v2
	mov	__a2, __v3
	bl	|_IO_file_attach|
	ldr	__ip, [__v1, #4]
	ldr	__a3, [__ip, #0]
	mov	__a1, __v2
	str	__a3, [__v1, #4]
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..201|
	ldr	__ip, [__v1, #4]
	mov	__v3, #0
	str	__v3, [__sp, #104]
	str	__ip, [__sp, #100]
	add	__a1, __sp, #108
	bl	|___arm_alloca_setjmp|
	cmp	__a1, __v3
	bne	|L..204|
	add	__ip, __sp, #100
	str	__ip, [__v1, #4]
	mov	__a1, __v2
	mov	__a2, __v3
	bl	|_$_9streambuf|
	ldr	__ip, [__v1, #4]
	ldr	__a3, [__ip, #0]
	str	__a3, [__v1, #4]
	bl	|__sjthrow|
|L..204|
	bl	|__terminate|
|L..209|
	ALIGN
|L..208|
	DCD	|_vt$7filebuf|
	ALIGN
	EXPORT	|__7filebufiPci|
|__7filebufiPci|
	; args = 0, pretend = 0, frame = 200, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #200
	mov	__v2, __a1
	mov	__v3, __a2
	mov	__v4, __a3
	mov	__v5, __a4
	bl	|__get_eh_context|
	mov	__v1, __a1
	mov	__ip, __v1
	mov	__a1, __v2
	mov	__a2, #0
	bl	|__9streambufi|
	ldr	__ip, [__v1, #4]
	str	__ip, [__sp, #0]
	mov	__a3, #0
	str	__a3, [__sp, #4]
	add	__a1, __sp, #8
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..211|
	str	__sp, [__v1, #4]
	ldr	__ip, |L..218|
	str	__ip, [__v2, #72]
	mov	__a1, __v2
	bl	|_IO_file_init|
	mov	__a1, __v2
	mov	__a2, __v3
	bl	|_IO_file_attach|
	mov	__a1, __v2
	mov	__a2, __v4
	mov	__a3, __v5
	bl	|setbuf__7filebufPci|
	ldr	__ip, [__v1, #4]
	ldr	__a3, [__ip, #0]
	mov	__a1, __v2
	str	__a3, [__v1, #4]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __fp, __sp, __pc}^
|L..211|
	ldr	__ip, [__v1, #4]
	mov	__v3, #0
	str	__v3, [__sp, #104]
	str	__ip, [__sp, #100]
	add	__a1, __sp, #108
	bl	|___arm_alloca_setjmp|
	cmp	__a1, __v3
	bne	|L..214|
	add	__ip, __sp, #100
	str	__ip, [__v1, #4]
	mov	__a1, __v2
	mov	__a2, __v3
	bl	|_$_9streambuf|
	ldr	__ip, [__v1, #4]
	ldr	__a3, [__ip, #0]
	str	__a3, [__v1, #4]
	bl	|__sjthrow|
|L..214|
	bl	|__terminate|
|L..219|
	ALIGN
|L..218|
	DCD	|_vt$7filebuf|
	ALIGN
	EXPORT	|_$_7filebuf|
|_$_7filebuf|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v1, __a1
	ldr	__ip, [__v1, #56]
	mov	__v2, __a2
	ldr	__a3, |L..225|
	cmp	__ip, #0
	str	__a3, [__v1, #72]
	blt	|L..224|
	ldr	__a2, [__v1, #16]
	add	__ip, __v1, #20
	ldmda	__ip, {__a3, __ip}
	sub	__a3, __ip, __a3
	bl	|_IO_do_write|
	ldr	__ip, [__v1, #0]
	tst	__ip, #64
	bne	|L..224|
	ldr	__ip, [__v1, #72]
	mov	__a1, __v1
	mov	__lr, __pc
	ldr	__pc, [__ip, #132]
|L..224|
	mov	__a1, __v1
	mov	__a2, __v2
	ldmea	__fp, {__v1, __v2, __fp, __sp, __lr}
	b	|_$_9streambuf|
|L..226|
	ALIGN
|L..225|
	DCD	|_vt$7filebuf|
	ALIGN
	EXPORT	|open__7filebufPCcii|
|open__7filebufPCcii|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v2, __a1
	mov	__v1, __a3
	ldr	__ip, [__v2, #56]
	mov	__a1, __a2
	cmp	__ip, #0
	blt	|L..228|
|L..247|
	mov	__a1, #0
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..228|
	tst	__v1, #8
	orr	__ip, __v1, #2
	movne	__v1, __ip
	and	__a3, __v1, #3
	cmp	__a3, #3
	moveq	__a3, #2
	moveq	__v3, #0
	beq	|L..231|
|L..230|
	ands	__ip, __v1, #2
	movne	__a3, #1
	movne	__v3, #4
	bne	|L..231|
|L..232|
	ands	__a2, __v1, #1
	movne	__a3, __ip
	movne	__v3, #8
|L..234|
	moveq	__a3, __a2
	moveq	__v3, #12
|L..231|
	tst	__v1, #128
	bicne	__v1, __v1, #128
	orrne	__a3, __a3, #8192
|L..236|
	mov	__ip, __v1, lsr #4
	cmp	__v1, #2
	andne	__ip, __ip, #1
	moveq	__ip, #1
	cmp	__ip, #0
	orrne	__a3, __a3, #1024
	tst	__v1, #8
	orrne	__a3, __a3, #8
	orrne	__v3, __v3, #4096
|L..238|
	mov	__ip, __v1, lsr #5
	eor	__ip, __ip, #1
	cmp	__v1, #1
	andne	__ip, __ip, #1
	moveq	__ip, #0
	cmp	__ip, #0
	orrne	__a3, __a3, #512
	tst	__v1, #64
	orr	__a2, __a3, #2048
	moveq	__a2, __a3
	mov	__a3, __a4
	bl	|open|
	cmp	__a1, #0
	blt	|L..247|
	bic	__a3, __v3, #4080
	bic	__a3, __a3, #3
	mov	__a3, __a3, asl #19
	mov	__a3, __a3, lsr #19
	ldr	__ip, [__v2, #0]
	tst	__v1, #12
	str	__a1, [__v2, #56]
	bic	__ip, __ip, #4096
	bic	__ip, __ip, #12
	orr	__ip, __ip, __a3
	str	__ip, [__v2, #0]
	beq	|L..243|
	mov	__a1, __v2
	mov	__a2, #0
	mov	__a3, #2
	mov	__a4, #3
	bl	|_IO_seekoff|
	cmn	__a1, #1
	mov	__a1, #0
	ldmeqea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..243|
	mov	__a1, __v2
	bl	|_IO_link_in|
	mov	__a1, __v2
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
	ALIGN
	EXPORT	|open__7filebufPCcT1|
|open__7filebufPCcT1|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_fopen|
	ALIGN
	EXPORT	|attach__7filebufi|
|attach__7filebufi|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_attach|
	ALIGN
	EXPORT	|setbuf__7filebufPci|
|setbuf__7filebufPci|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_setbuf|
	ALIGN
	EXPORT	|doallocate__7filebuf|
|doallocate__7filebuf|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_doallocate|
	ALIGN
	EXPORT	|overflow__7filebufi|
|overflow__7filebufi|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_overflow|
	ALIGN
	EXPORT	|underflow__7filebuf|
|underflow__7filebuf|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_underflow|
	ALIGN
	EXPORT	|sync__7filebuf|
|sync__7filebuf|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_sync|
	ALIGN
	EXPORT	|seekoff__7filebuflQ23ios8seek_diri|
|seekoff__7filebuflQ23ios8seek_diri|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_seekoff|
	ALIGN
	EXPORT	|close__7filebuf|
|close__7filebuf|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v1, __a1
	bl	|_IO_file_close_it|
	cmp	__a1, #0
	moveq	__a1, __v1
	movne	__a1, #0
	ldmea	__fp, {__v1, __fp, __sp, __pc}^
	ALIGN
	EXPORT	|sys_read__7filebufPci|
|sys_read__7filebufPci|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_read|
	ALIGN
	EXPORT	|sys_seek__7filebuflQ23ios8seek_dir|
|sys_seek__7filebuflQ23ios8seek_dir|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_seek|
	ALIGN
	EXPORT	|sys_write__7filebufPCci|
|sys_write__7filebufPCci|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_write|
	ALIGN
	EXPORT	|sys_stat__7filebufPv|
|sys_stat__7filebufPv|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_stat|
	ALIGN
	EXPORT	|sys_close__7filebuf|
|sys_close__7filebuf|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_close|
	ALIGN
	EXPORT	|xsputn__7filebufPCci|
|xsputn__7filebufPCci|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|_IO_file_xsputn|
	ALIGN
	EXPORT	|xsgetn__7filebufPci|
|xsgetn__7filebufPci|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	; I don't think this function clobbers lr
	b	|xsgetn__9streambufPci|
	EXPORT	|_7filebuf$openprot|
	ALIGN
|_7filebuf$openprot|
	DCD	420
	IMPORT	|xsgetn__9streambufPci|
	IMPORT	|_IO_file_xsputn|
	IMPORT	|_IO_file_close|
	IMPORT	|_IO_file_stat|
	IMPORT	|_IO_file_write|
	IMPORT	|_IO_file_seek|
	IMPORT	|_IO_file_read|
	IMPORT	|_IO_file_close_it|
	IMPORT	|_IO_file_seekoff|
	IMPORT	|_IO_file_sync|
	IMPORT	|_IO_file_underflow|
	IMPORT	|_IO_file_overflow|
	IMPORT	|_IO_file_doallocate|
	IMPORT	|_IO_file_setbuf|
	IMPORT	|_IO_file_fopen|
	IMPORT	|_IO_link_in|
	IMPORT	|pubseekoff__9streambuflQ23ios8seek_diri|
	IMPORT	|xsetflags__9streambufii|
	IMPORT	|open|
	IMPORT	|xflags__9streambuf|
	IMPORT	|_IO_do_write|
	IMPORT	|_IO_file_attach|
	IMPORT	|__get_eh_context|
	IMPORT	|_vt$7filebuf|
	IMPORT	|_$_9streambuf|
	IMPORT	|__9streambufi|
	IMPORT	|_IO_file_init|
	IMPORT	|__builtin_delete|
	IMPORT	|__builtin_vec_delete|
	IMPORT	|init__3iosP9streambufP7ostream|
	IMPORT	|_vt$3ios|
	IMPORT	|eGptr__9streambuf|
	IMPORT	|pptr__C9streambuf|
	IMPORT	|gptr__C9streambuf|
	IMPORT	|is_reading__7filebuf|
	IMPORT	|egptr__C9streambuf|
	IMPORT	|eback__C9streambuf|
	IMPORT	|is_open__C7filebuf|
	IMPORT	|__tf7filebuf|
	IMPORT	|sgetc__9streambuf|
	IMPORT	|__underflow|
	IMPORT	|_IO_getc|
	IMPORT	|_IO_putc|
	IMPORT	|_IO_sgetn|
	IMPORT	|_IO_padn|
	IMPORT	|xsputn__9streambufPCci|
	IMPORT	|doallocbuf__9streambuf|
	IMPORT	|doallocate__9streambuf|
	IMPORT	|unbuffered__9streambuf|
	IMPORT	|base__C9streambuf|
	IMPORT	|_IO_seekpos|
	IMPORT	|_IO_seekoff|
	IMPORT	|in_backup__9streambuf|
	IMPORT	|_IO_free_backup_area|
	IMPORT	|__tf9streambuf|
	IMPORT	|sync_with_stdio__3iosi|
	IMPORT	|clear__3iosi|
	IMPORT	|fail__C3ios|
	IMPORT	|_throw_failure__C3ios|
	IMPORT	|__tf3ios|
	END
