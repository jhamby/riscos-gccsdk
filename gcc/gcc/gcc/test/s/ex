; Generated by gcc 2.8.0 for ARM/RISC OS
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	ALIGN
|LC..0|
	DCB &46, &6f, &6f, &3a
	DCB &3a, &46, &6f, &6f
	DCB &28, &29, &0a, &00
	ALIGN
|LC..1|
	DCB &46, &6f, &6f, &3a
	DCB &3a, &7e, &46, &6f
	DCB &6f, &28, &29, &0a
	DCB &00
	ALIGN
|LC..2|
	DCB &41, &62, &6f, &75
	DCB &74, &20, &74, &6f
	DCB &20, &74, &68, &72
	DCB &6f, &77, &0a, &00
	ALIGN
|LC..3|
	DCB &77, &6f, &62, &62
	DCB &6c, &79, &00
	ALIGN
|LC..4|
	DCB &53, &68, &6f, &75
	DCB &6c, &64, &6e, &27
	DCB &74, &20, &67, &65
	DCB &74, &20, &68, &65
	DCB &72, &65, &0a, &00
	ALIGN
	EXPORT	|throwfn__Fv|
	DCB &74, &68, &72, &6f
	DCB &77, &66, &6e, &5f
	DCB &5f, &46, &76, &00
	ALIGN
	DCD	-16777204
|throwfn__Fv|
	; args = 0, pretend = 0, frame = 16, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	sub	__sp, __sp, #16
	mov	__v6, __sp
	bl	|__get_eh_context|
	mov	__a4, __a1
	mov	__a3, __a4
	mov	__a4, __a3
	mov	__v1, __a4
	mov	__a1, __v6
	bl	|__3Foo|
	mov	__a4, __v1
	ldr	__a3, [__a4, #0]
	add	__a4, __a3, #4
	ldr	__a3, [__a4, #0]
	str	__a3, [__v6, #4]
	ldr	__a3, |L..8|
	str	__a3, [__v6, #8]
	str	__v6, [__v6, #12]
	add	__a3, __v6, #4
	str	__a3, [__a4, #0]
	ldr	__a1, |L..8|+4
	ldr	__a2, |L..8|+8
	bl	|fprintf|
	bl	|__tfPc|
	mov	__a4, __a1
	ldr	__a1, |L..8|+12
	mov	__a2, __a4
	mov	__a3, #0
	bl	|__cp_push_exception|
	bl	|__sjthrow|
|L..9|
	ALIGN
|L..8|
	DCD	|_$_3Foo|
	DCD	|__iob|+88
	DCD	|LC..2|
	DCD	|LC..3|
	ldr	__a1, |L..11|
	ldr	__a2, |L..11|+4
	bl	|fprintf|
	mov	__a4, __v1
	ldr	__a3, [__a4, #0]
	add	__a4, __a3, #4
	ldr	__a3, [__a4, #0]
	ldr	__a2, [__a3, #0]
	str	__a2, [__a4, #0]
	mov	__a1, __v6
	mov	__a2, #2
	bl	|_$_3Foo|
	b	|L..10|
|L..12|
	ALIGN
|L..11|
	DCD	|__iob|+88
	DCD	|LC..4|
|L..10|
|L..7|
	ldmea	__fp, {__v1, __v6, __fp, __sp, __pc}^
	ALIGN
|LC..5|
	DCB &45, &6e, &74, &65
	DCB &72, &65, &64, &20
	DCB &6d, &61, &69, &6e
	DCB &0a, &00
	ALIGN
|LC..6|
	DCB &43, &61, &75, &67
	DCB &68, &74, &20, &61
	DCB &20, &27, &25, &73
	DCB &27, &0a, &00
	ALIGN
|LC..7|
	DCB &45, &78, &69, &74
	DCB &69, &6e, &67, &20
	DCB &6d, &61, &69, &6e
	DCB &2e, &0a, &00
	ALIGN
	EXPORT	|main|
	DCB &6d, &61, &69, &6e
	DCB &00
	ALIGN
	DCD	-16777208
|main|
	; args = 0, pretend = 0, frame = 112, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __ip, __lr, __pc}
	stfe	__f7, [__sp, #-12]!
	stfe	__f6, [__sp, #-12]!
	stfe	__f5, [__sp, #-12]!
	stfe	__f4, [__sp, #-12]!
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	sub	__sp, __sp, #112
	mov	__v6, __sp
	bl	|__get_eh_context|
	mov	__a4, __a1
	mov	__a3, __a4
	mov	__a4, __a3
	str	__a4, [__v6, #80]
	bl	|__gccmain|
	ldr	__a1, |L..29|
	ldr	__a2, |L..29|+4
	bl	|fprintf|
	ldr	__v1, [__v6, #80]
	str	__v1, [__v6, #84]
	ldr	__v1, [__v6, #84]
	ldr	__a4, [__v1, #0]
	str	__a4, [__v6, #0]
	mov	__a4, #0
	str	__a4, [__v6, #4]
	add	__a4, __v6, #8
	str	__fp, [__a4, #0]
	mov	__v1, #0
	str	__v1, [__v6, #88]
	b	|L..16|
|L..17|
	mov	__a1, __fp
	bl	|__sort_that_bloody_fp|
	str	__ip, [__v6, #88]
	b	|L..15|
|L..16|
	ldr	__v1, [__v6, #84]
	str	__v6, [__v1, #0]
	bl	|throwfn__Fv|
	ldr	__a4, [__v6, #80]
	ldr	__a3, [__a4, #0]
	ldr	__a2, [__a3, #0]
	str	__a2, [__a4, #0]
|L..18|
	ldr	__a1, |L..29|
	ldr	__a2, |L..29|+8
	bl	|fprintf|
	mov	__a1, #0
	b	|L..13|
	mov	__a1, #0
	b	|L..13|
	b	|L..28|
|L..15|
	bl	|__cp_exception_info|
	mov	__a4, __a1
	str	__a4, [__v6, #24]
	bl	|__tfPCc|
	mov	__a4, __a1
	ldr	__a3, [__v6, #24]
	ldr	__ip, [__v6, #24]
	mov	__a1, __a4
	ldr	__a2, [__a3, #4]
	ldr	__a3, [__ip, #0]
	bl	|__throw_type_match_rtti|
	str	__a1, [__v6, #92]
	cmp	__a1, #0
	beq	|L..19|
	ldr	__a3, [__v6, #24]
	ldr	__a4, [__v6, #24]
	ldr	__a3, [__v6, #24]
	ldr	__a2, [__a3, #20]
	add	__a3, __a2, #1
	str	__a3, [__a4, #20]
	ldr	__v1, [__v6, #80]
	str	__v1, [__v6, #96]
	ldr	__v1, [__v6, #96]
	ldr	__a4, [__v1, #0]
	str	__a4, [__v6, #28]
	mov	__a4, #0
	str	__a4, [__v6, #32]
	add	__a4, __v6, #36
	str	__fp, [__a4, #0]
	mov	__v1, #0
	str	__v1, [__v6, #100]
	b	|L..22|
|L..23|
	mov	__a1, __fp
	bl	|__sort_that_bloody_fp|
	str	__ip, [__v6, #100]
	b	|L..21|
|L..22|
	add	__a4, __v6, #28
	ldr	__v1, [__v6, #96]
	str	__a4, [__v1, #0]
	ldr	__v1, [__v6, #92]
	str	__v1, [__v6, #52]
	ldr	__a4, [__v6, #24]
	mov	__a3, #1
	mov	__a2, __a3
	strb	__a2, [__a4, #12]
	ldr	__a1, |L..29|
	ldr	__a2, |L..29|+12
	ldr	__a3, [__v6, #52]
	bl	|fprintf|
	ldr	__a4, [__v6, #80]
	ldr	__a3, [__a4, #0]
	ldr	__a2, [__a3, #0]
	str	__a2, [__a4, #0]
	ldr	__a1, [__v6, #24]
	bl	|__cp_pop_exception|
	b	|L..18|
|L..19|
	bl	|__sjthrow|
|L..21|
	ldr	__v1, [__v6, #80]
	str	__v1, [__v6, #104]
	ldr	__v1, [__v6, #104]
	ldr	__a4, [__v1, #0]
	str	__a4, [__v6, #56]
	mov	__a4, #0
	str	__a4, [__v6, #60]
	add	__a4, __v6, #64
	str	__fp, [__a4, #0]
	mov	__v1, #0
	str	__v1, [__v6, #108]
	b	|L..26|
|L..27|
	mov	__a1, __fp
	bl	|__sort_that_bloody_fp|
	str	__ip, [__v6, #108]
	b	|L..25|
|L..26|
	add	__a4, __v6, #56
	ldr	__v1, [__v6, #104]
	str	__a4, [__v1, #0]
	ldr	__a1, [__v6, #24]
	bl	|__cp_pop_exception|
	ldr	__a4, [__v6, #80]
	ldr	__a3, [__a4, #0]
	ldr	__a2, [__a3, #0]
	str	__a2, [__a4, #0]
	bl	|__sjthrow|
|L..25|
	bl	|__terminate|
|L..30|
	ALIGN
|L..29|
	DCD	|__iob|+88
	DCD	|LC..5|
	DCD	|LC..7|
	DCD	|LC..6|
|L..28|
|L..13|
	ldfe	__f7, [__fp, #-48]
	ldfe	__f6, [__fp, #-60]
	ldfe	__f5, [__fp, #-72]
	ldfe	__f4, [__fp, #-84]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
	AREA |__tiPCc|, DATA, COMMON
	% 12	; size=12
	AREA |C$$code2|, CODE, READONLY
	ALIGN
|LC..8|
	DCB &50, &43, &63, &00
	ALIGN
	DCB &5f, &5f, &74, &66
	DCB &50, &43, &63, &00
	ALIGN
	DCD	-16777208
|__tfPCc|
	KEEP |__tfPCc|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	mov	__v6, __sp
	ldr	__a4, |L..33|
	ldr	__a3, [__a4, #0]
	cmp	__a3, #0
	bne	|L..32|
	bl	|__tfCc|
	mov	__a4, __a1
	ldr	__a1, |L..33|
	ldr	__a2, |L..33|+4
	ldr	__a3, |L..33|+8
	bl	|__rtti_ptr|
|L..32|
	ldr	__a1, |L..33|
	b	|L..31|
|L..34|
	ALIGN
|L..33|
	DCD	|__tiPCc|
	DCD	|LC..8|
	DCD	|__tiCc|
|L..31|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	AREA |__tiCc|, DATA, COMMON
	% 16	; size=16
	AREA |C$$code3|, CODE, READONLY
	ALIGN
|LC..9|
	DCB &43, &63, &00
	ALIGN
	DCB &5f, &5f, &74, &66
	DCB &43, &63, &00
	ALIGN
	DCD	-16777208
|__tfCc|
	KEEP |__tfCc|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	mov	__v6, __sp
	ldr	__a4, |L..37|
	ldr	__a3, [__a4, #0]
	cmp	__a3, #0
	bne	|L..36|
	bl	|__tfc|
	mov	__a4, __a1
	ldr	__a1, |L..37|
	ldr	__a2, |L..37|+4
	mov	__a3, #1
	ldr	__a4, |L..37|+8
	bl	|__rtti_attr|
|L..36|
	ldr	__a1, |L..37|
	b	|L..35|
|L..38|
	ALIGN
|L..37|
	DCD	|__tiCc|
	DCD	|LC..9|
	DCD	|__tic|
|L..35|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	AREA |__tiPc|, DATA, COMMON
	% 12	; size=12
	AREA |C$$code4|, CODE, READONLY
	ALIGN
|LC..10|
	DCB &50, &63, &00
	ALIGN
	DCB &5f, &5f, &74, &66
	DCB &50, &63, &00
	ALIGN
	DCD	-16777208
|__tfPc|
	KEEP |__tfPc|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	mov	__v6, __sp
	ldr	__a4, |L..41|
	ldr	__a3, [__a4, #0]
	cmp	__a3, #0
	bne	|L..40|
	bl	|__tfc|
	mov	__a4, __a1
	ldr	__a1, |L..41|
	ldr	__a2, |L..41|+4
	ldr	__a3, |L..41|+8
	bl	|__rtti_ptr|
|L..40|
	ldr	__a1, |L..41|
	b	|L..39|
|L..42|
	ALIGN
|L..41|
	DCD	|__tiPc|
	DCD	|LC..10|
	DCD	|__tic|
|L..39|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	ALIGN
	DCB &5f, &24, &5f, &33
	DCB &46, &6f, &6f, &00
	ALIGN
	DCD	-16777208
|_$_3Foo|
	KEEP |_$_3Foo|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	mov	__v6, __sp
	mov	__v1, __a1
	mov	__v2, __a2
	ldr	__a1, |L..43|
	ldr	__a2, |L..43|+4
	bl	|fprintf|
|L..4|
	and	__a4, __v2, #1
	cmp	__a4, #0
	beq	|L..6|
	mov	__a1, __v1
	bl	|__builtin_delete|
	b	|L..6|
|L..44|
	ALIGN
|L..43|
	DCD	|__iob|+88
	DCD	|LC..1|
|L..5|
|L..6|
|L..3|
	ldmea	__fp, {__v1, __v2, __v6, __fp, __sp, __pc}^
	ALIGN
	DCB &5f, &5f, &33, &46
	DCB &6f, &6f, &00
	ALIGN
	DCD	-16777208
|__3Foo|
	KEEP |__3Foo|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	mov	__v6, __sp
	mov	__v1, __a1
	ldr	__a1, |L..45|
	ldr	__a2, |L..45|+4
	bl	|fprintf|
|L..2|
	mov	__a1, __v1
	b	|L..1|
|L..46|
	ALIGN
|L..45|
	DCD	|__iob|+88
	DCD	|LC..0|
|L..1|
	ldmea	__fp, {__v1, __v6, __fp, __sp, __pc}^
	IMPORT	|__main|
	DCD	|__main|
	END
