; Generated by gcc 2.96 19990713 (experimental) for ARM/RISC OS
__r0	RN	0
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	ALIGN
|LC..0|
	DCB &46, &6f, &6f, &3a
	DCB &3a, &46, &6f, &6f
	DCB &28, &29, &0a, &00
	ALIGN
|LC..1|
	DCB &46, &6f, &6f, &3a
	DCB &3a, &7e, &46, &6f
	DCB &6f, &28, &29, &0a
	DCB &00
	ALIGN
|LC..2|
	DCB &41, &62, &6f, &75
	DCB &74, &20, &74, &6f
	DCB &20, &74, &68, &72
	DCB &6f, &77, &0a, &00
	ALIGN
|LC..3|
	DCB &77, &6f, &62, &62
	DCB &6c, &79, &00
	ALIGN
|LC..4|
	DCB &53, &68, &6f, &75
	DCB &6c, &64, &6e, &27
	DCB &74, &20, &67, &65
	DCB &74, &20, &68, &65
	DCB &72, &65, &0a, &00
	ALIGN
	EXPORT	|throwfn__Fv|
	DCB &74, &68, &72, &6f
	DCB &77, &66, &6e, &5f
	DCB &5f, &46, &76, &00
	ALIGN
	DCD	-16777204
|throwfn__Fv|
	; args = 0, pretend = 0, frame = 16, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	sub	__sp, __sp, #16
	bl	|__get_eh_context|
	ldr	__a2, |L..15|
	ldr	__v2, |L..15|+4
	mov	__v1, __a1
	ldr	__a1, [__v2, #0]
	mov	__a4, __v1
	bl	|fprintf|
	ldr	__a2, [__v1, #4]
	ldr	__a4, |L..15|+8
	ldr	__a3, [__a2, #4]
	stmib	__sp, {__a3, __a4, __sp}	; phole stm
	add	__a4, __sp, #4
	str	__a4, [__a2, #4]
	ldr	__a2, |L..15|+12
	ldr	__a1, [__v2, #0]
	bl	|fprintf|
	bl	|__tfPCc|
	mov	__a2, __a1
	ldr	__a1, |L..15|+16
	mov	__a3, #0
	bl	|__cp_push_exception|
	bl	|__sjthrow|
|L..16|
	ALIGN
|L..15|
	DCD	|LC..0|
	DCD	|__stderr|
	DCD	|_$_3Foo|
	DCD	|LC..2|
	DCD	|LC..3|
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
	ALIGN
|LC..5|
	DCB &45, &6e, &74, &65
	DCB &72, &65, &64, &20
	DCB &6d, &61, &69, &6e
	DCB &0a, &00
	ALIGN
|LC..6|
	DCB &43, &61, &75, &67
	DCB &68, &74, &20, &61
	DCB &20, &27, &25, &73
	DCB &27, &0a, &00
	ALIGN
|LC..7|
	DCB &43, &61, &75, &67
	DCB &68, &74, &20, &61
	DCB &20, &6e, &75, &6d
	DCB &62, &65, &72, &20
	DCB &25, &64, &0a, &00
	ALIGN
|LC..8|
	DCB &45, &78, &69, &74
	DCB &69, &6e, &67, &20
	DCB &6d, &61, &69, &6e
	DCB &2e, &0a, &00
	ALIGN
	EXPORT	|main|
	DCB &6d, &61, &69, &6e
	DCB &00
	ALIGN
	DCD	-16777208
|main|
	; args = 0, pretend = 0, frame = 500, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	sub	__ip, __sp, #500
	cmp	__ip, __sl
	bllt	|x$stack_overflow_1|
	sub	__sp, __sp, #500
	bl	|__get_eh_context|
	mov	__v2, __a1
	mov	__a4, __v2
	bl	|__gccmain|
	ldr	__v1, |L..35|
	ldr	__a2, |L..35|+4
	ldr	__a1, [__v1, #0]
	bl	|fprintf|
	ldr	__a4, [__v2, #4]
	str	__a4, [__sp, #0]
	mov	__a3, #0
	str	__a3, [__sp, #4]
	add	__a1, __sp, #8
	mov	__v3, __v1
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..18|
	str	__sp, [__v2, #4]
	bl	|throwfn__Fv|
	ldr	__a4, [__v2, #4]
	ldr	__a3, [__a4, #0]
	str	__a3, [__v2, #4]
|L..20|
	ldr	__a1, [__v3, #0]
	ldr	__a2, |L..35|+8
	bl	|fprintf|
	mov	__a1, #0
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..18|
	ldr	__a1, |L..35|+12
	bl	|__eh_rtime_match|
	cmp	__a1, #0
	beq	|L..24|
	bl	|__start_cp_handler|
	mov	__v1, __a1
	ldr	__a4, [__v2, #4]
	str	__a4, [__sp, #100]
	mov	__a3, #0
	str	__a3, [__sp, #104]
	add	__a1, __sp, #108
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..22|
	add	__a4, __sp, #100
	str	__a4, [__v2, #4]
	ldr	__a2, |L..35|+16
	ldr	__a1, [__v3, #0]
	ldr	__a3, [__v1, #8]
	bl	|fprintf|
	b	|L..34|
|L..24|
	ldr	__a1, |L..35|+20
	bl	|__eh_rtime_match|
	cmp	__a1, #0
	beq	|L..25|
	bl	|__start_cp_handler|
	mov	__v1, __a1
	ldr	__a4, [__v2, #4]
	str	__a4, [__sp, #200]
	mov	__a3, #0
	str	__a3, [__sp, #204]
	add	__a1, __sp, #208
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..26|
	add	__a4, __sp, #200
	str	__a4, [__v2, #4]
	ldr	__a2, |L..35|+24
	ldr	__a4, [__v1, #8]
	ldr	__a1, [__v3, #0]
	ldr	__a3, [__a4, #0]
	bl	|fprintf|
|L..34|
	ldr	__a4, [__v2, #4]
	ldr	__a3, [__a4, #0]
	str	__a3, [__v2, #4]
	mov	__a1, __v1
	bl	|__cp_pop_exception|
	b	|L..20|
|L..25|
	bl	|__sjthrow|
|L..22|
	ldr	__a3, [__v2, #4]
	mov	__a4, #0
	str	__a4, [__sp, #304]
	str	__a3, [__sp, #300]
	add	__a1, __sp, #308
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..28|
	add	__a4, __sp, #300
	str	__a4, [__v2, #4]
	mov	__a1, __v1
	bl	|__cp_pop_exception|
	ldr	__a4, [__v2, #4]
	ldr	__a3, [__a4, #0]
	str	__a3, [__v2, #4]
	bl	|__sjthrow|
|L..26|
	ldr	__a3, [__v2, #4]
	mov	__a4, #0
	str	__a4, [__sp, #404]
	str	__a3, [__sp, #400]
	add	__a1, __sp, #408
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..30|
	add	__a4, __sp, #400
	str	__a4, [__v2, #4]
	mov	__a1, __v1
	bl	|__cp_pop_exception|
	ldr	__a4, [__v2, #4]
	ldr	__a3, [__a4, #0]
	str	__a3, [__v2, #4]
	bl	|__sjthrow|
|L..28|
	bl	|__terminate|
|L..30|
	bl	|__terminate|
|L..36|
	ALIGN
|L..35|
	DCD	|__stderr|
	DCD	|LC..5|
	DCD	|LC..8|
	DCD	|__tfPCc|
	DCD	|LC..6|
	DCD	|__tfi|
	DCD	|LC..7|
	AREA |Common$$__tiPCc|, DATA, COMMON
|__tiPCc|
	% 12	; size=12
	EXPORT	|__tiPCc|
	AREA |C$$code2|, CODE, READONLY
	ALIGN
|LC..9|
	DCB &50, &43, &63, &00
	AREA |Common$$__tiCc|, DATA, COMMON
|__tiCc|
	% 16	; size=16
	EXPORT	|__tiCc|
	AREA |C$$code3|, CODE, READONLY
	ALIGN
|LC..10|
	DCB &43, &63, &00
	ALIGN
	DCB &5f, &24, &5f, &33
	DCB &46, &6f, &6f, &00
	ALIGN
	DCD	-16777208
|_$_3Foo|
	KEEP |_$_3Foo|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	ldr	__a4, |L..41|
	mov	__v1, __a2
	ldr	__a2, |L..41|+4
	mov	__v2, __a1
	ldr	__a1, [__a4, #0]
	bl	|fprintf|
	tst	__v1, #1
	ldmeqea	__fp, {__v1, __v2, __fp, __sp, __pc}^
	mov	__a1, __v2
	ldmea	__fp, {__v1, __v2, __fp, __sp, __lr}
	b	|__builtin_delete|
|L..42|
	ALIGN
|L..41|
	DCD	|__stderr|
	DCD	|LC..1|
	ALIGN
	DCB &5f, &5f, &74, &66
	DCB &50, &43, &63, &00
	ALIGN
	DCD	-16777208
|__tfPCc|
	KEEP |__tfPCc|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	ldr	__v1, |L..43|
	ldr	__a4, [__v1, #0]
	cmp	__a4, #0
	bne	|L..38|
	bl	|__tfCc|
	ldr	__a2, |L..43|+4
	ldr	__a3, |L..43|+8
	mov	__a1, __v1
	bl	|__rtti_ptr|
|L..38|
	mov	__a1, __v1
	ldmea	__fp, {__v1, __fp, __sp, __pc}^
|L..44|
	ALIGN
|L..43|
	DCD	|__tiPCc|
	DCD	|LC..9|
	DCD	|__tiCc|
	ALIGN
	DCB &5f, &5f, &74, &66
	DCB &43, &63, &00
	ALIGN
	DCD	-16777208
|__tfCc|
	KEEP |__tfCc|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	ldr	__v1, |L..45|
	ldr	__a4, [__v1, #0]
	cmp	__a4, #0
	bne	|L..40|
	bl	|__tfc|
	ldr	__a2, |L..45|+4
	mov	__a1, __v1
	ldr	__a4, |L..45|+8
	mov	__a3, #1
	bl	|__rtti_attr|
|L..40|
	mov	__a1, __v1
	ldmea	__fp, {__v1, __fp, __sp, __pc}^
|L..46|
	ALIGN
|L..45|
	DCD	|__tiCc|
	DCD	|LC..10|
	DCD	|__tic|
	IMPORT	|__main|
	DCD	|__main|
	END
