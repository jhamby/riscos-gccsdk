; Generated by gcc 2.95.1 19990816 (release) for ARM/RISC OS
__r0	RN	0
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	ALIGN
	EXPORT	|alloc|
|alloc|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	stmfd	__sp!, {__lr}
	ldmfd	__sp!, {__lr}
	b	|malloc|
	ALIGN
|LC..0|
	DCB &25, &64, &20, &25
	DCB &64, &00
	ALIGN
	EXPORT	|bar|
|bar|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	; I don't think this function clobbers lr
	mov	__a4, __a3
	mov	__a3, __a2
	ldr	__a2, |L..4|
	b	|printf|
|L..5|
	ALIGN
|L..4|
	DCD	|LC..0|
	ALIGN
	EXPORT	|foo|
|foo|
	; args = 0, pretend = 0, frame = 0, alloca = 1
	; frame_needed = 0, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	stmfd	__sp!, {__v6, __fp, __lr}
	mov	__v6, __sp
	add	__a1, __a1, #3
	bic	__a1, __a1, #3
	rsb	__sp, __a1, __sp
	mov	__a1, __sp
	bl	|bar|
	add	__sp, __v6, #0
	ldmfd	__sp!, {__v6, __fp, __pc}^
	ALIGN
	EXPORT	|main|
|main|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	stmfd	__sp!, {__lr}
	bl	|__gccmain|
	mov	__a1, #20
	mov	__a2, #30
	mov	__a3, #40
	bl	|foo|
	mov	__a1, #0
	ldmfd	__sp!, {__pc}^
	IMPORT	|__main|
	DCD	|__main|
	END
