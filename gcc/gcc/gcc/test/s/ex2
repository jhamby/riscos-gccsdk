; Generated by gcc 2.96 19990713 (experimental) for ARM/RISC OS
__r0	RN	0
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	ALIGN
	EXPORT	|zzz__Fv|
	DCB &7a, &7a, &7a, &5f
	DCB &5f, &46, &76, &00
	ALIGN
	DCD	-16777208
|zzz__Fv|
	; args = 0, pretend = 0, frame = 100, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	sub	__sp, __sp, #100
	mov	__v6, __sp
	bl	|__get_eh_context|
	mov	__a4, __a1
	mov	__a3, __a4
	mov	__a4, __a3
	mov	__v1, __a4
	mov	__a1, #4
	bl	|__eh_alloc|
	mov	__v2, __a1
	add	__v3, __v1, #4
	ldr	__a4, [__v3, #0]
	str	__a4, [__v6, #0]
	mov	__a4, #0
	str	__a4, [__v6, #4]
	add	__a4, __v6, #8
	mov	__a1, __a4
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..3|
	str	__v6, [__v3, #0]
	mov	__a4, #1
	str	__a4, [__v2, #0]
	add	__a4, __v1, #4
	ldr	__a3, [__a4, #0]
	ldr	__a2, [__a3, #0]
	str	__a2, [__a4, #0]
	bl	|__tfi|
	mov	__a4, __a1
	mov	__a1, __v2
	mov	__a2, __a4
	mov	__a3, #0
	bl	|__cp_push_exception|
	bl	|__sjthrow|
	b	|L..5|
|L..3|
	bl	|terminate__Fv|
|L..5|
	b	|L..6|
	b	|L..2|
|L..6|
|L..2|
	ldmea	__fp, {__v1, __v2, __v3, __v6, __fp, __sp, __pc}^
	ALIGN
|LC..0|
	DCB &63, &61, &75, &67
	DCB &68, &74, &20, &25
	DCB &64, &0a, &00
	ALIGN
	EXPORT	|main|
	DCB &6d, &61, &69, &6e
	DCB &00
	ALIGN
	DCD	-16777208
|main|
	; args = 0, pretend = 0, frame = 308, alloca = 0
	; frame_needed = 1, anonymous_args = 0, nonlocal_label = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	sub	__ip, __sp, #308
	cmp	__ip, __sl
	bllt	|x$stack_overflow_1|
	sub	__sp, __sp, #308
	mov	__v6, __sp
	bl	|__get_eh_context|
	mov	__a4, __a1
	mov	__a3, __a4
	mov	__a4, __a3
	mov	__v1, __a4
	bl	|__gccmain|
	add	__v2, __v1, #4
	ldr	__a4, [__v2, #0]
	str	__a4, [__v6, #0]
	mov	__a4, #0
	str	__a4, [__v6, #4]
	add	__a4, __v6, #8
	mov	__a1, __a4
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..8|
	str	__v6, [__v2, #0]
	bl	|zzz__Fv|
	add	__a4, __v1, #4
	ldr	__a3, [__a4, #0]
	ldr	__a2, [__a3, #0]
	str	__a2, [__a4, #0]
|L..10|
	mov	__a1, #0
	b	|L..7|
	mov	__a1, #0
	b	|L..7|
	b	|L..16|
|L..8|
	ldr	__a4, |L..17|
	mov	__a1, __a4
	bl	|__eh_rtime_match|
	cmp	__a1, #0
	beq	|L..11|
	bl	|__start_cp_handler|
	mov	__a4, __a1
	str	__a4, [__v6, #100]
	add	__v2, __v1, #4
	ldr	__a4, [__v2, #0]
	str	__a4, [__v6, #104]
	mov	__a4, #0
	str	__a4, [__v6, #108]
	add	__a4, __v6, #112
	mov	__a1, __a4
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..12|
	add	__a4, __v6, #104
	str	__a4, [__v2, #0]
	ldr	__a4, [__v6, #100]
	ldr	__a3, [__a4, #8]
	ldr	__a4, [__a3, #0]
	str	__a4, [__v6, #204]
	ldr	__a1, |L..17|+4
	ldr	__a2, [__v6, #204]
	bl	|printf|
	add	__a4, __v1, #4
	ldr	__a3, [__a4, #0]
	ldr	__a2, [__a3, #0]
	str	__a2, [__a4, #0]
	ldr	__a1, [__v6, #100]
	bl	|__cp_pop_exception|
	b	|L..10|
|L..11|
	bl	|__sjthrow|
|L..12|
	add	__v2, __v1, #4
	ldr	__a4, [__v2, #0]
	str	__a4, [__v6, #208]
	mov	__a4, #0
	str	__a4, [__v6, #212]
	add	__a4, __v6, #216
	mov	__a1, __a4
	bl	|___arm_alloca_setjmp|
	cmp	__a1, #0
	bne	|L..14|
	add	__a4, __v6, #208
	str	__a4, [__v2, #0]
	ldr	__a1, [__v6, #100]
	bl	|__cp_pop_exception|
	add	__a4, __v1, #4
	ldr	__a3, [__a4, #0]
	ldr	__a2, [__a3, #0]
	str	__a2, [__a4, #0]
	bl	|__sjthrow|
|L..14|
	bl	|__terminate|
|L..18|
	ALIGN
|L..17|
	DCD	|__tfi|
	DCD	|LC..0|
|L..16|
|L..7|
	ldmea	__fp, {__v1, __v2, __v6, __fp, __sp, __pc}^
	IMPORT	|__main|
	DCD	|__main|
	END
