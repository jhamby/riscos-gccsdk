; Generated by gcc egcs-2.90.01 970821 (gcc2-970802 experimental) for ARM/RISC OS
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
; GNU C version egcs-2.90.01 970821 (gcc2-970802 experimental) (arm-acorn-riscos) compiled by CC.
; options passed: 
; options enabled:  -fpeephole -ffunction-cse -fkeep-static-consts
; -freg-struct-return -fexceptions -fsjlj-exceptions -fcommon -fverbose-asm
; -fgnu-linker -fargument-alias -mapcs -mapcs-frame -mpoke-function-name
; -mapcs-stack-check

|gcc2_compiled.|
	AREA |C$$data1|, DATA
	ALIGN
|prefixes|
	KEEP |prefixes|
	DCD	|LC..0|
	DCD	|LC..1|
	DCD	|LC..2|
	DCD	|LC..3|
	DCD	|LC..4|
	DCD	|LC..5|
	DCD	|LC..6|
	DCD	|LC..7|
	DCD	|LC..8|
	DCD	|LC..9|
	DCD	|LC..10|
	DCD	|LC..11|
	DCD	|LC..12|
	DCD	|LC..13|
	DCD	|LC..14|
	DCD	|LC..15|
	DCD	|LC..16|
	DCD	|LC..14|
	DCD	|LC..17|
	DCD	|LC..18|
	DCD	|LC..19|
	DCD	|LC..20|
	DCD	|LC..21|
	DCD	|LC..22|
	DCD	|LC..23|
	DCD	|LC..24|
	DCD	|LC..25|
	DCD	|LC..26|
	DCD	|LC..27|
	DCD	0
	AREA |C$$code2|, CODE, READONLY
	ALIGN
|LC..27|
	DCB &78, &72, &73, &00
	ALIGN
|LC..26|
	DCB &78, &72, &62, &00
	ALIGN
|LC..25|
	DCB &61, &64, &63, &00
	ALIGN
|LC..24|
	DCB &61, &6c, &69, &00
	ALIGN
|LC..23|
	DCB &61, &64, &61, &00
	ALIGN
|LC..22|
	DCB &61, &64, &62, &00
	ALIGN
|LC..21|
	DCB &61, &64, &73, &00
	ALIGN
|LC..20|
	DCB &79, &00
	ALIGN
|LC..19|
	DCB &6f, &00
	ALIGN
|LC..18|
	DCB &6c, &00
	ALIGN
|LC..17|
	DCB &73, &00
	ALIGN
|LC..16|
	DCB &68, &00
	ALIGN
|LC..15|
	DCB &69, &69, &00
	ALIGN
|LC..14|
	DCB &69, &00
	ALIGN
|LC..13|
	DCB &72, &70, &6f, &00
	ALIGN
|LC..12|
	DCB &6d, &00
	ALIGN
|LC..11|
	DCB &63, &00
	ALIGN
|LC..10|
	DCB &63, &2b, &2b, &00
	ALIGN
|LC..9|
	DCB &63, &70, &70, &00
	ALIGN
|LC..8|
	DCB &63, &78, &78, &00
	ALIGN
|LC..7|
	DCB &63, &63, &00
	ALIGN
|LC..6|
	DCB &67, &70, &69, &00
	ALIGN
|LC..5|
	DCB &70, &68, &00
	ALIGN
|LC..4|
	DCB &70, &61, &73, &00
	ALIGN
|LC..3|
	DCB &70, &00
	ALIGN
|LC..2|
	DCB &66, &70, &70, &00
	ALIGN
|LC..1|
	DCB &66, &6f, &72, &00
	ALIGN
|LC..0|
	DCB &66, &00
	ALIGN
	DCB &67, &65, &74, &5f
	DCB &64, &69, &72, &65
	DCB &63, &74, &6f, &72
	DCB &79, &5f, &6e, &61
	DCB &6d, &65, &00
	ALIGN
	DCD	-16777196
|get_directory_name|
	KEEP |get_directory_name|
	; args = 0, pretend = 0, frame = 12
	; frame_needed = 1, current_function_anonymous_args = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	sub	__sp, __sp, #12
	mov	__v6, __sp
	str	__a1, [__v6, #0]
	str	__a2, [__v6, #4]
	ldr	__a4, [__v6, #0]
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #0
	bne	|L..2|
	mov	__a1, #0
	b	|L..1|
|L..2|
	ldr	__a1, [__v6, #0]
	mov	__a2, #46
	bl	|strchr|
	str	__a1, [__v6, #8]
	ldr	__a4, [__v6, #8]
	cmp	__a4, #0
	beq	|L..3|
	ldr	__a4, [__v6, #0]
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #46
	bne	|L..4|
	mov	__a4, #1
	ldr	__a3, [__v6, #0]
	add	__a4, __a4, __a3
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #47
	bne	|L..5|
	ldr	__a4, [__v6, #0]
	add	__a3, __a4, #1
	str	__a3, [__v6, #8]
	b	|L..4|
|L..5|
	mov	__a4, #1
	ldr	__a3, [__v6, #0]
	add	__a4, __a4, __a3
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #46
	bne	|L..4|
	mov	__a4, #2
	ldr	__a3, [__v6, #0]
	add	__a4, __a4, __a3
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #47
	bne	|L..4|
	ldr	__a4, [__v6, #0]
	add	__a3, __a4, #2
	str	__a3, [__v6, #8]
|L..7|
|L..6|
|L..4|
	ldr	__a4, [__v6, #8]
	ldr	__a3, [__v6, #0]
	rsb	__a4, __a3, __a4
	ldr	__a1, [__v6, #4]
	ldr	__a2, [__v6, #0]
	mov	__a3, __a4
	bl	|strncpy|
	ldr	__a4, [__v6, #8]
	ldr	__a3, [__v6, #0]
	rsb	__a4, __a3, __a4
	ldr	__a3, [__v6, #4]
	add	__a4, __a4, __a3
	mov	__a3, #0
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	mov	__a1, #1
	b	|L..1|
|L..3|
	ldr	__a1, [__v6, #4]
	ldr	__a2, [__v6, #0]
	bl	|strcpy|
	mov	__a1, #0
	b	|L..1|
|L..1|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	ALIGN
	DCB &61, &64, &64, &5f
	DCB &64, &69, &72, &65
	DCB &63, &74, &6f, &72
	DCB &79, &5f, &6e, &61
	DCB &6d, &65, &00
	ALIGN
	DCD	-16777196
|add_directory_name|
	KEEP |add_directory_name|
	; args = 0, pretend = 0, frame = 8
	; frame_needed = 1, current_function_anonymous_args = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	sub	__sp, __sp, #8
	mov	__v6, __sp
	str	__a1, [__v6, #0]
	str	__a2, [__v6, #4]
	mov	__a4, #1
	ldr	__a3, [__v6, #4]
	add	__a4, __a4, __a3
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #0
	bne	|L..9|
	ldr	__a3, [__v6, #4]
	ldrb	__a4, [__a3, #0]	; zero_extendqisi2
	cmp	__a4, #46
	beq	|L..14|
	cmp	__a4, #46
	bgt	|L..18|
	cmp	__a4, #36
	beq	|L..11|
	cmp	__a4, #37
	beq	|L..15|
	b	|L..16|
|L..18|
	cmp	__a4, #64
	beq	|L..14|
	cmp	__a4, #94
	beq	|L..12|
	b	|L..16|
|L..11|
	b	|L..10|
|L..12|
	ldr	__a4, [__v6, #0]
	mov	__a3, #46
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	ldr	__a4, [__v6, #0]
	mov	__a3, #46
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	b	|L..10|
|L..13|
|L..14|
	ldr	__a4, [__v6, #0]
	mov	__a3, #46
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	b	|L..10|
|L..15|
	ldr	__a4, [__v6, #0]
	mov	__a3, #47
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	ldr	__a4, [__v6, #0]
	mov	__a3, #108
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	ldr	__a4, [__v6, #0]
	mov	__a3, #105
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	ldr	__a4, [__v6, #0]
	mov	__a3, #98
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	b	|L..10|
|L..16|
	ldr	__a4, [__v6, #0]
	ldr	__a3, [__v6, #4]
	ldrb	__a2, [__a3, #0]
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	b	|L..10|
|L..10|
	b	|L..19|
|L..9|
	ldr	__a1, [__v6, #0]
	ldr	__a2, [__v6, #4]
	bl	|strcpy|
	ldr	__a1, [__v6, #4]
	bl	|strlen|
	mov	__a4, __a1
	ldr	__a3, [__v6, #0]
	add	__a4, __a3, __a4
	str	__a4, [__v6, #0]
|L..19|
	mvn	__a4, #1
	ldr	__a3, [__v6, #0]
	add	__a4, __a4, __a3
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #58
	bne	|L..20|
	mvn	__a4, #0
	ldr	__a3, [__v6, #0]
	add	__a4, __a4, __a3
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #94
	bne	|L..20|
	mvn	__a4, #0
	ldr	__a3, [__v6, #0]
	add	__a4, __a4, __a3
	mov	__a3, #47
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	ldr	__a4, [__v6, #0]
	mov	__a3, #46
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	ldr	__a4, [__v6, #0]
	mov	__a3, #46
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
|L..20|
	mvn	__a4, #1
	ldr	__a3, [__v6, #0]
	add	__a4, __a4, __a3
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #58
	bne	|L..21|
	mvn	__a4, #0
	ldr	__a3, [__v6, #0]
	add	__a4, __a4, __a3
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #47
	bne	|L..21|
	ldr	__a4, [__v6, #0]
	mov	__a3, #46
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	b	|L..22|
|L..21|
	ldr	__a4, [__v6, #0]
	mov	__a3, #47
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
|L..22|
	ldr	__a4, [__v6, #0]
	mov	__a3, #0
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	ldr	__a3, [__v6, #0]
	sub	__a4, __a3, #1
	mov	__a1, __a4
	b	|L..8|
|L..8|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	ALIGN
	DCB &61, &64, &64, &5f
	DCB &64, &69, &72, &65
	DCB &63, &74, &6f, &72
	DCB &79, &5f, &61, &6e
	DCB &64, &5f, &70, &72
	DCB &65, &66, &69, &78
	DCB &00
	ALIGN
	DCD	-16777188
|add_directory_and_prefix|
	KEEP |add_directory_and_prefix|
	; args = 0, pretend = 0, frame = 12
	; frame_needed = 1, current_function_anonymous_args = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	sub	__sp, __sp, #12
	mov	__v6, __sp
	str	__a1, [__v6, #0]
	str	__a2, [__v6, #4]
	str	__a3, [__v6, #8]
	ldr	__a1, [__v6, #0]
	ldr	__a2, [__v6, #4]
	bl	|strcpy|
	ldr	__a1, [__v6, #4]
	bl	|strlen|
	mov	__a4, __a1
	ldr	__a3, [__v6, #0]
	add	__a4, __a3, __a4
	str	__a4, [__v6, #0]
	ldr	__a4, [__v6, #0]
	mov	__a3, #46
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	ldr	__a1, [__v6, #0]
	ldr	__a2, [__v6, #8]
	bl	|strcpy|
	ldr	__a1, [__v6, #8]
	bl	|strlen|
	mov	__a4, __a1
	ldr	__a3, [__v6, #0]
	add	__a4, __a3, __a4
	str	__a4, [__v6, #0]
	ldr	__a4, [__v6, #0]
	mov	__a3, #0
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	ldr	__a3, [__v6, #0]
	sub	__a4, __a3, #1
	mov	__a1, __a4
	b	|L..23|
|L..23|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	ALIGN
	DCB &69, &73, &5f, &70
	DCB &72, &65, &66, &69
	DCB &78, &00
	ALIGN
	DCD	-16777204
|is_prefix|
	KEEP |is_prefix|
	; args = 0, pretend = 0, frame = 12
	; frame_needed = 1, current_function_anonymous_args = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	sub	__sp, __sp, #12
	mov	__v6, __sp
	str	__a1, [__v6, #0]
	ldr	__a1, [__v6, #0]
	mov	__a2, #46
	bl	|strchr|
	mov	__a4, __a1
	str	__a4, [__v6, #4]
	ldr	__a1, [__v6, #0]
	mov	__a2, #46
	bl	|strrchr|
	mov	__a4, __a1
	ldr	__a3, [__v6, #4]
	cmp	__a3, __a4
	beq	|L..25|
	mov	__a1, #0
	b	|L..24|
|L..25|
	mov	__a4, #0
	str	__a4, [__v6, #8]
|L..26|
	ldr	__a4, |L..30|
	ldr	__a3, [__v6, #8]
	mov	__a2, __a3
	mov	__a3, __a2, asl #2
	ldr	__a4, [__a4, __a3]
	cmp	__a4, #0
	bne	|L..28|
	b	|L..27|
|L..28|
	ldr	__a4, |L..30|
	ldr	__a3, [__v6, #8]
	mov	__a2, __a3
	mov	__a3, __a2, asl #2
	ldr	__a2, [__v6, #4]
	ldr	__a1, [__v6, #0]
	rsb	__ip, __a1, __a2
	ldr	__a1, [__a4, __a3]
	ldr	__a2, [__v6, #0]
	mov	__a3, __ip
	bl	|strncasecmp|
	mov	__a4, __a1
	cmp	__a4, #0
	bne	|L..29|
	mov	__a1, #1
	b	|L..24|
|L..29|
	ldr	__a4, [__v6, #8]
	add	__a3, __a4, #1
	str	__a3, [__v6, #8]
	b	|L..26|
|L..27|
	mov	__a1, #0
	b	|L..24|
|L..31|
	ALIGN
|L..30|
	DCD	|prefixes|
|L..24|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	ALIGN
	DCB &6f, &6e, &65, &5f
	DCB &64, &6f, &74, &00
	ALIGN
	DCD	-16777208
|one_dot|
	KEEP |one_dot|
	; args = 0, pretend = 0, frame = 8
	; frame_needed = 1, current_function_anonymous_args = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|x$stack_overflow|
	sub	__sp, __sp, #8
	mov	__v6, __sp
	str	__a1, [__v6, #0]
	mov	__a4, #0
	str	__a4, [__v6, #4]
|L..33|
	ldr	__a4, [__v6, #0]
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #0
	bne	|L..35|
	b	|L..34|
|L..35|
	ldr	__a4, [__v6, #0]
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	add	__a4, __a4, #1
	str	__a4, [__v6, #0]
	cmp	__a3, #46
	bne	|L..36|
	ldr	__a4, [__v6, #4]
	add	__a3, __a4, #1
	str	__a3, [__v6, #4]
|L..36|
	b	|L..33|
|L..34|
	ldr	__a4, [__v6, #4]
	cmp	__a4, #1
	movne	__a4, #0
	moveq	__a4, #1
	mov	__a1, __a4
	b	|L..32|
|L..32|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	ALIGN
|LC..28|
	DCB &2e, &24, &00
	ALIGN
	EXPORT	|riscos_to_unix|
	DCB &72, &69, &73, &63
	DCB &6f, &73, &5f, &74
	DCB &6f, &5f, &75, &6e
	DCB &69, &78, &00
	ALIGN
	DCD	-16777200
|riscos_to_unix|
	; args = 0, pretend = 0, frame = 412
	; frame_needed = 1, current_function_anonymous_args = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	sub	__ip, __sp, #412
	cmp	__ip, __sl
	bllt	|x$stack_overflow_1|
	sub	__sp, __sp, #412
	mov	__v6, __sp
	str	__a1, [__v6, #0]
	str	__a2, [__v6, #4]
	mov	__a4, #0
	str	__a4, [__v6, #276]
	ldr	__a4, [__v6, #4]
	str	__a4, [__v6, #8]
	ldr	__a4, [__v6, #0]
	str	__a4, [__v6, #12]
	ldr	__a4, [__v6, #8]
	mov	__a3, #0
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
	ldr	__a1, [__v6, #0]
	ldr	__a2, |L..53|
	bl	|strstr|
	mov	__a4, __a1
	str	__a4, [__v6, #272]
	ldr	__a4, [__v6, #272]
	cmp	__a4, #0
	beq	|L..38|
	ldr	__a4, [__v6, #12]
	ldrb	__a3, [__a4, #0]	; zero_extendqisi2
	cmp	__a3, #47
	beq	|L..39|
	add	__a4, __v6, #4
	ldr	__a3, [__a4, #0]
	mov	__a2, #47
	mov	__a1, __a2
	strb	__a1, [__a3, #0]
	add	__a3, __a3, #1
	str	__a3, [__a4, #0]
|L..39|
	ldr	__a4, [__v6, #272]
	add	__a3, __a4, #2
	str	__a3, [__v6, #272]
|L..40|
	ldr	__a4, [__v6, #12]
	ldr	__a3, [__v6, #272]
	cmp	__a4, __a3
	bne	|L..42|
	b	|L..41|
|L..42|
	add	__a4, __v6, #4
	ldr	__a3, [__a4, #0]
	add	__a2, __v6, #12
	ldr	__a1, [__a2, #0]
	ldrb	__ip, [__a1, #0]
	strb	__ip, [__a3, #0]
	add	__a1, __a1, #1
	str	__a1, [__a2, #0]
	add	__a3, __a3, #1
	str	__a3, [__a4, #0]
	b	|L..40|
|L..41|
	add	__a4, __v6, #4
	ldr	__a3, [__a4, #0]
	mov	__a2, #47
	mov	__a1, __a2
	strb	__a1, [__a3, #0]
	add	__a3, __a3, #1
	str	__a3, [__a4, #0]
	ldr	__a4, [__v6, #12]
	add	__a3, __a4, #1
	str	__a3, [__v6, #12]
|L..38|
	mov	r0, r0	; nop
|L..43|
	add	__a4, __v6, #16
	ldr	__a1, [__v6, #12]
	mov	__a2, __a4
	bl	|get_directory_name|
	mov	__a4, __a1
	str	__a4, [__v6, #280]
	ldr	__a4, [__v6, #280]
	cmp	__a4, #0
	bne	|L..45|
	b	|L..44|
|L..45|
	mov	__a4, #1
	str	__a4, [__v6, #276]
	ldr	__a1, [__v6, #12]
	bl	|one_dot|
	mov	__a4, __a1
	cmp	__a4, #0
	beq	|L..46|
	add	__a4, __v6, #16
	mov	__a1, __a4
	bl	|strlen|
	mov	__a4, __a1
	add	__a3, __a4, #1
	ldr	__a4, [__v6, #12]
	add	__a3, __a4, __a3
	str	__a3, [__v6, #12]
	add	__a4, __v6, #284
	ldr	__a1, [__v6, #12]
	mov	__a2, __a4
	bl	|get_directory_name|
	add	__a4, __v6, #284
	mov	__a1, __a4
	bl	|is_prefix|
	mov	__a4, __a1
	cmp	__a4, #0
	beq	|L..47|
	add	__a4, __v6, #16
	add	__a3, __v6, #284
	ldr	__a1, [__v6, #4]
	mov	__a2, __a4
	bl	|add_directory_and_prefix|
	mov	__a4, __a1
	str	__a4, [__v6, #4]
	b	|L..48|
|L..47|
	add	__a4, __v6, #16
	mov	__a1, __a4
	bl	|is_prefix|
	mov	__a4, __a1
	cmp	__a4, #0
	beq	|L..49|
	add	__a4, __v6, #284
	add	__a3, __v6, #16
	ldr	__a1, [__v6, #4]
	mov	__a2, __a4
	bl	|add_directory_and_prefix|
	mov	__a4, __a1
	str	__a4, [__v6, #4]
	b	|L..48|
|L..49|
	add	__a4, __v6, #16
	ldr	__a1, [__v6, #4]
	mov	__a2, __a4
	bl	|add_directory_name|
	mov	__a4, __a1
	str	__a4, [__v6, #4]
	add	__a4, __v6, #284
	ldr	__a1, [__v6, #4]
	mov	__a2, __a4
	bl	|add_directory_name|
	mov	__a4, __a1
	str	__a4, [__v6, #4]
	mvn	__a4, #0
	ldr	__a3, [__v6, #4]
	add	__a4, __a4, __a3
	mov	__a3, #0
	mov	__a2, __a3
	strb	__a2, [__a4, #0]
|L..50|
|L..48|
	b	|L..51|
|L..46|
	add	__a4, __v6, #16
	ldr	__a1, [__v6, #4]
	mov	__a2, __a4
	bl	|add_directory_name|
	mov	__a4, __a1
	str	__a4, [__v6, #4]
	add	__a4, __v6, #16
	mov	__a1, __a4
	bl	|strlen|
	mov	__a4, __a1
	add	__a3, __a4, #1
	ldr	__a4, [__v6, #12]
	add	__a3, __a4, __a3
	str	__a3, [__v6, #12]
|L..51|
	b	|L..43|
|L..44|
	ldr	__a4, [__v6, #276]
	cmp	__a4, #0
	bne	|L..52|
	add	__a4, __v6, #16
	ldr	__a1, [__v6, #4]
	mov	__a2, __a4
	bl	|strcpy|
|L..52|
	ldr	__a4, [__v6, #8]
	mov	__a1, __a4
	b	|L..37|
|L..54|
	ALIGN
|L..53|
	DCD	|LC..28|
|L..37|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	END
