; Generated by gcc 2.7.2 snapshot 970522 for ARM/RISC OS
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
; GNU C version 2.7.2 snapshot 970522 (arm-riscos) compiled by CC.
; options passed:  -O2
; options enabled:  -fdefer-pop -fomit-frame-pointer -fcse-follow-jumps
; -fcse-skip-blocks -fexpensive-optimizations -fthread-jumps
; -fstrength-reduce -fpeephole -fforce-mem -ffunction-cse -finline
; -fkeep-static-consts -fcaller-saves -freg-struct-return
; -frerun-cse-after-loop -fschedule-insns -fschedule-insns2 -fexceptions
; -fsjlj-exceptions -fcommon -fverbose-asm -fgnu-linker -mapcs -mapcs-frame
; -mpoke-function-name -mapcs-stack-check

|gcc2_compiled.|
	ALIGN
	EXPORT	|abort|
	DCB &61, &62, &6f, &72
	DCB &74, &00
	ALIGN
	DCD	-16777208
|abort|
	; args = 0, pretend = 0, frame = 0
	; frame_needed = 1, current_function_anonymous_args = 0
	; Volatile function.
	; I don't think this function clobbers lr
	mov	__a1, #0
	bl	|raise|
	IMPORT	|abort|
	bl	|abort|
	IMPORT	|raise|
	END
