; Generated by gcc 2.95.2 19991024 (release) for ARM/RISC OS
__r0	RN	0
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	AREA |C$$data1|, DATA
	ALIGN
|mmaps|
	KEEP |mmaps|
	DCD	0
	DCD	-1
	DCD	0
	DCD	0
	DCD	0
	DCD	-1
	DCD	0
	DCD	0
	DCD	0
	DCD	-1
	DCD	0
	DCD	0
	DCD	0
	DCD	-1
	DCD	0
	DCD	0
	DCD	0
	DCD	-1
	DCD	0
	DCD	0
	DCD	0
	DCD	-1
	DCD	0
	DCD	0
	DCD	0
	DCD	-1
	DCD	0
	DCD	0
	DCD	0
	DCD	-1
	DCD	0
	DCD	0
	ALIGN
|page_size|
	KEEP |page_size|
	DCD	0
	AREA |C$$code2|, CODE, READONLY
	ALIGN
	EXPORT	|__munmap_all|
|__munmap_all|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	ldr	__v2, |L..9|
	mov	__v1, #0
	add	__v3, __v2, #4
|L..6|
	mov	__a3, __v1, asl #4
	ldr	__ip, [__v3, __a3]
	cmn	__ip, #1
	beq	|L..5|
	ldr	__a1, [__v2, __a3]
	mov	__a2, #0
	bl	|munmap|
|L..5|
	add	__v1, __v1, #1
	cmp	__v1, #7
	ble	|L..6|
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..10|
	ALIGN
|L..9|
	DCD	|mmaps|
	ALIGN
|LC..0|
	DCB &24, &48, &65, &61
	DCB &70, &58, &00
	ALIGN
	EXPORT	|mmap|
|mmap|
	; args = 8, pretend = 0, frame = 60, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #60
	ldr	__v3, |L..40|
	mov	__v4, __a1
	ldr	__ip, [__v3, #0]
	mov	__v2, __a4
	ldr	__v1, [__fp, #4]
	cmp	__ip, #0
	bleq	|getpagesize|
	streq	__a1, [__v3, #0]
|L..12|
	cmn	__v1, #1
	beq	|L..13|
|L..39|
	mvn	__a1, #0
	ldr	__a3, |L..40|+4
	mov	__ip, #78
	str	__ip, [__a3, #0]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __fp, __sp, __pc}^
|L..13|
	ldr	__ip, [__fp, #8]
	cmp	__ip, #0
	beq	|L..14|
	mov	__a1, __v1
	ldr	__a3, |L..40|+4
	mov	__ip, #22
	str	__ip, [__a3, #0]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __fp, __sp, __pc}^
|L..14|
	tst	__v2, #256
	beq	|L..15|
	ldr	__ip, [__v3, #0]
	mov	__a1, __v1
	ldr	__a3, |L..40|+4
	sub	__ip, __ip, #1
	tst	__v4, __ip
	moveq	__ip, #78
	movne	__ip, #22
	str	__ip, [__a3, #0]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __fp, __sp, __pc}^
|L..15|
	tst	__v2, #32
	bne	|L..39|
	mov	__a1, __v1
	ldr	__a3, |L..40|+4
	mov	__ip, #78
	str	__ip, [__a3, #0]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __fp, __sp, __pc}^
|L..41|
	ALIGN
|L..40|
	DCD	|page_size|
	DCD	|errno|
	ALIGN
	EXPORT	|munmap|
|munmap|
	; args = 0, pretend = 0, frame = 40, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #40
	ldr	__a3, |L..52|
	mov	__v1, #0
	ldr	__ip, [__a3, __v1]
	mov	__v3, __a3
	cmp	__ip, __a1
	beq	|L..44|
|L..45|
	add	__v1, __v1, #1
	cmp	__v1, #7
	bgt	|L..44|
	ldr	__ip, [__a3, __v1, asl #4]
	cmp	__ip, __a1
	bne	|L..45|
|L..44|
	cmp	__v1, #8
	bne	|L..49|
	mvn	__a1, #0
	ldr	__a3, |L..52|+4
	mov	__ip, #22
	str	__ip, [__a3, #0]
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..49|
	mov	__ip, #1
	mov	__v1, __v1, asl #4
	add	__v2, __v3, #4
	str	__ip, [__sp, #0]
	mov	__a1, #102
	ldr	__ip, [__v2, __v1]
	mov	__a2, __sp
	str	__ip, [__sp, #4]
	bl	|os_swi|
	mov	__ip, #0
	subs	__a3, __a1, #0
	mov	__a1, __ip
	str	__ip, [__v3, __v1]
	mvn	__v3, #0
	str	__v3, [__v2, __v1]
	beq	|L..51|
	mov	__a1, __a3
	bl	|__seterr|
	mov	__a1, __v3
|L..51|
	ldmea	__fp, {__v1, __v2, __v3, __fp, __sp, __pc}^
|L..53|
	ALIGN
|L..52|
	DCD	|mmaps|
	DCD	|errno|
	ALIGN
	EXPORT	|mprotect|
|mprotect|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, #78
	ldr	__a3, |L..55|
	mvn	__a1, #0
	str	__ip, [__a3, #0]
	movs	__pc, __lr
|L..56|
	ALIGN
|L..55|
	DCD	|errno|
	ALIGN
	EXPORT	|msync|
|msync|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, #78
	ldr	__a3, |L..58|
	mvn	__a1, #0
	str	__ip, [__a3, #0]
	movs	__pc, __lr
|L..59|
	ALIGN
|L..58|
	DCD	|errno|
	ALIGN
	EXPORT	|madvise|
|madvise|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 0, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, #78
	ldr	__a3, |L..61|
	mvn	__a1, #0
	str	__ip, [__a3, #0]
	movs	__pc, __lr
|L..62|
	ALIGN
|L..61|
	DCD	|errno|
	ALIGN
	EXPORT	|mremap|
|mremap|
	; args = 0, pretend = 0, frame = 48, alloca = 0
	; frame_needed = 1, anonymous_args = 0
	; nonlocal_label = 0, nonlocal_goto = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #48
	mov	__v3, __a1
	mov	__v4, __a2
	mov	__a1, #0
	ldr	__a2, |L..80|
	mov	__v2, __a3
	ldr	__ip, [__a2, __a1]
	mov	__v6, __a4
	cmp	__ip, __v3
	beq	|L..65|
	mov	__a3, __a2
|L..66|
	add	__a1, __a1, #1
	cmp	__a1, #7
	bgt	|L..65|
	ldr	__ip, [__a3, __a1, asl #4]
	cmp	__ip, __v3
	bne	|L..66|
|L..65|
	cmp	__a1, #8
	bne	|L..70|
|L..79|
	mvn	__a1, #0
	ldr	__a3, |L..80|+4
	mov	__ip, #22
	str	__ip, [__a3, #0]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..70|
	ldr	__ip, |L..80|+8
	ldr	__a4, |L..80|
	mov	__v1, __a1, asl #4
	ldr	__a2, [__ip, #0]
	add	__ip, __a4, #8
	ldr	__a4, [__ip, __v1]
	add	__a3, __v4, __a2
	sub	__a3, __a3, #1
	rsb	__lr, __a2, #0
	and	__v4, __a3, __lr
	cmp	__v4, __a4
	bne	|L..79|
	add	__ip, __v2, __a2
	sub	__ip, __ip, #1
	and	__v2, __ip, __lr
	rsb	__a3, __v4, __v2
	ldr	__ip, |L..80|
	cmp	__a3, #0
	str	__a3, [__sp, #12]
	add	__v5, __ip, #4
	ldr	__ip, [__v5, __v1]
	mov	__a1, __v3
	str	__ip, [__sp, #8]
	beq	|L..78|
	mov	__a1, #42
	add	__a2, __sp, #8
	bl	|os_swi|
	cmp	__a1, #0
	beq	|L..73|
	cmp	__v2, __v4
	bcs	|L..74|
	bl	|__seterr|
	mov	__a1, __v3
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..74|
	tst	__v6, #1
	bne	|L..75|
	bl	|__seterr|
	mvn	__a1, #0
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..75|
	ldr	__v6, [__v5, __v1]
	mvn	__a3, #0
	str	__a3, [__v5, __v1]
	str	__a3, [__sp, #0]
	mov	__a4, #0
	ldr	__a3, |L..80|
	mov	__a1, __a4
	add	__ip, __a3, #12
	ldr	__a3, [__ip, __v1]
	mov	__a2, __v2
	str	__a4, [__sp, #4]
	add	__a4, __a4, #2
	bl	|mmap|
	mov	__v2, __a1
	cmn	__v2, #1
	bne	|L..76|
	ldr	__a4, |L..80|
	str	__v3, [__a4, __v1]
	str	__v6, [__v5, __v1]
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..76|
	mov	__a1, __v2
	mov	__a2, __v3
	mov	__a3, __v4
	bl	|__mmap_page_copy|
	mov	__a1, #102
	mov	__ip, #1
	str	__ip, [__sp, #8]
	add	__a2, __sp, #8
	str	__v6, [__sp, #12]
	bl	|os_swi|
	cmp	__a1, #0
	beq	|L..77|
	bl	|__seterr|
|L..77|
	mov	__v3, __v2
|L..73|
	mov	__a1, __v3
|L..78|
	ldmea	__fp, {__v1, __v2, __v3, __v4, __v5, __v6, __fp, __sp, __pc}^
|L..81|
	ALIGN
|L..80|
	DCD	|mmaps|
	DCD	|errno|
	DCD	|page_size|
	END
