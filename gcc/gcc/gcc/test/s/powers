; Generated by gcc 2.95.2 19991024 (release) for ARM/RISC OS
__r0	RN	0
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	IMPORT	|__gccmain|
	ALIGN
|LC..0|
	DCB &55, &73, &61, &67
	DCB &65, &3a, &20, &50
	DCB &6f, &77, &65, &72
	DCB &73, &20, &3c, &6e
	DCB &75, &6d, &62, &65
	DCB &72, &3e, &20, &3c
	DCB &72, &61, &69, &73
	DCB &65, &3e, &0a, &00
	ALIGN
|LC..1|
	DCB &3c, &6e, &75, &6d
	DCB &62, &65, &72, &3e
	DCB &20, &69, &73, &20
	DCB &62, &65, &74, &77
	DCB &65, &65, &6e, &20
	DCB &32, &20, &61, &6e
	DCB &64, &20, &31, &39
	DCB &39, &35, &32, &36
	DCB &31, &33, &31, &20
	DCB &6f, &6e, &6c, &79
	DCB &0a, &00
	ALIGN
|LC..2|
	DCB &3c, &72, &61, &69
	DCB &73, &65, &3e, &20
	DCB &69, &73, &20, &62
	DCB &65, &74, &77, &65
	DCB &65, &6e, &20, &32
	DCB &20, &61, &6e, &64
	DCB &20, &32, &31, &34
	DCB &37, &34, &38, &33
	DCB &36, &34, &37, &20
	DCB &6f, &6e, &6c, &79
	DCB &0a, &00
	ALIGN
|LC..3|
	DCB &6c, &65, &6e, &20
	DCB &3d, &20, &25, &64
	DCB &2c, &20, &6e, &75
	DCB &6d, &62, &20, &3d
	DCB &20, &25, &64, &2c
	DCB &20, &65, &78, &70
	DCB &6f, &6e, &20, &3d
	DCB &20, &25, &64, &2c
	DCB &20, &6c, &70, &20
	DCB &3d, &20, &25, &2e
	DCB &31, &32, &66, &2c
	DCB &20, &6c, &67, &20
	DCB &3d, &20, &25, &2e
	DCB &31, &32, &66, &0a
	DCB &00
	IMPORT	|__modsi3|
	IMPORT	|__divsi3|
	ALIGN
|LC..4|
	DCB &25, &64, &20, &5e
	DCB &20, &25, &64, &20
	DCB &69, &73, &20, &65
	DCB &78, &61, &63, &74
	DCB &6c, &79, &0a, &0a
	DCB &00
	ALIGN
|LC..5|
	DCB &25, &64, &00
	ALIGN
|LC..6|
	DCB &0a, &0a, &28, &77
	DCB &68, &69, &63, &68
	DCB &20, &69, &73, &20
	DCB &61, &62, &6f, &75
	DCB &74, &20, &25, &64
	DCB &20, &78, &20, &31
	DCB &30, &5e, &25, &64
	DCB &29, &0a, &00
	ALIGN
|LC..7|
	DCB &54, &69, &6d, &65
	DCB &20, &74, &61, &6b
	DCB &65, &6e, &3a, &20
	DCB &25, &64, &20, &63
	DCB &73, &65, &63, &73
	DCB &0a, &0a, &00
	ALIGN
	EXPORT	|main|
|main|
	; args = 0, pretend = 0, frame = 72, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #72
	mov	__v6, __sp
	str	__a1, [__v6, #16]
	str	__a2, [__v6, #20]
	bl	|__gccmain|
	bl	|clock|
	str	__a1, [__v6, #68]
	ldr	__ip, [__v6, #16]
	cmp	__ip, #1
	beq	|L..4|
	ldr	__ip, [__v6, #16]
	cmp	__ip, #2
	beq	|L..4|
	b	|L..3|
|L..4|
	ldr	__a1, |L..18|
	bl	|printf|
	mov	__a1, #0
	b	|L..2|
|L..3|
	ldr	__v1, |L..18|+4
	mov	__ip, #4
	ldr	__a3, [__v6, #20]
	add	__ip, __ip, __a3
	ldr	__a1, [__ip, #0]
	mov	__a2, #0
	mov	__a3, #10
	bl	|strtol|
	str	__a1, [__v1, #0]
	ldr	__v1, |L..18|+8
	mov	__ip, #8
	ldr	__a3, [__v6, #20]
	add	__ip, __ip, __a3
	ldr	__a1, [__ip, #0]
	mov	__a2, #0
	mov	__a3, #10
	bl	|strtol|
	str	__a1, [__v1, #0]
	ldr	__ip, |L..18|+4
	ldr	__a3, [__ip, #0]
	cmp	__a3, #1
	ble	|L..6|
	ldr	__ip, |L..18|+4
	ldr	__a3, [__ip, #0]
	ldr	__ip, |L..18|+12
	cmp	__a3, __ip
	bgt	|L..6|
	b	|L..5|
|L..6|
	ldr	__a1, |L..18|+16
	bl	|printf|
	mov	__a1, #0
	b	|L..2|
|L..5|
	ldr	__ip, |L..18|+8
	ldr	__a3, [__ip, #0]
	cmp	__a3, #1
	bgt	|L..7|
	ldr	__a1, |L..18|+20
	bl	|printf|
	mov	__a1, #0
	b	|L..2|
|L..7|
	ldr	__ip, |L..18|+4
	ldr	__a3, [__ip, #0]
	fltd	__f0, __a3
	stfd	__f0, [__sp, #-8]!
	ldmfd	__sp!, {__a1, __a2}
	bl	|log10|
	stfd	__f0, [__sp, #-8]!
	ldmfd	__sp!, {__a3, __a4}
	mov	__a2, __a4
	mov	__a1, __a3
	str	__a1, [__v6, #60]
	str	__a2, [__v6, #64]
	ldfd	__f0, [__v6, #60]
	ldfd	__f1, |L..18|+24
	adfd	__f0, __f0, __f1
	stfd	__f0, [__v6, #52]
	ldr	__ip, |L..18|+4
	ldr	__a3, [__ip, #0]
	str	__a3, [__v6, #24]
	ldr	__ip, |L..18|+8
	ldr	__a3, [__ip, #0]
	str	__a3, [__v6, #28]
	ldr	__ip, |L..18|+8
	ldr	__a3, [__ip, #0]
	fltd	__f0, __a3
	ldfd	__f1, [__v6, #52]
	mufd	__f0, __f0, __f1
	fixz	__ip, __f0
	add	__a3, __ip, #1
	str	__a3, [__v6, #32]
	ldr	__v1, |L..18|+32
	ldr	__a3, [__v6, #32]
	add	__ip, __a3, #1
	mov	__a1, __ip
	bl	|malloc|
	mov	__ip, __a1
	str	__ip, [__v1, #0]
	ldr	__ip, |L..18|+4
	ldr	__a4, |L..18|+8
	add	__a2, __v6, #52
	ldmia	__a2, {__a2-__a3}
	stmia	__sp, {__a2-__a3}	; double
	add	__a2, __v6, #60
	ldmia	__a2, {__a2-__a3}
	str	__a2, [__sp, #8]
	str	__a3, [__sp, #12]
	ldr	__a1, |L..18|+36
	ldr	__a2, [__v6, #32]
	ldr	__a3, [__ip, #0]
	ldr	__a4, [__a4, #0]
	bl	|printf|
	mov	__ip, #1
	str	__ip, [__v6, #44]
|L..8|
	ldr	__ip, [__v6, #44]
	ldr	__a3, [__v6, #32]
	cmp	__ip, __a3
	ble	|L..11|
	b	|L..9|
|L..11|
	ldr	__a3, |L..18|+32
	ldr	__ip, [__a3, #0]
	ldr	__a3, [__v6, #44]
	add	__ip, __ip, __a3
	mov	__a3, #0
	mov	__a4, __a3
	strb	__a4, [__ip, #0]
|L..10|
	ldr	__ip, [__v6, #44]
	add	__a3, __ip, #1
	str	__a3, [__v6, #44]
	b	|L..8|
|L..9|
	mov	__ip, #1
	ldr	__a4, |L..18|+32
	ldr	__a3, [__a4, #0]
	add	__ip, __ip, __a3
	mov	__a3, #1
	mov	__a4, __a3
	strb	__a4, [__ip, #0]
	ldr	__ip, |L..18|+40
	mov	__a3, #1
	str	__a3, [__ip, #0]
	ldfd	__f0, |L..18|+44
	ldfd	__f1, [__v6, #60]
	dvfd	__f0, __f0, __f1
	fixz	__ip, __f0
	str	__ip, [__v6, #36]
	ldr	__ip, |L..18|+8
	ldr	__a3, [__v6, #36]
	ldr	__ip, [__ip, #0]
	cmp	__a3, __ip
	ble	|L..12|
	mov	__ip, #1
	str	__ip, [__v6, #36]
|L..12|
	ldr	__ip, |L..18|+8
	ldr	__a3, [__ip, #0]
	mov	__a1, __a3
	ldr	__a2, [__v6, #36]
	bl	|__modsi3|
	mov	__ip, __a1
	str	__ip, [__v6, #40]
	ldr	__ip, |L..18|+4
	ldr	__a1, [__ip, #0]
	ldr	__a2, [__v6, #36]
	bl	|ipower|
	mov	__ip, __a1
	ldr	__a3, |L..18|+4
	str	__ip, [__a3, #0]
	ldr	__v1, |L..18|+8
	ldr	__ip, |L..18|+8
	ldr	__a1, [__ip, #0]
	ldr	__a2, [__v6, #36]
	bl	|__divsi3|
	mov	__ip, __a1
	str	__ip, [__v1, #0]
	bl	|rase|
	ldr	__ip, [__v6, #40]
	cmp	__ip, #0
	beq	|L..13|
	ldr	__ip, |L..18|+4
	ldr	__a3, [__v6, #24]
	str	__a3, [__ip, #0]
	ldr	__ip, |L..18|+40
	ldr	__a3, [__v6, #28]
	ldr	__a4, [__v6, #40]
	rsb	__a3, __a4, __a3
	add	__a4, __a3, #1
	str	__a4, [__ip, #0]
	ldr	__ip, |L..18|+8
	ldr	__a3, [__v6, #28]
	str	__a3, [__ip, #0]
	bl	|rase|
|L..13|
	ldr	__a1, |L..18|+52
	ldr	__a2, [__v6, #24]
	ldr	__a3, [__v6, #28]
	bl	|printf|
	ldr	__ip, [__v6, #32]
	str	__ip, [__v6, #48]
|L..14|
	ldr	__ip, [__v6, #48]
	cmp	__ip, #0
	bne	|L..17|
	b	|L..15|
|L..17|
	ldr	__a3, |L..18|+32
	ldr	__ip, [__a3, #0]
	ldr	__a3, [__v6, #48]
	add	__ip, __ip, __a3
	ldrb	__a3, [__ip, #0]	; zero_extendqisi2
	ldr	__a1, |L..18|+56
	mov	__a2, __a3
	bl	|printf|
|L..16|
	ldr	__ip, [__v6, #48]
	sub	__a3, __ip, #1
	str	__a3, [__v6, #48]
	b	|L..14|
|L..15|
	ldr	__a3, |L..18|+32
	ldr	__ip, [__a3, #0]
	ldr	__a4, [__v6, #32]
	add	__a3, __ip, __a4
	ldrb	__ip, [__a3, #0]	; zero_extendqisi2
	ldr	__a4, [__v6, #32]
	sub	__a3, __a4, #1
	ldr	__a1, |L..18|+60
	mov	__a2, __ip
	bl	|printf|
	bl	|clock|
	mov	__ip, __a1
	ldr	__a3, [__v6, #68]
	rsb	__ip, __a3, __ip
	ldr	__a1, |L..18|+64
	mov	__a2, __ip
	bl	|printf|
	mov	__a1, #0
	b	|L..2|
|L..19|
	ALIGN
|L..18|
	DCD	|LC..0|
	DCD	|numb|
	DCD	|expon|
	DCD	199526131
	DCD	|LC..1|
	DCD	|LC..2|
	DCD &3e212e0b, &e826d695	; double 2.00000000000000012456e-9
	DCD	|fig|
	DCD	|LC..3|
	DCD	|begin|
	DCD &40209999, &9999999a	; double 8.30000000000000071054e0
	DCD	|LC..4|
	DCD	|LC..5|
	DCD	|LC..6|
	DCD	|LC..7|
|L..2|
	ldmea	__fp, {__v1, __v6, __fp, __sp, __pc}^
	ALIGN
	EXPORT	|rase|
|rase|
	; args = 0, pretend = 0, frame = 24, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #24
	mov	__v6, __sp
	mov	__ip, #0
	str	__ip, [__v6, #16]
	ldr	__ip, |L..29|
	ldr	__a3, [__ip, #0]
	fltd	__f0, __a3
	stfd	__f0, [__sp, #-8]!
	ldmfd	__sp!, {__a1, __a2}
	bl	|log10|
	stfd	__f0, [__sp, #-8]!
	ldmfd	__sp!, {__a3, __a4}
	stmfd	__sp!, {__a3, __a4}
	ldfd	__f0, [__sp], #8
	mvfs	__f1, __f0
	stfs	__f1, [__v6, #20]
	ldr	__ip, |L..29|+4
	ldr	__a3, [__ip, #0]
	str	__a3, [__v6, #0]
|L..21|
	ldr	__ip, |L..29|+8
	ldr	__a3, [__v6, #0]
	ldr	__ip, [__ip, #0]
	cmp	__a3, __ip
	ble	|L..24|
	b	|L..22|
|L..24|
	ldr	__ip, [__v6, #0]
	flts	__f0, __ip
	ldfs	__f1, [__v6, #20]
	fmls	__f0, __f0, __f1
	fixz	__ip, __f0
	add	__a3, __ip, #1
	str	__a3, [__v6, #12]
	mov	__ip, #1
	str	__ip, [__v6, #8]
|L..25|
	ldr	__ip, [__v6, #8]
	ldr	__a3, [__v6, #12]
	cmp	__ip, __a3
	ble	|L..28|
	b	|L..23|
|L..28|
	ldr	__ip, |L..29|
	ldr	__a4, |L..29|+12
	ldr	__a3, [__a4, #0]
	ldr	__a4, [__v6, #8]
	add	__a3, __a3, __a4
	ldrb	__a4, [__a3, #0]	; zero_extendqisi2
	ldr	__a3, [__ip, #0]
	mul	__ip, __a3, __a4
	ldr	__a3, [__v6, #16]
	add	__ip, __ip, __a3
	str	__ip, [__v6, #4]
	ldr	__ip, [__v6, #4]
	mov	__a1, __ip
	mov	__a2, #10
	bl	|__divsi3|
	mov	__ip, __a1
	str	__ip, [__v6, #16]
	ldr	__a3, |L..29|+12
	ldr	__ip, [__a3, #0]
	ldr	__a3, [__v6, #8]
	add	__v1, __ip, __a3
	ldr	__ip, [__v6, #4]
	mov	__a1, __ip
	mov	__a2, #10
	bl	|__modsi3|
	mov	__ip, __a1
	mov	__a3, __ip
	strb	__a3, [__v1, #0]
|L..27|
	ldr	__ip, [__v6, #8]
	add	__a3, __ip, #1
	str	__a3, [__v6, #8]
	b	|L..25|
|L..26|
|L..23|
	ldr	__ip, [__v6, #0]
	add	__a3, __ip, #1
	str	__a3, [__v6, #0]
	b	|L..21|
|L..30|
	ALIGN
|L..29|
	DCD	|numb|
	DCD	|begin|
	DCD	|expon|
	DCD	|fig|
|L..22|
|L..20|
	ldmea	__fp, {__v1, __v6, __fp, __sp, __pc}^
	ALIGN
	EXPORT	|ipower|
|ipower|
	; args = 0, pretend = 0, frame = 12, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 0
	mov	__ip, __sp
	stmfd	__sp!, {__v6, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #12
	mov	__v6, __sp
	str	__a1, [__v6, #0]
	str	__a2, [__v6, #4]
	mov	__ip, #1
	str	__ip, [__v6, #8]
|L..32|
	ldr	__ip, [__v6, #4]
	cmp	__ip, #0
	bgt	|L..33|
	ldr	__ip, [__v6, #8]
	mov	__a1, __ip
	b	|L..31|
|L..33|
	ldr	__a3, [__v6, #4]
	and	__ip, __a3, #1
	cmp	__ip, #0
	beq	|L..34|
	ldr	__ip, [__v6, #8]
	ldr	__a3, [__v6, #0]
	mul	__ip, __a3, __ip
	str	__ip, [__v6, #8]
|L..34|
	ldr	__ip, [__v6, #0]
	ldr	__a3, [__v6, #0]
	mul	__ip, __a3, __ip
	str	__ip, [__v6, #0]
	ldr	__ip, [__v6, #4]
	mov	__a3, __ip, asr #31
	mov	__a4, __a3, lsr #31
	add	__a3, __ip, __a4
	mov	__ip, __a3, asr #1
	str	__ip, [__v6, #4]
	b	|L..32|
|L..31|
	ldmea	__fp, {__v6, __fp, __sp, __pc}^
	AREA |Common$$begin|, DATA, COMMON
|begin|
	% 4	; size=4
	EXPORT	|begin|
	AREA |Common$$expon|, DATA, COMMON
|expon|
	% 4	; size=4
	EXPORT	|expon|
	AREA |Common$$numb|, DATA, COMMON
|numb|
	% 4	; size=4
	EXPORT	|numb|
	AREA |Common$$fig|, DATA, COMMON
|fig|
	% 4	; size=4
	EXPORT	|fig|
	IMPORT	|malloc|
	IMPORT	|log10|
	IMPORT	|strtol|
	IMPORT	|printf|
	IMPORT	|clock|
	END
