# Makefile for the GNU Compiler Collection for ARM/RISC OS
# Copyright (c) 1997, 1998, 1999, 2000, 2001, 2002, 2003 Nick Burrett
# Written by Nick Burrett <nick@dsvr.net>

# Defs for the host compiler
# HOST_CC is a version of CC where optimisations are not turned off
HOST_CC = $(CC) -g -O2 $(OPTS) -D$(hostsystem)
HOST_INCLUDES = -I./ -I../../include -I./config
HOST_PREDEFS = -DIN_GCC -DHAVE_CONFIG_H -DGENERATOR_FILE -DTARGET_RISCOSAOF
INCLUDES = -I./ -I../../include -I./config

ifeq (${STAGE},stage1)
prefix = $(unix_prefix)
CFLAGS += -DCROSS_COMPILE -D$(hostsystem)
bin_dir = $(ux_bin_dir)
gcc_bin_dir = $(ux_gcc_bin_dir)
GNATBIND = @GNATBIND@ -C
GNATCC = @CC@
.NOTPARALLEL:
else
prefix = $(riscos_prefix)
CC = $(CROSS_CC)
CXX = $(CROSS_CXX)
GNATCC = $(CROSS_CC)
GNATBIND = $(CROSS_GNATBIND) -C
CFLAGS = $(CROSS_CFLAGS) -D$(targetsystem)
bin_dir = $(ro_bin_dir)
gcc_bin_dir = $(ro_gcc_bin_dir)
gexesfx = $(exesfx)
AR = $(CROSS_AR)
AR_FLAGS = $(CROSS_AR_FLAGS)
INCLUDES += -I$(unixlib_incl_dir)
endif

# Defs for GCC
CFLAGS += -DIN_GCC -DHAVE_CONFIG_H
GCC_AS = $(CC) -xassembler-with-cpp -c
LINK = $(CC) -o $@
LIBS = -L$(objdir)/libiberty/$(STAGE) -liberty -lm
gccobjdir = $(objdir)/gcc-$(VERSION)/gcc/$(STAGE)

export prefix CC CXX GNATCC CFLAGS bin_dir gcc_bin_dir gccobjdir gexesfx
export GNATCC GNATBIND

LIBDEPS = $(gccobjdir)/prefix.o

ifeq (${STAGE},stage1)
RISC_OBJS=
RISCOS_OBJS=
else
RISC_OBJS = $(gccobjdir)/config/arm/riscos_fix.o
RISCOS_OBJS = $(RISC_OBJS) $(gccobjdir)/config/arm/riscos.o
endif


# Language-specific object files for C and Objective C
C_AND_OBJC_OBJS = \
	$(gccobjdir)/attribs.o \
	$(gccobjdir)/c-errors.o \
	$(gccobjdir)/c-lex.o \
	$(gccobjdir)/c-pragma.o \
	$(gccobjdir)/c-decl.o \
	$(gccobjdir)/c-typeck.o \
	$(gccobjdir)/c-convert.o \
	$(gccobjdir)/c-aux-info.o \
	$(gccobjdir)/c-common.o \
	$(gccobjdir)/c-opts.o \
	$(gccobjdir)/c-format.o \
	$(gccobjdir)/c-semantics.o \
	$(gccobjdir)/c-objc-common.o \
	$(gccobjdir)/c-dump.o \
	$(gccobjdir)/libcpp.a

# Language-specific object files for C
C_OBJS = $(gccobjdir)/c-parse.o \
	$(gccobjdir)/c-lang.o \
	$(gccobjdir)/c-pretty-print.o \
	$(C_AND_OBJC_OBJS)

# Language-independent object files
OBJS =	$(gccobjdir)/alias.o \
	$(gccobjdir)/bb-reorder.o \
	$(gccobjdir)/bitmap.o \
	$(gccobjdir)/builtins.o \
	$(gccobjdir)/caller-save.o \
	$(gccobjdir)/calls.o \
	$(gccobjdir)/cfg.o \
	$(gccobjdir)/cfganal.o \
	$(gccobjdir)/cfgbuild.o \
	$(gccobjdir)/cfgcleanup.o \
	$(gccobjdir)/cfglayout.o \
	$(gccobjdir)/cfgloop.o \
	$(gccobjdir)/cfgrtl.o \
	$(gccobjdir)/combine.o \
	$(gccobjdir)/conflict.o \
	$(gccobjdir)/convert.o \
	$(gccobjdir)/cse.o \
	$(gccobjdir)/cselib.o \
	$(gccobjdir)/dbxout.o \
	$(gccobjdir)/debug.o \
	$(gccobjdir)/df.o \
	$(gccobjdir)/diagnostic.o \
	$(gccobjdir)/doloop.o \
	$(gccobjdir)/dominance.o \
	$(gccobjdir)/dwarf2asm.o \
	$(gccobjdir)/dwarf2out.o \
	$(gccobjdir)/dwarfout.o \
	$(gccobjdir)/emit-rtl.o \
	$(gccobjdir)/except.o \
	$(gccobjdir)/explow.o \
	$(gccobjdir)/expmed.o \
	$(gccobjdir)/expr.o \
	$(gccobjdir)/final.o \
	$(gccobjdir)/flow.o \
	$(gccobjdir)/fold-const.o \
	$(gccobjdir)/function.o \
	$(gccobjdir)/gcse.o \
	$(gccobjdir)/genrtl.o \
	$(gccobjdir)/ggc-common.o \
	$(gccobjdir)/global.o \
	$(gccobjdir)/graph.o \
	$(gccobjdir)/gtype-desc.o \
	$(gccobjdir)/haifa-sched.o \
	$(gccobjdir)/hashtable.o \
	$(gccobjdir)/hooks.o \
	$(gccobjdir)/ifcvt.o \
	$(gccobjdir)/insn-attrtab.o \
	$(gccobjdir)/insn-emit.o \
	$(gccobjdir)/insn-extract.o \
	$(gccobjdir)/insn-opinit.o \
	$(gccobjdir)/insn-output.o \
	$(gccobjdir)/insn-peep.o \
	$(gccobjdir)/insn-recog.o \
	$(gccobjdir)/integrate.o \
	$(gccobjdir)/jump.o \
	$(gccobjdir)/langhooks.o \
	$(gccobjdir)/lcm.o \
	$(gccobjdir)/lists.o \
	$(gccobjdir)/local-alloc.o \
	$(gccobjdir)/loop.o \
	$(gccobjdir)/mbchar.o \
	$(gccobjdir)/optabs.o \
	$(gccobjdir)/params.o \
	$(gccobjdir)/predict.o \
	$(gccobjdir)/print-rtl.o \
	$(gccobjdir)/print-tree.o \
	$(gccobjdir)/profile.o \
	$(gccobjdir)/ra.o \
	$(gccobjdir)/ra-build.o \
	$(gccobjdir)/ra-colorize.o \
	$(gccobjdir)/ra-debug.o \
	$(gccobjdir)/ra-rewrite.o \
	$(gccobjdir)/real.o \
	$(gccobjdir)/recog.o \
	$(gccobjdir)/reg-stack.o \
	$(gccobjdir)/regclass.o \
	$(gccobjdir)/regmove.o \
	$(gccobjdir)/regrename.o \
	$(gccobjdir)/reload.o \
	$(gccobjdir)/reload1.o \
	$(gccobjdir)/reorg.o \
	$(gccobjdir)/resource.o \
	$(gccobjdir)/rtl.o \
	$(gccobjdir)/rtlanal.o \
	$(gccobjdir)/rtl-error.o \
	$(gccobjdir)/sbitmap.o \
	$(gccobjdir)/sched-deps.o \
	$(gccobjdir)/sched-ebb.o \
	$(gccobjdir)/sched-rgn.o \
	$(gccobjdir)/sched-vis.o \
	$(gccobjdir)/sdbout.o \
	$(gccobjdir)/sibcall.o \
	$(gccobjdir)/simplify-rtx.o \
	$(gccobjdir)/ssa.o \
	$(gccobjdir)/ssa-ccp.o \
	$(gccobjdir)/ssa-dce.o \
	$(gccobjdir)/stmt.o \
	$(gccobjdir)/stor-layout.o \
	$(gccobjdir)/stringpool.o \
	$(gccobjdir)/timevar.o \
	$(gccobjdir)/toplev.o \
	$(gccobjdir)/tracer.o \
	$(gccobjdir)/tree.o \
	$(gccobjdir)/tree-dump.o \
	$(gccobjdir)/tree-inline.o \
	$(gccobjdir)/unroll.o \
	$(gccobjdir)/varasm.o \
	$(gccobjdir)/varray.o \
	$(gccobjdir)/version.o \
	$(gccobjdir)/xcoffout.o \
	$(gccobjdir)/et-forest.o \
	$(gccobjdir)/ggc-simple.o \
	$(gccobjdir)/arm.o

#	$(gccobjdir)/intl.o \

BACKEND = $(gccobjdir)/main.o $(gccobjdir)/libbackend.a

LIBCPP_OBJS = $(gccobjdir)/cppdefault.o \
	$(gccobjdir)/cpperror.o \
	$(gccobjdir)/cppexp.o \
	$(gccobjdir)/cppfiles.o \
	$(gccobjdir)/cpphash.o \
	$(gccobjdir)/cppinit.o \
	$(gccobjdir)/cpplib.o \
	$(gccobjdir)/cpplex.o \
	$(gccobjdir)/cppmain.o \
	$(gccobjdir)/cppmacro.o \
	$(gccobjdir)/cppspec.o \
	$(gccobjdir)/cpptrad.o \
	$(gccobjdir)/hashtable.o \
	$(gccobjdir)/line-map.o \
	$(gccobjdir)/mkdeps.o \
	$(gccobjdir)/prefix.o \
	$(gccobjdir)/mbchar.o

# GEN files are listed separately, so they can be built before doing parallel
# makes for cc1 or cc1plus.  Otherwise sequent parallel make attempts to load
# them before rtl.o is compiled.
GEN = genautomata genemit gengenrtl genoutput genrecog genextract genflags \
	gencodes genconfig genpeep gencheck genpreds genconstants \
	gengtype

export BACKEND RISCOS_OBJS C_AND_OBJC_OBJS LIBS LIBDEPS


$(gccobjdir)/%.o: %.c
	$(CC) $(CFLAGS) -o $@ -c $< $(INCLUDES)


all: c cp f77 objc java docs
# cp f77 gpc objc java docs

.PHONY: c
.PHONY: cp
.PHONY: ada
.PHONY: f77
.PHONY: gpc
.PHONY: objc
.PHONY: java
.PHONY: docs

c: $(bin_dir)/gcc$(gexesfx) $(gcc_bin_dir)/cpp$(gexesfx) \
   $(gcc_bin_dir)/cc1$(gexesfx) $(bin_dir)/gcov$(gexesfx)

ada cp f77 gpc objc java: $(BACKEND)
	$(MAKE) -C $@


ifeq (${STAGE},stage1)
docs:
else
docs:	$(info_dir)/gcc $(info_dir)/cpp
endif


$(gccobjdir)/libbackend.a: $(OBJS)
	$(AR) $(AR_FLAGS) $@ $(OBJS)

$(gccobjdir)/libcpp.a:	$(LIBCPP_OBJS)
	$(AR) $(AR_FLAGS) $@ $(LIBCPP_OBJS)

# The real targets
$(bin_dir)/gcc$(gexesfx): $(gccobjdir)/gcc.o $(gccobjdir)/gccspec.o \
	$(gccobjdir)/version.o $(RISC_OBJS) \
	$(gccobjdir)/config/arm/rname.o $(LIBDEPS)
	$(LINK) $(gccobjdir)/gcc.o $(gccobjdir)/gccspec.o \
	$(gccobjdir)/version.o $(RISC_OBJS) \
	$(gccobjdir)/config/arm/rname.o $(LIBDEPS) $(LIBS)

$(gcc_bin_dir)/cpp$(gexesfx): $(gccobjdir)/gcc.o $(gccobjdir)/cppspec.o \
	$(gccobjdir)/version.o $(RISC_OBJS) \
	$(gccobjdir)/config/arm/rname.o $(LIBDEPS)
	$(LINK) $(gccobjdir)/gcc.o $(gccobjdir)/cppspec.o \
	$(gccobjdir)/version.o $(RISC_OBJS) \
	$(gccobjdir)/config/arm/rname.o $(LIBDEPS) $(LIBS)

$(gcc_bin_dir)/cc1$(gexesfx): $(C_OBJS) $(BACKEND) $(RISCOS_OBJS)
	$(LINK) $(C_OBJS) $(BACKEND) $(RISCOS_OBJS) $(LIBS)

#$(gcc_bin_dir)/cpp0$(gexesfx): $(gccobjdir)/libcpp.a $(gccobjdir)/config/arm/rname.o
#	$(LINK) $(gccobjdir)/libcpp.a \
#	$(gccobjdir)/config/arm/rname.o $(LIBS)

$(bin_dir)/gcov$(gexesfx): $(gccobjdir)/gcov.o $(gccobjdir)/version.o $(LIBDEPS)
	$(LINK) $(gccobjdir)/gcov.o $(gccobjdir)/version.o $(LIBDEPS) $(LIBS)

#$(bin_dir)/demangle: $(LIBIBERTY)
#	$(LINK) $(LIBS)


ifeq (${STAGE},stage2)
$(info_dir)/gcc:	doc/extend.texi doc/gcc.texi doc/gcov.texi \
	doc/install.texi doc/invoke.texi doc/md.texi \
	doc/rtl.texi doc/tm.texi
	makeinfo --no-split --number-sections --force gcc.texi -o $@ -I doc -I doc/include

$(info_dir)/cpp:	doc/cpp.texi
	makeinfo --no-split --number-sections --force cpp.texi -o $@ -I doc -I doc/include
endif

install_headers:
	$(insthdr) ginclude "*.h" . $(ux_gccpkg)/$(gn_gcc_include_dir) $(ro_gccpkg)/$(gn_gcc_include_dir)

##############################################################################


# Make Bison sources

c-parse.y:	c-parse.in
	sed -e "/^ifobjc$$/,/^end ifobjc$$/d" -e "/^ifc$$/d" -e "/^end ifc$$/d" $? > c-parse.y

# Bison sources
# There's no point having a suffix thing for these becuase
# they're all built differently.

cexp.c: cexp.y
	bison -o cexp.c cexp.y

c-parse.c: c-parse.y
	bison -d c-parse.y -o c-parse.c

gengtype-yacc.c: gengtype-yacc.y
	bison -d -o $@ gengtype-yacc.y

gengtype-yacc.h: gengtype-yacc.c

gengtype-lex.c: gengtype-lex.l gengtype-yacc.h
	flex -t -o$@ gengtype-lex.l | sed 's/^\(char msg\[\];\)/yyconst \1/' > $@

# Perfect hash function generation stuff

#h.c-gperf: gperf/c-parse
#	gperf -p -j1 -i 1 -g -o -t -G -N is_reserved_word -k1,3,$$ <gperf.c-parse >h.c-gperf

# Bison object dependencies
$(gccobjdir)/c-parse.o:	c-parse.c c-parse.c c-parse.in tree-check.h gt-c-parse.h
$(gccobjdir)/cexp.o:	cexp.c cexp.y

##############################################################################

ifeq (${STAGE},stage1)
# Derived files. Created from config/arm/arm.md

MD = config/arm/arm.md
GENOBJS = $(gccobjdir)/_obstack.o $(gccobjdir)/_rtl.o \
	$(gccobjdir)/_bitmap.o $(gccobjdir)/ggc-none.o \
	$(gccobjdir)/_errors.o $(gccobjdir)/gensupport.o

HOST_RTL =	$(gccobjdir)/_rtl.o \
	$(gccobjdir)/_read-rtl.o \
	$(gccobjdir)/_bitmap.o \
	$(gccobjdir)/_ggc-none.o \
	$(gccobjdir)/_hashtab.o \
	$(gccobjdir)/_safe-ctype.o

HOST_SUPPORT = $(gccobjdir)/gensupport.o $(gccobjdir)/insn-conditions.o
HOST_EARLY_SUPPORT = $(gccobjdir)/gensupport.o $(gccobjdir)/dummy-conditions.o
HOST_PRINT = $(gccobjdir)/_print-rtl.o
HOST_ERRORS = $(gccobjdir)/_errors.o
HOST_VARRAY = $(gccobjdir)/_varray.o

srcdir = .

build_xm_file_list= auto-host.h $(srcdir)/../../include/ansidecl.h $(srcdir)/config/arm/riscos-aof.h $(srcdir)/config/arm/aof.h $(srcdir)/config/arm/arm.h
build_xm_file=auto-host.h ansidecl.h arm/riscos-aof.h arm/aof.h arm/arm.h defaults.h
build_xm_defines=POSIX
host_xm_file_list= auto-host.h $(srcdir)/../../include/ansidecl.h $(srcdir)/config/arm/riscos-aof.h $(srcdir)/config/arm/aof.h $(srcdir)/config/arm/arm.h $(srcdir)/defaults.h
host_xm_file=auto-host.h ansidecl.h arm/riscos-aof.h arm/aof.h arm/arm.h defaults.h
host_xm_defines=POSIX
xm_file=ansidecl.h arm/riscos-aof.h arm/aof.h arm/arm.h defaults.h
xm_defines=


# GCONFIG_H lists the config files that the generator files depend on, while
# CONFIG_H lists the the ones ordinary gcc files depend on, which includes
# several files generated by those generators.
GCONFIG_H = config.h $(host_xm_file_list)
HCONFIG_H = hconfig.h $(build_xm_file_list)
CONFIG_H = $(GCONFIG_H) insn-constants.h insn-flags.h
TCONFIG_H = tconfig.h $(xm_file_list)
TARGET_H = target.h
HOOKS_H = hooks.h
LANGHOOKS_DEF_H = langhooks-def.h $(HOOKS_H)
TARGET_DEF_H = target-def.h $(HOOKS_H)
HASHTAB_H = ../../include/hashtab.h
OBSTACK_H   = ../../include/obstack.h
SPLAY_TREE_H= ../../include/splay-tree.h
FIBHEAP_H   = ../../include/fibheap.h

gen-derived:	insn-config.h insn-flags.h insn-codes.h \
	insn-conditions.c insn-emit.c insn-recog.c insn-extract.c \
	insn-opinit.c insn-output.c insn-peep.c \
        insn-attr.h insn-attrtab.c genrtl.c genrtl.h tm-preds.h

gen-prog:	$(gccobjdir)/genemit $(gccobjdir)/genoutput \
	$(gccobjdir)/genrecog $(gccobjdir)/genextract \
	$(gccobjdir)/genflags $(gccobjdir)/gencodes \
	$(gccobjdir)/genconfig $(gccobjdir)/genpeep \
	$(gccobjdir)/genconstants $(gccobjdir)/gengenrtl \
	$(gccobjdir)/gencheck $(gccobjdir)/genpreds \
	$(gccobjdir)/gengtype

GTFILES = $(GCONFIG_H) $(srcdir)/location.h \
  $(HASHTAB_H) \
  $(srcdir)/bitmap.h $(srcdir)/function.h  $(srcdir)/rtl.h $(srcdir)/optabs.h \
  $(srcdir)/tree.h $(srcdir)/libfuncs.h $(srcdir)/hashtable.h $(srcdir)/real.h \
  $(srcdir)/varray.h $(srcdir)/ssa.h $(srcdir)/insn-addr.h $(srcdir)/cselib.h \
  $(srcdir)/c-common.h $(srcdir)/c-tree.h \
  $(srcdir)/basic-block.h \
  $(srcdir)/alias.c $(srcdir)/bitmap.c $(srcdir)/cselib.c \
  $(srcdir)/dwarf2out.c $(srcdir)/emit-rtl.c \
  $(srcdir)/except.c $(srcdir)/explow.c $(srcdir)/expr.c \
  $(srcdir)/fold-const.c $(srcdir)/function.c \
  $(srcdir)/gcse.c $(srcdir)/integrate.c $(srcdir)/lists.c $(srcdir)/optabs.c \
  $(srcdir)/profile.c $(srcdir)/ra-build.c $(srcdir)/regclass.c \
  $(srcdir)/reg-stack.c \
  $(srcdir)/sdbout.c $(srcdir)/stmt.c $(srcdir)/stor-layout.c \
  $(srcdir)/tree.c $(srcdir)/varasm.c \
  $(srcdir)/config/arm/arm.c \
   $(srcdir)/ada/ada-tree.h $(srcdir)/ada/gigi.h $(srcdir)/ada/decl.c $(srcdir)/ada/trans.c $(srcdir)/ada/utils.c $(srcdir)/cp/mangle.c $(srcdir)/cp/cp-tree.h $(srcdir)/cp/decl.h $(srcdir)/cp/lex.h $(srcdir)/cp/call.c $(srcdir)/cp/decl.c $(srcdir)/cp/decl2.c $(srcdir)/cp/parse.y $(srcdir)/cp/pt.c $(srcdir)/cp/repo.c $(srcdir)/cp/spew.c $(srcdir)/cp/tree.c $(srcdir)/c-common.c $(srcdir)/c-common.h $(srcdir)/c-pragma.c $(srcdir)/f77/com.c $(srcdir)/f77/com.h $(srcdir)/f77/ste.c $(srcdir)/f77/where.h $(srcdir)/f77/where.c $(srcdir)/f77/lex.c $(srcdir)/java/java-tree.h $(srcdir)/java/builtins.c $(srcdir)/java/class.c $(srcdir)/java/constants.c $(srcdir)/java/decl.c $(srcdir)/java/expr.c $(srcdir)/java/jcf-parse.c $(srcdir)/java/jcf-write.c $(srcdir)/java/lang.c $(srcdir)/java/mangle.c $(srcdir)/java/parse.y $(srcdir)/objc/objc-act.h $(srcdir)/c-parse.in $(srcdir)/c-tree.h $(srcdir)/c-decl.c $(srcdir)/c-objc-common.c $(srcdir)/c-common.c $(srcdir)/c-common.h $(srcdir)/c-pragma.c $(srcdir)/c-parse.in $(srcdir)/c-lang.c $(srcdir)/c-parse.in $(srcdir)/c-tree.h $(srcdir)/c-decl.c $(srcdir)/c-common.c $(srcdir)/c-common.h $(srcdir)/c-pragma.c $(srcdir)/c-objc-common.c

GTFILES_FILES_LANGS =  ada  ada  ada  ada  ada  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  cp  f77  f77  f77  f77  f77  f77  java  java  java  java  java  java  java  java  java  java  java  objc  objc  objc  objc  objc  objc  objc  objc  objc  c  c  c  c  c  c  c  c
GTFILES_FILES_FILES =  $(srcdir)/ada/ada-tree.h  $(srcdir)/ada/gigi.h  $(srcdir)/ada/decl.c  $(srcdir)/ada/trans.c  $(srcdir)/ada/utils.c $(srcdir)/cp/mangle.c $(srcdir)/cp/cp-tree.h  $(srcdir)/cp/decl.h  $(srcdir)/cp/lex.h  $(srcdir)/cp/call.c  $(srcdir)/cp/decl.c  $(srcdir)/cp/decl2.c  $(srcdir)/cp/parse.y  $(srcdir)/cp/pt.c  $(srcdir)/cp/repo.c  $(srcdir)/cp/spew.c  $(srcdir)/cp/tree.c  $(srcdir)/c-common.c  $(srcdir)/c-common.h  $(srcdir)/c-pragma.c  $(srcdir)/f77/com.c  $(srcdir)/f77/com.h  $(srcdir)/f77/ste.c  $(srcdir)/f77/where.h  $(srcdir)/f77/where.c  $(srcdir)/f77/lex.c  $(srcdir)/java/java-tree.h  $(srcdir)/java/builtins.c  $(srcdir)/java/class.c  $(srcdir)/java/constants.c  $(srcdir)/java/decl.c  $(srcdir)/java/expr.c  $(srcdir)/java/jcf-parse.c  $(srcdir)/java/jcf-write.c  $(srcdir)/java/lang.c  $(srcdir)/java/mangle.c  $(srcdir)/java/parse.y  $(srcdir)/objc/objc-act.h  $(srcdir)/c-parse.in  $(srcdir)/c-tree.h  $(srcdir)/c-decl.c  $(srcdir)/c-objc-common.c  $(srcdir)/c-common.c  $(srcdir)/c-common.h  $(srcdir)/c-pragma.c  $(srcdir)/c-parse.in  $(srcdir)/c-lang.c  $(srcdir)/c-parse.in  $(srcdir)/c-tree.h  $(srcdir)/c-decl.c  $(srcdir)/c-common.c  $(srcdir)/c-common.h  $(srcdir)/c-pragma.c  $(srcdir)/c-objc-common.c


GTFILES_LANG_DIR_NAMES =  ada cp f77 java objc
GTFILES_SRCDIR = ../../gcc

gtype-desc.h gtype-desc.c gt-except.h gt-function.h: s-gtype; @true
gt-integrate.h gt-stmt.h gt-tree.h gt-varasm.h gt-emit-rtl.h: s-gtype; @true
gt-explow.h gt-stor-layout.h gt-regclass.h gt-lists.h: s-gtype; @true
gt-alias.h gt-cselib.h gt-fold-const.h gt-gcse.h gt-profile.h: s-gtype; @true
gt-expr.h gt-sdbout.h gt-optabs.h gt-bitmap.h gt-dwarf2out.h: s-gtype; @true
gt-ra-build.h gt-reg-stack.h gt-dependence.h: s-gtype; @true
gt-c-common.h gt-c-decl.h gt-c-parse.h gt-c-pragma.h: s-gtype; @true
gt-c-objc-common.h gtype-c.h gt-location.h: s-gtype; @true

# C++ specific
gtype-cp.h gt-cp-call.h gt-cp-decl.h gt-cp-decl2.h : s-gtype; @true
gt-cp-parse.h gt-cp-pt.h gt-cp-repo.h gt-cp-spew.h : s-gtype; @true
gt-cp-tree.h gt-cp-mangle.h : s-gtype; @true

# G77 specific
gt-f-com.h gt-f-ste.h gtype-f.h : s-gtype; @true

# Objc specific (should be moved to objc makefile)
gtype-objc.h : s-gtype ; @true

# Java specific
gt-java-class.h gt-java-constants.h gt-java-decl.h : s-gtype ; @true
gt-java-expr.h gt-java-jcf-parse.h gt-java-jcf-write.h : s-gtype ; @true
gt-java-lang.h gt-java-mangle.h gt-java-parse.h : s-gtype ; @true
gt-java-builtins.h gtype-java.h : s-gtype ; @true


s-gtype: $(gccobjdir)/gengtype $(GTFILES)
	$(gccobjdir)/gengtype
	touch $@

gtyp-gen.h: Makefile
	echo "/* This file is machine generated.  Do not edit.  */" > gtyp-gen.h
	echo "static const char *srcdir = "  >> gtyp-gen.h
	echo "\".\"" >> gtyp-gen.h
	echo ";" >> gtyp-gen.h
	echo "static const char *lang_files[] = {" >> gtyp-gen.h
	ll="$(GTFILES_FILES_FILES)"; \
	for f in $$ll; do \
	echo "\"$$f\", "; done >> gtyp-gen.h
	echo "NULL};" >> gtyp-gen.h
	echo "static const char *langs_for_lang_files[] = {" >> gtyp-gen.h
	ff="$(GTFILES_FILES_LANGS)"; \
	for f in $$ff; do \
	echo "\"$$f\", " ; done  >> gtyp-gen.h
	echo "NULL};" >> gtyp-gen.h
	echo "static const char *all_files[] = {" >> gtyp-gen.h
	gf="$(GTFILES)"; \
	for f in $$gf; do \
	echo "\"$$f\", "; done >> gtyp-gen.h
	echo " NULL};" >> gtyp-gen.h
	echo "static const char *lang_dir_names[] = { \"c\", " >> gtyp-gen.h
	gf="$(GTFILES_LANG_DIR_NAMES)"; \
	for l in $$gf; do \
	echo "\"$$l\", "; done >> gtyp-gen.h
	echo "NULL};" >> gtyp-gen.h


# Stuff to make generate files to generate insn-*.[ch] files.

# Our gen versions are subtly different. We include hconfig.h instead
# of config.h.

$(gccobjdir)/bitmap.c:	bitmap.c
	sed -e "s/config[.]h/hconfig.h/" bitmap.c >$@
$(gccobjdir)/_bitmap.o:  $(gccobjdir)/bitmap.c
	$(HOST_CC) -c $(gccobjdir)/bitmap.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/errors.c:	errors.c
	sed -e "s/config[.]h/hconfig.h/" errors.c >$@
$(gccobjdir)/_errors.o:  $(gccobjdir)/errors.c
	$(HOST_CC) -c $(gccobjdir)/errors.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/ggc-none.c:	ggc-none.c
	sed -e "s/config[.]h/hconfig.h/" ggc-none.c >$@
$(gccobjdir)/_ggc-none.o:  $(gccobjdir)/ggc-none.c
	$(HOST_CC) -c $(gccobjdir)/ggc-none.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/obstack.c:	../../libiberty/obstack.c
	sed -e "s/config[.]h/hconfig.h/" ../../libiberty/obstack.c >$@
$(gccobjdir)/_obstack.o:  $(gccobjdir)/obstack.c
	$(HOST_CC) -c $(gccobjdir)/obstack.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/rtl.c:	rtl.c
	sed -e "s/config[.]h/hconfig.h/" rtl.c >$@
$(gccobjdir)/_rtl.o:	$(gccobjdir)/rtl.c  gtype-desc.h
	$(HOST_CC) -c $(gccobjdir)/rtl.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/print-rtl.c:	print-rtl.c
	sed -e "s/config[.]h/hconfig.h/" print-rtl.c >$@
$(gccobjdir)/_print-rtl.o:	$(gccobjdir)/print-rtl.c tree-check.h
	$(HOST_CC) -c $(gccobjdir)/print-rtl.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/_read-rtl.o:	read-rtl.c
	$(HOST_CC) -c read-rtl.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/_hashtab.o:	../../libiberty/hashtab.c
	$(HOST_CC) -c ../../libiberty/hashtab.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/_safe-ctype.o:	../../libiberty/safe-ctype.c
	$(HOST_CC) -c ../../libiberty/safe-ctype.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/varray.c:	varray.c
	sed -e "s/config[.]h/hconfig.h/" varray.c >$@
$(gccobjdir)/_varray.o:	$(gccobjdir)/varray.c
	$(HOST_CC) -c $(gccobjdir)/varray.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)


$(gccobjdir)/genattr.o:	genattr.c
	$(HOST_CC) -c genattr.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genattrtab.o:	genattrtab.c
	$(HOST_CC) -c genattrtab.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/gencheck.o:	gencheck.c tree.def
	$(HOST_CC) -c gencheck.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genconditions.o: genconditions.c
	$(HOST_CC) -c genconditions.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genconstants.o: genconstants.c
	$(HOST_CC) -c genconstants.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genemit.o:	genemit.c
	$(HOST_CC) -c genemit.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/gengenrtl.o:	gengenrtl.c
	$(HOST_CC) -c gengenrtl.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genoutput.o:	genoutput.c
	$(HOST_CC) -c genoutput.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genopinit.o:	genopinit.c
	$(HOST_CC) -c genopinit.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genrecog.o:	genrecog.c
	$(HOST_CC) -c genrecog.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genextract.o:	genextract.c
	$(HOST_CC) -c genextract.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genflags.o:	genflags.c
	$(HOST_CC) -c genflags.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/gencodes.o:	gencodes.c rtl.h genrtl.h
	$(HOST_CC) -c gencodes.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genconfig.o:	genconfig.c
	$(HOST_CC) -c genconfig.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genpeep.o:	genpeep.c
	$(HOST_CC) -c genpeep.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/gensupport.o:	gensupport.c
	$(HOST_CC) -c gensupport.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genpreds.o:	genpreds.c
	$(HOST_CC) -c genpreds.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genautomata.o:	genautomata.c
	$(HOST_CC) -c genautomata.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/gengtype.o:	gengtype.c gtyp-gen.h
	$(HOST_CC) -c gengtype.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/gengtype-lex.o:	gengtype-lex.c
	$(HOST_CC) -c gengtype-lex.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/gengtype-yacc.o:	gengtype-yacc.c
	$(HOST_CC) -c gengtype-yacc.c -o $@ $(HOST_INCLUDES) $(HOST_PREDEFS)

$(gccobjdir)/genattr:	$(gccobjdir)/genattr.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genattr.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genattrtab: $(gccobjdir)/genattrtab.o \
	$(gccobjdir)/genautomata.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) \
	$(HOST_ERRORS) $(HOST_VARRAY)
	$(LINK) $(gccobjdir)/genattrtab.o $(gccobjdir)/genautomata.o \
	$(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) \
	$(HOST_VARRAY) $(LIBS)

$(gccobjdir)/genautomata:	$(gccobjdir)/genautomata.o $(HOST_RTL) $(HOST_SUPPORT)
	$(LINK) $(gccobjdir)/genautomata.o $(HOST_RTL) $(HOST_SUPPORT) $(LIBS)

$(gccobjdir)/gencheck:	$(gccobjdir)/gencheck.o tree.def
	$(LINK) $(gccobjdir)/gencheck.o $(LIBS)

$(gccobjdir)/gencodes:	  $(gccobjdir)/gencodes.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/gencodes.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genconditions:	$(gccobjdir)/genconditions.o $(HOST_EARLY_SUPPORT) $(HOST_RTL) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genconditions.o $(HOST_RTL) $(HOST_EARLY_SUPPORT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genconstants:	  $(gccobjdir)/genconstants.o $(HOST_RTL) $(HOST_EARLY_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genconstants.o $(HOST_RTL) $(HOST_EARLY_SUPPORT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genconfig:	 $(gccobjdir)/genconfig.o genrtl.h $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genconfig.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genemit:	$(gccobjdir)/genemit.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genemit.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genextract:	$(gccobjdir)/genextract.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) insn-config.h
	$(LINK) $(gccobjdir)/genextract.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genflags:	  $(gccobjdir)/genflags.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genflags.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/gengtype: $(gccobjdir)/gengtype.o $(gccobjdir)/gengtype-lex.o $(gccobjdir)/gengtype-yacc.o
	$(LINK) $(gccobjdir)/gengtype.o $(gccobjdir)/gengtype-lex.o $(gccobjdir)/gengtype-yacc.o $(LIBS)

$(gccobjdir)/gengenrtl:	$(gccobjdir)/gengenrtl.o $(gccobjdir)/_obstack.o
	$(LINK) $(gccobjdir)/gengenrtl.o $(gccobjdir)/_obstack.o $(LIBS)

$(gccobjdir)/genoutput:	 $(gccobjdir)/genoutput.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genoutput.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genopinit:	 $(gccobjdir)/genopinit.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genopinit.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genrecog:	  $(gccobjdir)/genrecog.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genrecog.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genpeep:	   $(gccobjdir)/genpeep.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS)
	$(LINK) $(gccobjdir)/genpeep.o $(HOST_RTL) $(HOST_SUPPORT) $(HOST_PRINT) $(HOST_ERRORS) $(LIBS)

$(gccobjdir)/genpreds:	$(gccobjdir)/genpreds.o
	$(LINK) $(gccobjdir)/genpreds.o $(LIBS)

insn-config.h:	$(MD) $(gccobjdir)/genconfig
	$(gccobjdir)/genconfig $(MD) >$@
insn-flags.h:	$(MD) $(gccobjdir)/genflags
	$(gccobjdir)/genflags $(MD) >$@
insn-codes.h:	$(MD) $(gccobjdir)/gencodes
	$(gccobjdir)/gencodes $(MD) >$@
insn-constants.h:	$(MD) $(gccobjdir)/genconstants
	$(gccobjdir)/genconstants $(MD) >$@
insn-attr.h:	$(MD) $(gccobjdir)/genattr
	$(gccobjdir)/genattr $(MD) >$@
tree-check.h:	$(gccobjdir)/gencheck tree.def
	$(gccobjdir)/gencheck >tree-check.h

insn-conditions.c:	$(MD) $(gccobjdir)/genconditions
	$(gccobjdir)/genconditions $(MD) >$@

insn-emit.c:	$(MD) $(gccobjdir)/genemit
	$(gccobjdir)/genemit $(MD) >$@
insn-recog.c:	$(MD) $(gccobjdir)/genrecog
	$(gccobjdir)/genrecog $(MD) >$@
insn-extract.c:	$(MD) $(gccobjdir)/genextract
	$(gccobjdir)/genextract $(MD) >$@
insn-opinit.c:	$(MD) $(gccobjdir)/genopinit
	$(gccobjdir)/genopinit $(MD) >$@
insn-output.c:	$(MD) $(gccobjdir)/genoutput
	$(gccobjdir)/genoutput $(MD) >$@
insn-peep.c:	$(MD) $(gccobjdir)/genpeep
	$(gccobjdir)/genpeep $(MD) >$@
insn-attrtab.c:	$(MD) $(gccobjdir)/genattrtab
	$(gccobjdir)/genattrtab $(MD) >$@

genrtl.c:	$(gccobjdir)/gengenrtl
	$(gccobjdir)/gengenrtl >$@

genrtl.h:	$(gccobjdir)/gengenrtl
	$(gccobjdir)/gengenrtl -h >$@

tm-preds.h:	$(gccobjdir)/genpreds
	$(gccobjdir)/genpreds >$@

endif

##############################################################################

$(gccobjdir)/cplus-dem.o: cplus-dem.c
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c cplus-dem.c -DMAIN

$(gccobjdir)/prefix.o: prefix.c
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c prefix.c -DPREFIX=\"rubbish\"

$(gccobjdir)/toplev.o: toplev.c
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c toplev.c -DTARGET_NAME=\"$(TARGET_NAME)\"

$(gccobjdir)/except.o: except.c
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c except.c -DDONT_USE_BUILTIN_SETJMP -DJMP_BUF_SIZE=27

$(gccobjdir)/optabs.o: optabs.c
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c optabs.c -DDONT_USE_BUILTIN_SETJMP -DJMP_BUF_SIZE=27

$(gccobjdir)/gcc.o: gcc.c
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c gcc.c \
	-DDEFAULT_TARGET_VERSION=\"$(VERSION)\" \
	-DDEFAULT_TARGET_MACHINE=\"$(TARGET_NAME)\" \
	-DSTANDARD_STARTFILE_PREFIX=\"$(prefix)$(gn_standard_startfile_prefix)\" \
	-DSTANDARD_EXEC_PREFIX=\"$(prefix)$(gn_standard_exec_prefix)\"

$(gccobjdir)/cppdefault.o: cppdefault.c
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c cppdefault.c \
	-DGCC_INCLUDE_DIR=\"$(prefix)$(gn_gcc_include_dir)\" \
	-DGPLUSPLUS_INCLUDE_DIR=\"$(prefix)$(gn_gplusplus_include_dir)\" \
	-DLOCAL_INCLUDE_DIR=\"$(prefix)$(gn_local_include_dir)\" \
	-DSYSTEM_INCLUDE_DIR=\"$(prefix)$(gn_system_include_dir)\" \
	-DCROSS_INCLUDE_DIR=\"$(prefix)$(gn_cross_include_dir)\"

# Dependencies
$(gccobjdir)/alias.o: alias.c
$(gccobjdir)/arm.o: config/arm/arm.c config.h system.h rtl.h tree.h \
	regs.h hard-reg-set.h real.h insn-config.h conditions.h \
	output.h insn-attr.h flags.h reload.h function.h expr.h toplev.h \
	recog.h ggc.h except.h c-pragma.h tm_p.h
	$(CC) $(CFLAGS) -o $@ -c $< $(INCLUDES)

$(gccobjdir)/bb-reorder.o: bb-reorder.c insn-config.h
$(gccobjdir)/bitmap.o: bitmap.c insn-codes.h insn-flags.h
$(gccobjdir)/builtins.o: builtins.c insn-config.h
$(gccobjdir)/caller-save.o: caller-save.c
$(gccobjdir)/calls.o: calls.c
$(gccobjdir)/combine.o: combine.c insn-attr.h
$(gccobjdir)/conflict.o: conflict.c
$(gccobjdir)/convert.o: convert.c
$(gccobjdir)/cse.o: cse.c
$(gccobjdir)/dbxout.o: dbxout.c
$(gccobjdir)/debug.o: debug.c debug.h
$(gccobjdir)/dependence.o: dependence.c
$(gccobjdir)/df.o: df.c
$(gccobjdir)/diagnostic.o: diagnostic.c
$(gccobjdir)/doloop.o: doloop.c
$(gccobjdir)/dominance.o: dominance.c
$(gccobjdir)/dwarf2out.o: dwarf2out.c
$(gccobjdir)/dyn-string.o: dyn-string.c
$(gccobjdir)/errors.o: errors.c
$(gccobjdir)/emit-rtl.o: emit-rtl.c insn-config.h
$(gccobjdir)/except.o: except.c gt-except.h insn-config.h
$(gccobjdir)/explow.o: explow.c
$(gccobjdir)/expmed.o: expmed.c
$(gccobjdir)/expr.o: expr.c
$(gccobjdir)/final.o: final.c insn-config.h insn-attr.h
$(gccobjdir)/flow.o: flow.c
$(gccobjdir)/fold-const.o: fold-const.c
$(gccobjdir)/function.o: function.c
$(gccobjdir)/gcse.o: gcse.c
$(gccobjdir)/genrtl.o: genrtl.c
$(gccobjdir)/ggc-common.o: ggc-common.c
$(gccobjdir)/ggc-simple.o: ggc-simple.c
$(gccobjdir)/global.o: global.c
$(gccobjdir)/graph.o: graph.c
$(gccobjdir)/haifa-sched.o: haifa-sched.c
$(gccobjdir)/hash.o: hash.c
$(gccobjdir)/hashtable.o: hashtable.c hashtable.h
$(gccobjdir)/ifcvt.o: ifcvt.c
$(gccobjdir)/integrate.o: integrate.c
$(gccobjdir)/jump.o: jump.c
$(gccobjdir)/lcm.o: lcm.c
$(gccobjdir)/langhooks.o: langhooks.c
$(gccobjdir)/lists.o: lists.c
$(gccobjdir)/local-alloc.o: local-alloc.c
$(gccobjdir)/loop.o: loop.c
$(gccobjdir)/mbchar.o: mbchar.c
$(gccobjdir)/optabs.o: optabs.c
$(gccobjdir)/params.o: params.c
$(gccobjdir)/predict.o: predict.c
$(gccobjdir)/print-rtl.o: print-rtl.c
$(gccobjdir)/print-tree.o: print-tree.c
$(gccobjdir)/profile.o: profile.c
$(gccobjdir)/real.o: real.c
$(gccobjdir)/recog.o: recog.c
$(gccobjdir)/reg-stack.o: reg-stack.c
$(gccobjdir)/regclass.o: regclass.c
$(gccobjdir)/regmove.o: regmove.c
$(gccobjdir)/reload.o: reload.c
$(gccobjdir)/reload1.o: reload1.c
$(gccobjdir)/reorg.o: reorg.c
$(gccobjdir)/resource.o: resource.c
$(gccobjdir)/rtl.o: rtl.c
$(gccobjdir)/rtlanal.o: rtlanal.c
$(gccobjdir)/sbitmap.o: sbitmap.c
$(gccobjdir)/sched-deps.o: sched-deps.c
$(gccobjdir)/sched-ebb.o: sched-ebb.c
$(gccobjdir)/sched-rgn.o: sched-rgn.c
$(gccobjdir)/sched-vis.o: sched-vis.c
$(gccobjdir)/sibcall.o: sibcall.c
$(gccobjdir)/simplify-rtx.o: simplify-rtx.c
$(gccobjdir)/ssa.o: ssa.c
$(gccobjdir)/ssa-ccp.o: ssa-ccp.c
$(gccobjdir)/ssa-dce.o: ssa-dce.c
$(gccobjdir)/stmt.o: stmt.c insn-config.h
$(gccobjdir)/stor-layout.o: stor-layout.c
$(gccobjdir)/string-pool.o: stringpool.c
$(gccobjdir)/timevar.o: timevar.c
$(gccobjdir)/toplev.o: toplev.c
$(gccobjdir)/tree.o: tree.c
$(gccobjdir)/unroll.o: unroll.c
$(gccobjdir)/varasm.o: varasm.c gt-varasm.h
$(gccobjdir)/varray.o: varray.c
$(gccobjdir)/version.o: version.c

$(gccobjdir)/c-aux-info.o: c-aux-info.c
$(gccobjdir)/c-common.o: c-common.c
$(gccobjdir)/c-convert.o: c-convert.c
$(gccobjdir)/c-decl.o: c-decl.c
$(gccobjdir)/c-iterate.o: c-iterate.c
$(gccobjdir)/c-lang.o: c-lang.c
$(gccobjdir)/c-lex.o: c-lex.c rtl.h genrtl.h
$(gccobjdir)/c-objc-common.o: c-objc-common.c insn-config.h integrate.h
$(gccobjdir)/c-parse.o: c-parse.c gt-c-parse.h
$(gccobjdir)/c-pragma.o: c-pragma.c
$(gccobjdir)/c-typeck.o: c-typeck.c

$(gccobjdir)/gcc.o: gcc.c config.h insn-codes.h insn-flags.h multilib.h insn-constants.h
$(gccobjdir)/gccspec.o: gccspec.c
$(gccobjdir)/gcov.o: gcov.c

$(gccobjdir)/getpwd.o: getpwd.c
$(gccobjdir)/libgcc2.o: libgcc2.c
$(gccobjdir)/prefix.o: prefix.c

$(gccobjdir)/genattr.o: genattr.c
$(gccobjdir)/genattrtab.o: genattrtab.c
$(gccobjdir)/gencheck.o: gencheck.c
$(gccobjdir)/gencodes.o: gencodes.c
$(gccobjdir)/genconfig.o: genconfig.c
$(gccobjdir)/genconstants.o: genconstants.c
$(gccobjdir)/genemit.o: genemit.c
$(gccobjdir)/genextract.o: genextract.c
$(gccobjdir)/genflags.o: genflags.c
$(gccobjdir)/gengenrtl.o: gengenrtl.c
$(gccobjdir)/genopinit.o: genopinit.c
$(gccobjdir)/genoutput.o: genoutput.c
$(gccobjdir)/genpeep.o: genpeep.c
$(gccobjdir)/genrecog.o: genrecog.c
$(gccobjdir)/_obstack.o: $(gccobjdir)/obstack.c
$(gccobjdir)/_print-rtl.o: $(gccobjdir)/print-rtl.c
$(gccobjdir)/_rtl.o: $(gccobjdir)/rtl.c
$(gccobjdir)/_rtlanal.o: $(gccobjdir)/rtlanal.c 
$(gccobjdir)/dummy-conditions.o: dummy-conditions.c gensupport.h

$(gccobjdir)/insn-attrtab.o: insn-attrtab.c
$(gccobjdir)/insn-conditions.o: insn-conditions.c gensupport.h insn-constants.h tm_p.h tm-preds.h
$(gccobjdir)/insn-emit.o: insn-emit.c
$(gccobjdir)/insn-extract.o: insn-extract.c
$(gccobjdir)/insn-opinit.o: insn-opinit.c
$(gccobjdir)/insn-output.o: insn-output.c
$(gccobjdir)/insn-peep.o: insn-peep.c
$(gccobjdir)/insn-recog.o: insn-recog.c 

$(gccobjdir)/config/arm/riscos.o: config/arm/riscos.c
$(gccobjdir)/config/arm/riscos_fix.o: config/arm/riscos_fix.c
$(gccobjdir)/config/arm/rname.o: config/arm/rname.c 

$(gccobjdir)/cpperror.o: cpperror.c
$(gccobjdir)/cppexp.o: cppexp.c
$(gccobjdir)/cppfiles.o: cppfiles.c
$(gccobjdir)/cpphash.o: cpphash.c
$(gccobjdir)/cpplib.o: cpplib.c
$(gccobjdir)/cpplex.o: cpplex.c
$(gccobjdir)/cppmacro.o: cppmacro.c
$(gccobjdir)/cppmain.o: cppmain.c
$(gccobjdir)/cppspec.o: cppspec.c
$(gccobjdir)/cpptrad.o: cpptrad.c

