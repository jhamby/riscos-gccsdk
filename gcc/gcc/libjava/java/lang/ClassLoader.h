// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_lang_ClassLoader__
#define __java_lang_ClassLoader__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace net
    {
      class URL;
    }
    namespace security
    {
      class ProtectionDomain;
      class Permission;
    }
  }
};

class ::java::lang::ClassLoader : public ::java::lang::Object
{
public:
  ::java::lang::ClassLoader *getParent ();
  static ::java::lang::ClassLoader *getSystemClassLoader ();
public:  // actually protected
  ClassLoader ();
  ClassLoader (::java::lang::ClassLoader *);
public:
  virtual ::java::lang::Class *loadClass (::java::lang::String *);
public:  // actually protected
  virtual ::java::lang::Class *loadClass (::java::lang::String *, jboolean);
  virtual ::java::lang::Class *findClass (::java::lang::String *);
  ::java::lang::Class *defineClass (jbyteArray, jint, jint);
  ::java::lang::Class *defineClass (::java::lang::String *, jbyteArray, jint, jint);
  ::java::lang::Class *defineClass (::java::lang::String *, jbyteArray, jint, jint, ::java::security::ProtectionDomain *);
private:
  ::java::lang::Class *defineClass0 (::java::lang::String *, jbyteArray, jint, jint, ::java::security::ProtectionDomain *);
public:  // actually protected
  void resolveClass (::java::lang::Class *);
public: // actually package-private
  static void resolveClass0 (::java::lang::Class *);
private:
  static void linkClass0 (::java::lang::Class *);
  static void markClassErrorState0 (::java::lang::Class *);
public:  // actually protected
  virtual ::java::lang::Package *definePackage (::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::net::URL *);
  virtual ::java::lang::Package *getPackage (::java::lang::String *);
  virtual JArray< ::java::lang::Package *> *getPackages ();
  virtual ::java::lang::String *findLibrary (::java::lang::String *) { return 0; }
  ::java::lang::Class *findSystemClass (::java::lang::String *);
  void setSigners (::java::lang::Class *, JArray< ::java::lang::Object *> *) { }
  ::java::lang::Class *findLoadedClass (::java::lang::String *);
public:
  static ::java::io::InputStream *getSystemResourceAsStream (::java::lang::String *);
  static ::java::net::URL *getSystemResource (::java::lang::String *);
  static ::java::util::Enumeration *getSystemResources (::java::lang::String *);
  virtual ::java::io::InputStream *getResourceAsStream (::java::lang::String *);
  virtual ::java::net::URL *getResource (::java::lang::String *);
public:  // actually protected
  virtual ::java::net::URL *findResource (::java::lang::String *) { return 0; }
public:
  ::java::util::Enumeration *getResources (::java::lang::String *);
public:  // actually protected
  virtual ::java::util::Enumeration *findResources (::java::lang::String *);
public:
  virtual void setDefaultAssertionStatus (jboolean);
  virtual void setPackageAssertionStatus (::java::lang::String *, jboolean);
  virtual void setClassAssertionStatus (::java::lang::String *, jboolean);
  virtual void clearAssertionStatus ();
public: // actually package-private
  ::java::util::Map * __attribute__((aligned(__alignof__( ::java::lang::Object )))) loadedClasses;
  jboolean defaultAssertionStatus;
  static ::java::util::Map *systemPackageAssertionStatus;
  ::java::util::Map *packageAssertionStatus;
  static ::java::util::Map *systemClassAssertionStatus;
  ::java::util::Map *classAssertionStatus;
private:
  ::java::lang::ClassLoader *parent;
  ::java::util::HashMap *definedPackages;
public: // actually package-private
  static ::java::security::Permission *protectionDomainPermission;
  static ::java::security::ProtectionDomain *unknownProtectionDomain;
  static ::java::security::ProtectionDomain *defaultProtectionDomain;
  friend jclass _Jv_FindClass (_Jv_Utf8Const *name, java::lang::ClassLoader *loader);
  friend void _Jv_RunMain (jclass klass, const char *name, int argc, const char **argv, bool is_jar);
public:

  static ::java::lang::Class class$;
};

#endif /* __java_lang_ClassLoader__ */
