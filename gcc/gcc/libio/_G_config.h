/* This file is generated by hand since the shell scripts won't run
   on my Acorn.
   I hope that someday something more automatic can be created.
 */
#ifndef _G_config_h
#define _G_config_h
#define _G_LIB_VERSION "2.8.0"
/* Our version of GCC does not prepend an underscore to names.  */
#define _G_NAMES_HAVE_UNDERSCORE 0
/* No dollars in labels please.  */
/* #define _G_DOLLAR_IN_LABEL 0 */
/* Define how virtual function tables are named. */
#define _G_VTABLE_LABEL_PREFIX "_vt$"
/* If _G_VTABLE_LABEL_PREFIX = __vt_ or ___vt_
   then we define _G_USING_THUNKS.  */
/* #define _G_USING_THUNKS */
#define _G_VTABLE_LABEL_HAS_LENGTH 1
/* VTABLE_LABEL_PREFIX_ID is the same as VTABLE_LABEL_PREFIX but
   the former is a C identifier, while the latter is a quoted
   string.  */
#define _G_VTABLE_LABEL_PREFIX_ID _vt$
/* The struct stat has st_blksize.  */
#define _G_HAVE_ST_BLKSIZE 1
#define _G_CLOG_CONFLICT 1

/* Definitions for the standard types (such as mode_t).  */

typedef unsigned int _G_sigset_t;

typedef int _G_pid_t;
typedef unsigned int _G_gid_t;
typedef unsigned int _G_uid_t;
typedef unsigned int _G_mode_t;
typedef unsigned int _G_clock_t;
typedef int _G_dev_t;
typedef int _G_fpos_t;
typedef long int _G_off_t;
typedef unsigned short int _G_nlink_t;
typedef unsigned int _G_ino_t;
#ifndef __PTRDIFF_TYPE__
#define __PTRDIFF_TYPE__ int
#endif
typedef __PTRDIFF_TYPE__ _G_ptrdiff_t;
#ifndef __SIZE_TYPE__
#define __SIZE_TYPE__ unsigned int
#endif
typedef __SIZE_TYPE__ _G_size_t;
typedef unsigned int _G_time_t;
typedef int _G_ssize_t;
#ifndef __WCHAR_TYPE__
#define __WCHAR_TYPE__ unsigned int
#endif
typedef unsigned int _G_wchar_t;
typedef unsigned int _G_wint_t;
typedef char * _G_va_list;

#define _G_signal_return_type int
#define _G_sprintf_return_type int

/* Taken from <stdio.h> for UnixLib 3.7a.  */
#define _G_SHRT_MAX SHRT_MAX
#define _G_INT_MAX INT_MAX
#define _G_LONG_MAX LONG_MAX
#define _G_LONG_LONG_MAX LONG_LONG_MAX

#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)
typedef          int   _G_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int  _G_uint8_t __attribute__ ((__mode__ (__QI__)));
typedef          int  _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef          int  _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));
typedef          int  _G_int64_t __attribute__ ((__mode__ (__DI__)));
typedef unsigned int _G_uint64_t __attribute__ ((__mode__ (__DI__)));
#if __GNUC__ > 2 || __GNUC_MINOR__ >= 8
__extension__ typedef long long _G_llong;
__extension__ typedef unsigned long long _G_ullong;
#endif
#else
typedef short _G_int16_t;
typedef unsigned short _G_uint16_t;
typedef int _G_int32_t;
typedef unsigned int _G_uint32_t;
#endif

#define _G_BUFSIZ 4096
#define _G_FOPEN_MAX 64
#define _G_FILENAME_MAX 252
#define _G_NULL 0

#if defined (__cplusplus) || defined (__STDC__)
#define _G_ARGS(ARGLIST) ARGLIST
#else
#define _G_ARGS(ARGLIST) ()
#endif
#if !defined (__GNUG__) || defined (__STRICT_ANSI__)
#define _G_NO_NRV
#endif
#if !defined (__GNUG__)
#define _G_NO_EXTERN_TEMPLATES
#endif
/* We have the atexit function.  */
#define _G_HAVE_ATEXIT 1
/* We do not have the sys/resource.h file.  */
#define _G_HAVE_SYS_RESOURCE 1
/* We have sys/times.h and the structure tms.  */
#define _G_HAVE_SYS_TIMES 1
/* We do not have sys/socket.h.  */
#define _G_HAVE_SYS_SOCKET 0
/* We do not have sys/cdefs.h.  */
#define HAVE_SYS_CDEFS 0
/* We have sys/wait.h and it is POSIX compatible.  */
#define _G_HAVE_SYS_WAIT 1
/* Got a unistd.h.  */
#define _G_HAVE_UNISTD 1
/* Got a dirent.h.  */
#define _G_HAVE_DIRENT 1
/* We don't have curses.h.  */
#define _G_HAVE_CURSES 0
/* math.h does not inline anything.  */
#define _G_MATH_H_INLINES 0
/* We have the define BOOL defined.  */
#define _G_HAVE_BOOL 1
#define _G_HAVE_PRINTF_FP 0
#define _G_HAVE_LONG_DOUBLE_IO 0
/* Uncommend the following line if you don't have working templates.  */
/* #define _G_NO_TEMPLATES */
#endif /* !_G_config_h */
