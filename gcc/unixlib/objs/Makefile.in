# Project:   GCCSDK UnixLib

CCfeatures =
Predefs = -D__UNIXLIB_INTERNALS -D_GNU_SOURCE=1

# Misc macros
# XX = commamd
# XXflags = general flags
# XXdflags = debugging flags
# XXrflags = release flags
# XXapcsflags = APCS selection flags

CC = gcc
CCdflags = -pedantic -Wall -Wundef -Wpointer-arith -Wcast-align \
	-Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes \
	-Wmissing-declarations -Wnested-externs -Winline -Wno-unused \
	-W -Wcast-qual -Wshadow
CCrflags =
CCflags = -O2 -mpoke-function-name -mthrowback -std=c99 $(CCdflags) $(CCfeatures) -isystem UnixLib: -I UnixLib:^.incl-local

AS = gcc
ASflags = -c
ASdflags =
ASrflags = -I UnixLib:^

AR = libfile
ARflags = -c

LINKflags = -RMF
LINK = drlink

VPATH = ^.source
.SUFFIXES: .o .c .s
.INIT:
	@cdir module
	@cdir module.o

.c.o:;	$(CC) $(CCflags) $(Predefs) -c -o $@ $<
.c.s:;	$(CC) $(CCflags) $(Predefs) -S -o $@ $<
.s.o:;	$(AS) $(ASflags) -o $@ $<
#.s.o:;	$(AS) $(ASflags) -To $@ -From $<

OBJS = \

# Final targets:
all:	UnixLib:o.UnixLib SharedULib

SharedULib: module.o.sul
	$(LINK) $(LINKflags) -o $@ module.o.*

UnixLib: $(OBJS)
	$(AR) $(ARflags) -o $@ \

UnixLib:o.UnixLib:	UnixLib
	copy @.UnixLib UnixLib:o.UnixLib fv~c

clean:
	-wipe module f~vr~c
	-remove UnixLib
	-remove SharedULib
	-remove UnixLib:o.UnixLib

# Static dependencies:

# Dynamic dependencies:
