# Top-level Makefile for the GNU Compiler Collection for ARM/RISC OS
# Copyright (c) 2000 Nick Burrett
# Written by Nick Burrett <nick@dsvr.net>

# Set by the configure script
prefix=@prefix@
exec_prefix=@exec_prefix@
datadir=@datadir@
includedir=@includedir@
infodir=@infodir@
libdir=@libdir@
libexecdir=@libexecdir@
localstatedir=@localstatedir@
bindir=@bindir@
mandir=@mandir@
oldincludedir=@oldincludedir@
sbindir=@sbindir@
sharedstatedir=@sharedstatedir@
srcdir=@srcdir@
sysconfdir=@sysconfdir@

CC=@CC@
CXX=@CXX@
CFLAGS=@CFLAGS@
CXXFLAGS=@CXXFLAGS@

TARGET_NAME=@target_name@
TARGET_DEFS=@target_defs@
gccpkg=@prefix@
distdir=@prefix@
objdir=@topdir@/$(TARGET_NAME)

# set inserts variable overrides after the following line
####host definitions
@host_overrides@
####

export TARGET_NAME TARGET_DEFS gccpkg distdir objdir

# Path to where we place non-target specific compiled binaries
BIN = $(distdir)/bin

# Path to the location target specific compiled binaries.
TBIN = $(distdir)/bin/$(TARGET_NAME)/$(VERSION)

ifeq ($(crosscompile),yes)
TARGET_DEFS += -DCROSS_COMPILE
AR = ar
AR_FLAGS = -c
else
AR = libfile
AR_FLAGS = -c
endif

# Pass these variables through the environment to sub-makes.
export VERSION TARGET_NAME TARGET_DEFS BIN TBIN
export CFLAGS AR AR_FLAGS crosscompile

all:	crosshost crosstarget

# Setup build and installation directories.  Install run-time library
# headers
setup:	directories install_headers

# Tools that will run natively in any environment
# i.e. under Linux this will build the GCC cross-compiler, cross-assembler
# and cross-linker.  Under RISC OS this will build the compiler, assembler
# and linker natively
crosshost:	libiberty riscos-aof gcc

ifeq ($(crosscompile),yes)
riscoshost:	cross-progs
else
# We don't build these for on the cross compiler because the host probably
# has the tools anyway.  They get built as RISC OS binaries, so it would
# be pointless.
riscoshost:	riscos-progs
endif

# These targets build the libraries and binaries suitable for execution
# on RISC OS machines only.
crosstarget:	libgcc unixlib libscl libio libstdc libf2c libgpc riscos-libs riscoshost

.PHONY: directories
.PHONY: libgcc
.PHONY: libgpc
.PHONY: unixlib
.PHONY: libscl
.PHONY: libiberty
.PHONY: riscos-progs
.PHONY: riscos-libs
.PHONY: riscos-aof
.PHONY: riscos-elf
.PHONY: gcc


# Target (trgXX) and compiler flags (cflXX) definitions.  The XX must
# match for both trg and cfl in all calls to sub-make processes.  We
# write them like this because it makes the rest of the makefile easy
# to read.
trg10="TRG=apcs26/hard/arch2/unixlib"
trg11="TRG=apcs26/hard/arch3/unixlib"
trg12="TRG=apcs26/hard/arch4/unixlib"
trg13="TRG=apcs26/soft/arch2/unixlib"
trg14="TRG=apcs26/soft/arch3/unixlib"
trg15="TRG=apcs26/soft/arch4/unixlib"

trg20="TRG=apcs32/hard/arch3/unixlib"
trg21="TRG=apcs32/hard/arch4/unixlib"
trg22="TRG=apcs32/soft/arch3/unixlib"
trg23="TRG=apcs32/soft/arch4/unixlib"

trg30="TRG=apcs26/hard/arch2/libscl"
trg31="TRG=apcs26/hard/arch3/libscl"
trg32="TRG=apcs26/hard/arch4/libscl"

trg40="TRG=apcs32/hard/arch3/libscl"
trg41="TRG=apcs32/hard/arch4/libscl"

cfl10="CFL=-mapcs-26 -mno-apcs-float -mcpu=arm2 -munixlib"
cfl11="CFL=-mapcs-26 -mno-apcs-float -mcpu=arm6 -munixlib"
cfl12="CFL=-mapcs-26 -mno-apcs-float -mcpu=strongarm -munixlib"
cfl13="CFL=-mapcs-26 -mno-apcs-float -mcpu=arm2 -munixlib -msoft-float"
cfl14="CFL=-mapcs-26 -mno-apcs-float -mcpu=arm6 -munixlib -msoft-float"
cfl15="CFL=-mapcs-26 -mno-apcs-float -mcpu=strongarm -munixlib -msoft-float"

cfl20="CFL=-mapcs-32 -mno-apcs-float -mcpu=arm6 -munixlib"
cfl21="CFL=-mapcs-32 -mno-apcs-float -mcpu=strongarm -munixlib"
cfl22="CFL=-mapcs-32 -mno-apcs-float -mcpu=arm6 -munixlib -msoft-float"
cfl23="CFL=-mapcs-32 -mno-apcs-float -mcpu=strongarm -munixlib -msoft-float"

cfl30="CFL=-mapcs-26 -mno-apcs-float -mcpu=arm2 -mlibscl"
cfl31="CFL=-mapcs-26 -mno-apcs-float -mcpu=arm6 -mlibscl"
cfl32="CFL=-mapcs-26 -mno-apcs-float -mcpu=strongarm -mlibscl"

cfl40="CFL=-mapcs-32 -mno-apcs-float -mcpu=arm6 -mlibscl"
cfl41="CFL=-mapcs-32 -mno-apcs-float -mcpu=strongarm -mlibscl"



libscl:
	$(MAKE) -C libscl $(trg30) $(cfl30)

libiberty:
	$(MAKE) -C libiberty "TRG=native"

gcc:
	$(MAKE) -C "gcc-$(VERSION)"

riscos-progs:
	$(MAKE) -C libiberty $(trg10) $(cfl10)
	$(MAKE) -C riscos-progs $(trg10) $(cfl10)

cross-progs:
	$(MAKE) -C cross-progs

riscos-aof:
	$(MAKE) -C riscos-aof

riscos-elf:
	$(MAKE) -C riscos-elf

# The ballache of having to keep support with Objasm forces us
# to do this (CFL1) brain damage.
unixlib:
	$(MAKE) -C $@ $(trg10) $(cfl10) "CFL1=-Wa,-DAPCS32=no -Wa,-DARMFPE=2"
	$(MAKE) -C $@ $(trg11) $(cfl11) "CFL1=-Wa,-DAPCS32=no -Wa,-DARMFPE=3"
	$(MAKE) -C $@ $(trg12) $(cfl12) "CFL1=-Wa,-DAPCS32=no -Wa,-DARMFPE=3"
	$(MAKE) -C $@ $(trg13) $(cfl13) "CFL1=-Wa,-DAPCS32=no -Wa,-DARMFPE=2"
	$(MAKE) -C $@ $(trg14) $(cfl14) "CFL1=-Wa,-DAPCS32=no -Wa,-DARMFPE=3"
	$(MAKE) -C $@ $(trg15) $(cfl15) "CFL1=-Wa,-DAPCS32=no -Wa,-DARMFPE=3"

	$(MAKE) -C $@ $(trg20) $(cfl20) "CFL1=-Wa,-DAPCS32=yes -Wa,-DARMFPE=3"
	$(MAKE) -C $@ $(trg21) $(cfl21) "CFL1=-Wa,-DAPCS32=yes -Wa,-DARMFPE=3"
	$(MAKE) -C $@ $(trg22) $(cfl22) "CFL1=-Wa,-DAPCS32=yes -Wa,-DARMFPE=3"
	$(MAKE) -C $@ $(trg23) $(cfl23) "CFL1=-Wa,-DAPCS32=yes -Wa,-DARMFPE=3"

riscos-libs:
	$(MAKE) -C $@ $(trg10) $(cfl10)
	$(MAKE) -C $@ $(trg11) $(cfl11)
	#$(MAKE) -C $@ $(trg12) $(cfl12)
	$(MAKE) -C $@ $(trg13) $(cfl13)
	$(MAKE) -C $@ $(trg14) $(cfl14)
	#$(MAKE) -C $@ $(trg15) $(cfl15)

	$(MAKE) -C $@ $(trg20) $(cfl20)
	#$(MAKE) -C $@ $(trg21) $(cfl21)
	$(MAKE) -C $@ $(trg22) $(cfl22)
	#$(MAKE) -C $@ $(trg23) $(cfl23)

libgcc:
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg10) $(cfl10)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg11) $(cfl11)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg12) $(cfl12)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg13) $(cfl13)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg14) $(cfl14)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg15) $(cfl15)

	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg20) $(cfl20)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg21) $(cfl21)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg22) $(cfl22)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg23) $(cfl23)

	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg30) $(cfl30)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg31) $(cfl31)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg32) $(cfl32)

libgpc libio libf2c libstdc:
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg10) $(cfl10)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg11) $(cfl11)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg12) $(cfl12)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg13) $(cfl13)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg14) $(cfl14)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg15) $(cfl15)

	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg20) $(cfl20)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg21) $(cfl21)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg22) $(cfl22)
	$(MAKE) -C "gcc-$(VERSION)" $@ $(trg23) $(cfl23)

# Make sure build and installation directories exist
directories:
	mkdir -p $(gccpkg)
	mkdir -p $(standard_exec_prefix)
	mkdir -p $(standard_startfile_prefix)
	mkdir -p $(gcc_include_dir)
	mkdir -p $(gcc_bin_dir)
	mkdir -p $(gplusplus_include_dir)
	mkdir -p $(cross_include_dir)
	mkdir -p $(objdir)

# Install header files for our standard C run-time libraries.
install_headers:
	$(MAKE) -C libscl install_headers
	$(MAKE) -C unixlib install_headers
	$(MAKE) -C "gcc-$(VERSION)/gcc" -f Makelibs install_headers
	$(MAKE) -C "gcc-$(VERSION)/libio" install_headers
	$(MAKE) -C "gcc-$(VERSION)/libstdc" install_headers
