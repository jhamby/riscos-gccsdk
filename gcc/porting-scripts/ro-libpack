#!/bin/bash

set -e

if [ -z "$RO_PKG" ] ; then 
  echo "RO libpack: RO_PKG must be set to the package filename"
  exit 1
fi

if [ -z "$AB_MAKE" ] ; then
  AB_MAKE=GCCSDK_ENV/ro-make
fi

if [ -z "$AB_INSTALLTARGET" ] ; then
  AB_INSTALLTARGET=install
fi

mkdir -p $AB_DIR/package/bin/
mkdir -p $AB_DIR/package/lib/X11/
mkdir -p $AB_DIR/package/include/X11/extensions/
mkdir -p $AB_DIR/package/lib/pkgconfig/

echo "RO libpack: Running install target: $AB_INSTALLTARGET"
# Adding GCCSDK_ENV in our path to intercept cp/rm/ln calls during installation.
PATH=GCCSDK_ENV:$PATH eval "$AB_MAKE $AB_INSTALLTARGET"

cd $AB_DIR/package

files=$(find -type f)

if [ -z "$files" ] ; then
  echo "RO libpack: No files to pack"
  exit 0
fi

if [ -d "$AB_OUTPUTLIB" ] ; then

  tar cfvz $AB_OUTPUTLIB/$RO_PKG.tgz $files

  # Process to turn into RISC OS format filenames for zipping
  
  for file in $(find) ; do
   if echo $file | grep "\.h$" > /dev/null ; then
     filename=$(basename $file | sed s#\.h\$##)
     dirname=$(echo $file | sed s#/$filename\.h\$##)
     mkdir -p $dirname/h
     mv $file $dirname/h/$filename
   fi

   if echo $file | grep "\.a$" > /dev/null ; then
     filename=$(basename $file | sed s#\.a\$##)
     dirname=$(echo $file | sed s#/$filename\.a\$##)
     mkdir -p $dirname/o
     mv $file $dirname/o/$filename
   fi
  done

  if [ -e $AB_OUTPUTLIB/$RO_PKG.zip ] ; then
    rm $AB_OUTPUTLIB/$RO_PKG.zip
  fi
  GCCSDK_BIN/zip -, -r -D $AB_OUTPUTLIB/$RO_PKG.zip .

else
  if [ -z "$AB_OUTPUTLIB" ] ; then
    echo "RO libpack: Output directory \$AB_OUTPUTLIB not set - library archives not created"
  else
    echo "RO libpack: Output directory '$AB_OUTPUTLIB' (defined by \$AB_OUTPUTLIB) does not exist - library archives not created"
  fi
fi

cd ..
rm -rf $AB_DIR/package
