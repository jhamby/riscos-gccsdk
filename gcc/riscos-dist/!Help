Welcome to GCCSDK GCC 3.4.6 Release 2 for RISC OS.

This document covers important notes for new users and existing users alike.
GCC and UnixLib have undergone many changes, so it's important that you read
this document fully.

If you're new to GCC:

 - The !gcc application contains everything you need to get started
   programming in RISC OS.  Although it possible to mix and match,
   in particular with Acorn's C/C++, this is not recommended for beginners.

   To get started using GCC, read !gcc.docs.Intro


If you've used GCC before:

- The standard C++ library has been re-written from GCC 2.95.4.  Any existing
  C++ applications and libraries will require re-compiling before
  interoperability can be achieved if they were compiled prior to version
  3.3.3 of GCC.

- The C++ compiler does not specify the 'std' namespace by default.  To use
  functions defined within the standard C++ library you must now either
  explicitly declare 'using namespace std' at the head of your source file, or
  explicitly prepend 'std::' to all function and variable references.

- The file !gcc.Changes lists major changes from the last version.
  !gcc.docs.UnixLib.Changes has a comprehensive list of changes to UnixLib.


Future Versions of GCC:

  The 3.4.6 version of GCC is the last release of its 3.4 branch.  New GCCSDK
  releases based on GCC 3.4.6 are unlikely as the current code based is
  considered sufficently stable and feature complete.  However, based on
  voluntary code and/or bug fix contributions the GCCSDK Developers team might
  consider another interim release based on 3.4.6 before the next series of
  major GCCSDK releases which will be based on GCC 4.1/4.2.

  Those future 4.1/4.2 GCCSDK developments will be ELF and possibly soft-float
  based.  We are also working on a shared library system.


License:

  GCCSDK release made by the GCCSDK Developers consists of several binaries
  and sources which have different licenses.  The following overview can
  help to identify those licenses but is in no way an authoritative statement
  on behalf of the GCCSDK Developers:

  - gcc (and all its associated files) : See !gcc.docs.gcc
  - as : GPL version 2
  - cmunge : See !gcc.docs.CMunge.Copyright
  - decaof : GPL version 2
  - drlink : GPL version 2
  - resgen : GPL version 2
  - infozip : See !gcc.docs.InfoZip.LICENSE
  - ld : GPL
  - libfile, ar : Freeware, see !gcc.docs.LibFile.Readme
  - nm : GPL version 2
  - cmp, diff, diff3, sdiff : See !gcc.docs.diff
  - bison, fileutils (touch, mkdir), gperf, grep, gzip, make, patch,
    sed: GPL
  - flex : See !gcc.docs.flex
  - UnixLib : See !gcc.docs.UnixLib.Copyright


Credits:

  Primary Developers today :

  - Peter Naulls - UnixLib (All areas, especially glibc compatibility),
     release management, AOF tools.
  - John Tytgat - 'random' GCCSDK hacking.
  - Alex Waugh - UnixLib (especially signals, pthreads, file handling).

  An enormous amount of porting and testing work was done by Nick Burrett.
  Without his contribution GCCSDK wouldn't exist.

  The following people have also made contributions over the last three years :

  - Graham Shaw, John-Mark Bell, James Bursa, Stefan Bellon,
    David Marston, Steve Ellacott, Rich Hudson, Jeffrey Lee,
    Alex Macfarlane Smith, Christian Ludlam, Tony van der Hoff,
    Theo Markettos, Philip Pemberton, Alan Buckley

  Special thanks to the following people having written programs which are
  used in the GCCSDK project :

  - Niklas Rï¿½emo for his 'as' AOF assembler and Darren Salt for his
    improvements.
  - Justin Fletcher and Robin Watts for 'CMunge', a free alternative to CMHG.
  - Andy Duplain for his 'decaof', an AOF decoder.
  - Dave Daniels for his 'drlink', an AOF linker.
  - Bernhard Walter for his 'libfile', an AOF library archiver.
  - Nick Burrett for his 'nm', listing symbols of AOF files.
  - John Tytgat for his 'resgen', a ResourceFS AOF data generator.
  - All UnixLib Developers for providing a run-time library which is
    essential for GCCSDK and ported programs using GCCSDK.

  Thanks also to all the testers and bug reporters.

  And last but not least, all the GCC contributers.

GCCSDK Developers, 2006
