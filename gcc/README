The RISC OS Software Development Kit
====================================

This rather large package is a collection of software that I use regularly
when writing software.  Originally written as many seperate build trees,
I decided to take advantage of recursive makefiles and package everything
together into one large tree.  I was also getting a bit disturbed over
the increasing length of time it takes to build GCC on RISC OS and since
I mainy use Linux-based PCs at home and work, I decided to port the whole
lot to that platform.

What you have here is a complete cross-compiler toolset for targetting
ARM/RISC OS that is easily portable to other Unix-like operating systems.


Installation
------------

Make sure you've got about 100Mb spare disk space.

$ ./configure --prefix=/home/riscos/cross

Create installation directory structure
$ make setup

Build it.  This will take about 1 hour 30 mins on a Pentium II-266MHz.
$ make



Using it
--------

For Unix users.  You need to add the bin directory to your PATH and this
will depend on the path you gave to `prefix' on the configure command line.


RISC OS filename compatibility issues for the cross-compiler
------------------------------------------------------------

Since the cross-compiler is built to execute on a Unix-like file system,
it expects file naming conventions particular to that operating system.
However, since there is going to be a lot of source code out there that
makes use of some RISC OS pathname features, the pre-processor has been
fixed to cope with path variable names in file names.

When the pre-processor attempts to read an include statement like:
  #include <DeskLib:Wimp.h>
it will try to resolve the DeskLib reference against the environment variable
DESKLIB_PATH.  So you could install the DeskLib header files in a place
such as /home/riscos/libs/include/desklib.  To get GCC to search in that
directory for those headers, simply define the variable:
  $ export DESKLIB_PATH=/home/riscos/lib/include/desklib
