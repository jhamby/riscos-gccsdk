The RISC OS Software Development Kit
====================================

This rather large package is a collection of software that I use regularly
when writing software.  Originally written as many seperate build trees,
I decided to take advantage of recursive makefiles and package everything
together into one large tree.  I was also getting a bit disturbed over
the increasing length of time it takes to build GCC on RISC OS and since
I mainy use Linux-based PCs at home and work, I decided to port the whole
lot to that platform.

What you have here is a complete cross-compiler toolset for targetting
ARM/RISC OS that is easily portable to other Unix-like operating systems.


Installation
------------

1. Make sure you've got about 100Mb spare disk space.

2. Edit gccsdk/config/local.mk
     This is a configuration file used by the rest of the Makefile structure.
     It includes essential information that is operating system dependent.

3. Create the installation and object directory structures
     $ make -I ~/gccsdk/config setup

4. Build the software.  This takes about 1 hour 30 minutes on a PII-266MHz.
     $ make -I ~/gccsdk/config


Using it
--------

For Unix users.  You need to add the bin directory to your PATH, so you
probably need to look at config/local.mk to do this.  The `bin' directory
will be in whatever directory `distdir' was set to.


RISC OS filename compatibility issues for the cross-compiler
------------------------------------------------------------

Since the cross-compiler is built to execute on a Unix-like file system,
it expects file naming conventions particular to that operating system.
However, since there is going to be a lot of source code out there that
makes use of some RISC OS pathname features, the pre-processor has been
fixed to cope with path variable names in file names.

When the pre-processor attempts to read an include statement like:
  #include <DeskLib:Wimp.h>
it will try to resolve the DeskLib reference against the environment variable
DESKLIB_PATH.  So you could install the DeskLib header files in a place
such as /home/riscos/libs/include/desklib.  To get GCC to search in that
directory for those headers, simply define the variable:
  $ export DESKLIB_PATH=/home/riscos/lib/include/desklib
