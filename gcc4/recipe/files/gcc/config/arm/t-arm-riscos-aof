LIB2FUNCS_EXTRA = $(srcdir)/config/arm/riscos.c

# We want fine grained libraries, so use the new code to build the
# floating point emulation libraries.
FPBIT = fp-bit.c
DPBIT = dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#ifdef __SOFTFP__' > fp-bit.c
	echo '#define FLOAT' >> fp-bit.c
	echo '#ifndef __ARMEB__' >> fp-bit.c
	echo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c
	echo '#endif' >> fp-bit.c
	cat $(srcdir)/config/fp-bit.c >> fp-bit.c
	echo '#endif' >> fp-bit.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#ifdef __SOFTFP__' > dp-bit.c
	echo '#ifndef __ARMEB__' >> dp-bit.c
	echo '#define FLOAT_BIT_ORDER_MISMATCH' >> dp-bit.c
	echo '#define FLOAT_WORD_ORDER_MISMATCH' >> dp-bit.c
	echo '#endif' >> dp-bit.c
	cat $(srcdir)/config/fp-bit.c >> dp-bit.c
	echo '#endif' >> dp-bit.c

MULTILIB_OPTIONS = mhard-float/msoft-float
MULTILIB_DIRNAMES = hard-float soft-float

# EXTRA_MULTILIB_PARTS = crti-riscos.o crtn-riscos.o

# Prevents fixincludes from clobbering our otherwise correct limits.h
# and therefore allows GCC to build successfully.
LIMITS_H_TEST = true

# If EXTRA_MULTILIB_PARTS is not defined above then define EXTRA_PARTS here
# EXTRA_PARTS = crtbegin.o crtend.o crti.o crtn.o

LIBGCC = stmp-multilib
INSTALL_LIBGCC = install-multilib

TARGET_LIBGCC2_CFLAGS = -Dinhibit_libc -mpoke-function-name
