if [ -z "$GCCSDK_ROOT" ] || [ ! -d $GCCSDK_ROOT ] ; then
  echo \$GCCSDK_ROOT is wrongly defined \(being \'$GCCSDK_ROOT\'\)
  return 1
fi

# $GCCSDK_SRCDIR is the directory where we will placed the copied & patched
# gcc/binutils sources ready to start compiling.
export GCCSDK_SRCDIR=$GCCSDK_ROOT/srcdir

# Where to install the cross-compiler.  If GCCSDK_INSTALL_CROSSBIN is defined
# we use it.
if [ ! -z "$GCCSDK_INSTALL_CROSSBIN" ] ; then
  PREFIX=$GCCSDK_INSTALL_CROSSBIN/..
else
  PREFIX=$GCCSDK_ROOT/cross
fi

# Where to find AOF based unixlib:
export GCCSDK_AOFUNIXLIB=$GCCSDK_ROOT/../gcc/unixlib
if [ ! -d $GCCSDK_AOFUNIXLIB ] ; then
  echo \$GCCSDK_AOFUNIXLIB is wrongly defined \(being \'$GCCSDK_AOFUNIXLIB\'\)
  return 1
fi

# GCCSDK_GCCORIG : directory containing the original & unchanged gcc sources
# Either contents of a gcc tarball (without subdir), either a svn checkout
# e.g.:
#   svn co svn://gcc.gnu.org/svn/gcc/branches/gcc-4_1-branch $GCCSDK_GCCORIG
GCCSDK_GCCORIG=$GCCSDK_ROOT/orig.gcc
# GCCSDK_BINUTILSORIG : directory containing the original & unchanged binutils
# Either contents of a binutils tarball (without subdir), either a cvs checkout
# e.g.:
#   cvs -z 9 -d :pserver:anoncvs@sourceware.org:/cvs/src login
#     {enter "anoncvs" as the password}
#   cvs -z 9 -d :pserver:anoncvs@sourceware.org:/cvs/src co -d $GCCSDK_BINUTILSORIG binutils
GCCSDK_BINUTILSORIG=$GCCSDK_ROOT/orig.binutils

# GCCSDK_RECIPE_PATCHES : patches of gcc/binutils
GCCSDK_RECIPE_PATCHES=$GCCSDK_ROOT/recipe/patches
# GCCSDK_RECIPE_FILES : full copies of files which need to be copied in the
# resulting $GCCSDK_SRCDIR source tree.
GCCSDK_RECIPE_FILES=$GCCSDK_ROOT/recipe/files
# GCCSDK_RECIPE_SCRIPTS : scripts to be run
GCCSDK_RECIPE_SCRIPTS=$GCCSDK_ROOT/recipe/scripts
