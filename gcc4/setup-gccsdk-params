if [ -z "$GCCSDK_ROOT" ] || [ ! -d $GCCSDK_ROOT ] ; then
  echo \$GCCSDK_ROOT is wrongly defined \(being \'$GCCSDK_ROOT\'\)
  return 1
fi

# $GCCSDK_SRCDIR is the directory where we will placed the copied & patched
# gcc/binutils sources ready to start compiling.
export GCCSDK_SRCDIR=$GCCSDK_ROOT/srcdir

# Where to install the cross-compiler and native RISC OS compiler.
# For determining the install directory of the cross-compiler, if
# GCCSDK_INSTALL_CROSSBIN is defined we use its value.
if [ ! -z "$GCCSDK_INSTALL_CROSSBIN" ] ; then
  GCCSDK_CROSS_PREFIX=$GCCSDK_INSTALL_CROSSBIN/..
  # Shorten path:
  test ! -d $GCCSDK_CROSS_PREFIX && mkdir -p $GCCSDK_CROSS_PREFIX
  pushd $GCCSDK_CROSS_PREFIX > /dev/null
  GCCSDK_CROSS_PREFIX=`pwd`
  popd > /dev/null
else
  echo Warning: \$GCCSDK_INSTALL_CROSSBIN is not defined, using \$GCCSDK_ROOT/cross/bin instead.
  GCCSDK_CROSS_PREFIX=$GCCSDK_ROOT/cross
fi
# The install directory of the native RISC OS compiler is a
# subdirectory of our release directory.
GCCSDK_RELEASE_AREA=$GCCSDK_ROOT/release-area
GCCSDK_RISCOS_PREFIX=$GCCSDK_RELEASE_AREA/\!GCC

# Where are we building (not in $GCCSDK_SRCDIR !):
GCCSDK_CROSS_BUILDDIR=$GCCSDK_ROOT/builddir-cross
GCCSDK_RISCOS_BUILDDIR=$GCCSDK_ROOT/builddir-riscos

# Currently supported versions of gcc and binutils:
GCCSDK_SUPPORTED_GCC_RELEASE=4.1.1
GCCSDK_SUPPORTED_BINUTILS_RELEASE=2.17

# This is the name of the target we're interested in:
GCCSDK_TARGET_NAME=arm-unknown-riscos

# GCCSDK_GCCORIG : directory containing the original & unchanged gcc sources
GCCSDK_GCCORIG=$GCCSDK_ROOT/orig.gcc
# GCCSDK_BINUTILSORIG : directory containing the original & unchanged binutils
GCCSDK_BINUTILSORIG=$GCCSDK_ROOT/orig.binutils

# GCCSDK_RISCOS : directory containing RISC OS related sources (cmunge, soloader, etc)
GCCSDK_RISCOS=$GCCSDK_ROOT/riscos

# GCCSDK_RECIPE_PATCHES : patches of gcc/binutils
GCCSDK_RECIPE_PATCHES=$GCCSDK_ROOT/recipe/patches
# GCCSDK_RECIPE_FILES : full copies of files which need to be copied in the
# resulting $GCCSDK_SRCDIR source tree.
GCCSDK_RECIPE_FILES=$GCCSDK_ROOT/recipe/files
# GCCSDK_RECIPE_SCRIPTS : scripts to be run
GCCSDK_RECIPE_SCRIPTS=$GCCSDK_ROOT/recipe/scripts
