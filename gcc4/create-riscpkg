#!/bin/bash -e
# Written by Alan Buckley <alan_baa@hotmail.com>
# Copyright (c) 2008,2009 GCCSDK Developers
#
# Creates the RISC OS GCCSDK packages
#
# Syntax:
#   create-riscpkg
#     Creates the GCCSDK RISC OS Packaging project packages in $GCCSDK_RELEASE_AREA/riscpkg
#
# Packages created

pushd `dirname $0` > /dev/null
GCCSDK_ROOT=`pwd`
popd > /dev/null
source $GCCSDK_ROOT/setup-gccsdk-params

# Packages version
RPKG_VERSION=1

# Non GCCSDK named packages
RPKG_SHAREDLIBS_NAME=SharedLibs
RPKG_UNIXLIB_NAME=SharedUnixLibrary
RPKG_DRENDERER_NAME=DRenderer

# Set versions
. ./riscpkg-versions

# Build files for packages
GCCSDK_UNPACKED=$GCCSDK_RELEASE_AREA/kits
GCCSDK_RISCPKG=$GCCSDK_RELEASE_AREA/riscpkg

# Location in kits folder
BKIT_GCC_NAME=gccsdk-gcc-bin-$GCCSDK_FULL_RELEASE_NAME
BKIT_SHAREDLIBS_NAME=gccsdk-sharedlibs
BKIT_SYSTEM_NAME=system

RPKG_GCCCORE_NAME=GCC4
RPKG_GCCGPP_NAME=GCC4-C++
RPKG_SHAREDLIBSC_NAME=SharedLibs-C2
RPKG_SHAREDLIBSGPP_NAME=SharedLibs-C++2

GCCSDK_MAINTAINER="GCCSDK mailing list <gcc@gccsdk.riscos.info>"

ZIP=$GCCSDK_INSTALL_ENV/bin/zip
if ! [ -f "$ZIP" ] ; then
  echo Unable to create RISC OS Packages because of missing zip executable 1>&2
  exit 1
fi

if ! [ -e $GCCSDK_UNPACKED ] ; then
  echo Please run `dirname $0`/create-gcckit first 1>&2
  exit 1
fi

# Standard header for copyright

copyright_header() {
  echo "" >> RiscPkg/Copyright
  echo "Upstream sources were downloaded and built by" >> RiscPkg/Copyright
  echo "the GCCSDK Developers." >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "The contact details of the maintainer(s) of this package are:" >> RiscPkg/Copyright
  echo "$GCCSDK_MAINTAINER" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "For information on GCC for RISC OS see the URL:" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "http://gccsdk.riscos.info/" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "Copyright notices for the component(s) of this package follow." >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
}

lgpl_copyright() {
  echo "" >> RiscPkg/Copyright
  echo "Distribution and use are subject to the GNU Lesser General Public License," >> RiscPkg/Copyright
  echo "a copy of which may be found in the file:" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "<Common_Licences$Dir>.LGPL-2/1" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "or downloaded from the URL:" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "http://www.riscpkg.org/licences/LGPL-2.1.txt" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
}

gpl_copyright() {
  echo "" >> RiscPkg/Copyright
  echo "Distribution and use are subject to the GNU General Public License," >> RiscPkg/Copyright
  echo "a copy of which may be found in the file:" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "<Common_Licences$Dir>.GPL-2" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "or downloaded from the URL:" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
  echo "http://www.riscpkg.org/licences/GPL-2.txt" >> RiscPkg/Copyright
  echo "" >> RiscPkg/Copyright
}

# Scan boot file for system variables
scan_boot_file() {
  boot_file=$1
  appdir=$2
  appname=$3
  mkdir -p SysVars
  pdir="Packages\\\$@$appdir.!$appname"
  vars=`grep "Set " $boot_file | sed "s/^.*Set // ; s/<Obey\\\$Dir>/<$pdir>/g"`
  echo "$vars" |
  while read line
  do
    var=`echo "$line" | cut -d ' ' -f 1 | sed -e 's/\\\$/=24/' -e 's/@/=40/'`
    val=`echo "$line" | cut -d ' ' -f 2- | sed -e 's/%%/%/' -e "s/$appname\\\$Dir/$pdir/"`
    echo "$val" > "SysVars/$var"
  done
}

# Convert static ELF binaries to AIF binaries.
# Set file types of all files not already set to be html or text
# as current version of RiscPkg needs this
set_file_types() {
  local elf=$(find . -name \*,e1f)

  for exe in $elf; do
    if file $exe | grep -q statically ; then
      $GCCSDK_INSTALL_CROSSBIN/elf2aif $exe $(sed s#,e1f#,ff8# <<< $exe)
      rm -f $exe
    fi
  done

  find . -iname \*.html -type f -execdir mv {} {},faf \;
  find . ! -iname \*,??? -type f -execdir mv {} {},fff \;
}

# Dump current packages
rm -rf $GCCSDK_RISCPKG

# Recreate dir
mkdir $GCCSDK_RISCPKG

cd $GCCSDK_RISCPKG

# GCC core
##########

mkdir temp
cd temp
mkdir -p Apps/Development
cp -r $GCCSDK_UNPACKED/$BKIT_GCC_NAME/\!GCC Apps/Development

# Add Examples
cp -r $GCCSDK_UNPACKED/$BKIT_GCC_NAME/Examples Apps/Development/\!GCC

# Remove C++ compiler and support
rm -f Apps/Development/\!GCC/lib/libstdc++.a
rm -f Apps/Development/\!GCC/lib/libsupc++.a
rm -rf Apps/Development/\!GCC/bin/g++,e1f
rm -rf Apps/Development/\!GCC/include/c++


mkdir RiscPkg

# Create control file
echo "Package: $RPKG_GCCCORE_NAME" > RiscPkg/Control
echo "Version: $GCCSDK_FULL_RELEASE_NAME-$RPKG_VERSION" >> RiscPkg/Control
echo "Priority: Optional" >> RiscPkg/Control
echo "Section: Development" >> RiscPkg/Control
echo "Maintainer: $GCCSDK_MAINTAINER" >> RiscPkg/Control
echo "Standards-Version: 0.4.0" >> RiscPkg/Control
echo "Licence: Free" >> RiscPkg/Control
echo "Depends: $RPKG_SHAREDLIBSC_NAME (>= $RPKG_SHAREDLIBSC_VERSION), $RPKG_SHAREDLIBSGPP_NAME (>=$RPKG_SHAREDLIBSGPP_VERSION)" >> RiscPkg/Control
echo "Conflicts: GCC-Common" >> RiscPkg/Control
echo "Components: Apps.Development.!GCC (Movable LookAt)" >> RiscPkg/Control
echo "Description: RISC OS port of the GNU Compiler Connection including the C Compiler and core tools" >> RiscPkg/Control

# Create copyright
echo "GCC4 Core components" > RiscPkg/Copyright
copyright_header

echo "GCC, binutils, ln end elf2aif copyright" >> RiscPkg/Copyright
echo "---------------------------------------" >> RiscPkg/Copyright
gpl_copyright

echo "cmunge copyright" >> RiscPkg/Copyright
echo "----------------" >> RiscPkg/Copyright
cat  $GCCSDK_UNPACKED/$BKIT_GCC_NAME/\!GCC/docs/cmunge/Copyright >> RiscPkg/Copyright
echo "" >> RiscPkg/Copyright

echo "mkresfs copyright" >> RiscPkg/Copyright
echo "-----------------" >> RiscPkg/Copyright
cat  $GCCSDK_UNPACKED/$BKIT_GCC_NAME/\!GCC/docs/mkresfs/COPYING >> RiscPkg/Copyright
echo "" >> RiscPkg/Copyright

echo "UnixLib / SCL stubs copyright" >> RiscPkg/Copyright
echo "-----------------------------" >> RiscPkg/Copyright
cat  $GCCSDK_UNPACKED/$BKIT_GCC_NAME/\!GCC/docs/libunixlib/COPYING >> RiscPkg/Copyright

set_file_types

# Zip it all up
$ZIP -, -9rq ../$RPKG_GCCCORE_NAME\_$GCCSDK_FULL_RELEASE_NAME-$RPKG_VERSION.zip *

cd ..
rm -rf temp


# C++ Compiler
##############

mkdir temp
cd temp
mkdir -p Apps/Development/\!GCC
mkdir -p Apps/Development/\!GCC/lib
mkdir -p Apps/Development/\!GCC/bin
mkdir -p Apps/Development/\!GCC/include

cp -f $GCCSDK_UNPACKED/$BKIT_GCC_NAME/\!GCC/lib/libstdc++.a Apps/Development/\!GCC/lib/libstdc++.a
cp -f $GCCSDK_UNPACKED/$BKIT_GCC_NAME/\!GCC/lib/libsupc++.a Apps/Development/\!GCC/lib/libsupc++.a
cp -f $GCCSDK_UNPACKED/$BKIT_GCC_NAME/\!GCC/bin/g++,e1f Apps/Development/\!GCC/bin/g++,e1f
cp -rf $GCCSDK_UNPACKED/$BKIT_GCC_NAME/\!GCC/include/c++ Apps/Development/\!GCC/include

mkdir RiscPkg

# Create Control file
echo "Package: $RPKG_GCCGPP_NAME" > RiscPkg/Control
echo "Version: $GCCSDK_FULL_RELEASE_NAME-$RPKG_VERSION" >> RiscPkg/Control
echo "Priority: Optional" >> RiscPkg/Control
echo "Section: Development" >> RiscPkg/Control
echo "Maintainer: $GCCSDK_MAINTAINER" >> RiscPkg/Control
echo "Standards-Version: 0.4.0" >> RiscPkg/Control
echo "Licence: Free" >> RiscPkg/Control
echo "Depends: $RPKG_GCCCORE_NAME (>=$GCCSDK_FULL_RELEASE_NAME)" >> RiscPkg/Control
echo "Description: RISC OS port of the GNU C++ Compiler" >> RiscPkg/Control

# Create copyright
echo "GCC4 C++ Compiler" > RiscPkg/Copyright
copyright_header

echo "GCC4 C++ Compiler copyright" >> RiscPkg/Copyright
echo "===========================" >> RiscPkg/Copyright
gpl_copyright

set_file_types

$ZIP -, -9rq ../$RPKG_GCCGPP_NAME\_$GCCSDK_FULL_RELEASE_NAME-$RPKG_VERSION.zip *

cd ..
rm -rf temp

# SharedLibs
############

mkdir temp
cd temp
mkdir -p Resources
cp -r $GCCSDK_UNPACKED/$BKIT_SHAREDLIBS_NAME/\!SharedLibs Resources

# Remove C/C++ Libraries
rm -rf Resources/\!SharedLibs/lib/abi-2.0

mkdir RiscPkg

# Create control record

echo "Package: $RPKG_SHAREDLIBS_NAME" > RiscPkg/Control
echo "Version: $RPKG_SHAREDLIBS_VERSION" >> RiscPkg/Control
echo "Priority: Optional" >> RiscPkg/Control
echo "Section: Library" >> RiscPkg/Control
echo "Maintainer: $GCCSDK_MAINTAINER" >> RiscPkg/Control
echo "Standards-Version: 0.1.0" >> RiscPkg/Control
echo "Licence: Free" >> RiscPkg/Control
echo "Depends: $RPKG_UNIXLIB_NAME (>= $RPKG_UNIXLIB_VERSION)" >> RiscPkg/Control
echo "Description: The Shared libraries directory and ELF loader" >> RiscPkg/Control

# Create copyright record

echo "SharedLibs" > RiscPkg/Copyright
copyright_header

echo "SharedLibs copyright" >> RiscPkg/Copyright
echo "====================" >> RiscPkg/Copyright
cat $GCCSDK_UNPACKED/$BKIT_SHAREDLIBS_NAME/\!SharedLibs/docs/COPYRIGHT >> RiscPkg/Copyright


# Currently (May 2014) the packaging system has no way to boot after first install
# so we still have to rely on the boot vars for this.
scan_boot_file Resources/\!SharedLibs/\!Boot,feb Resources SharedLibs

set_file_types

$ZIP -, -9rq ../$RPKG_SHAREDLIBS_NAME\_$RPKG_SHAREDLIBS_VERSION.zip *

cd ..
rm -rf temp

# SharedLibs C
##############

mkdir temp
cd temp
mkdir -p Resources/\!SharedLibs/lib
cp -rf $GCCSDK_UNPACKED/$BKIT_SHAREDLIBS_NAME/\!SharedLibs/lib/abi-2.0 Resources/\!SharedLibs/lib

# Remove C++ Libraries
rm Resources/\!SharedLibs/lib/abi-2.0/libstdc++*

mkdir RiscPkg

# Create control record

echo "Package: $RPKG_SHAREDLIBSC_NAME" > RiscPkg/Control
echo "Version: $RPKG_SHAREDLIBSC_VERSION" >> RiscPkg/Control
echo "Priority: Optional" >> RiscPkg/Control
echo "Section: Library" >> RiscPkg/Control
echo "Maintainer: $GCCSDK_MAINTAINER" >> RiscPkg/Control
echo "Standards-Version: 0.4.0" >> RiscPkg/Control
echo "Licence: Free" >> RiscPkg/Control
echo "Description: The C Shared libraries" >> RiscPkg/Control
echo "Depends: $RPKG_SHAREDLIBS_NAME (>=$RPKG_SHAREDLIBS_VERSION)" >> RiscPkg/Control

# Create copyright record

echo "C SharedLibs" > RiscPkg/Copyright
copyright_header

echo "C SharedLibs copyright" >> RiscPkg/Copyright
echo "======================" >> RiscPkg/Copyright
cat $GCCSDK_UNPACKED/$BKIT_SHAREDLIBS_NAME/\!SharedLibs/docs/COPYRIGHT >> RiscPkg/Copyright

set_file_types

$ZIP -, -9rq ../$RPKG_SHAREDLIBSC_NAME\_$RPKG_SHAREDLIBSC_VERSION.zip *

cd ..
rm -rf temp


# SharedLibs C++
################

mkdir temp
cd temp
mkdir -p Resources/\!SharedLibs/lib/abi-2.0
cp -r $GCCSDK_UNPACKED/$BKIT_SHAREDLIBS_NAME/\!SharedLibs/lib/abi-2.0/libstdc++* Resources/\!SharedLibs/lib/abi-2.0

mkdir RiscPkg

echo "Package: $RPKG_SHAREDLIBSGPP_NAME" > RiscPkg/Control
echo "Version: $RPKG_SHAREDLIBSGPP_VERSION" >> RiscPkg/Control
echo "Priority: Optional" >> RiscPkg/Control
echo "Section: Library" >> RiscPkg/Control
echo "Maintainer: $GCCSDK_MAINTAINER" >> RiscPkg/Control
echo "Standards-Version: 0.4.0" >> RiscPkg/Control
echo "Licence: Free" >> RiscPkg/Control
echo "Description: The GNU C++ shared libraries" >> RiscPkg/Control
echo "Depends: $RPKG_SHAREDLIBSC_NAME (>=$RPKG_SHAREDLIBSC_VERSION)" >> RiscPkg/Control

# Create copyright
echo "GNU C++ shared libraries" > RiscPkg/Copyright
copyright_header
echo "GNU C++ shared libraries copyright" >> RiscPkg/Copyright
echo "==================================" >> RiscPkg/Copyright
gpl_copyright

set_file_types

$ZIP -, -9rq ../$RPKG_SHAREDLIBSGPP_NAME\_$RPKG_SHAREDLIBSGPP_VERSION.zip *

cd ..
rm -rf temp

# SharedUnixLibrary
###################

mkdir temp
cd temp

unixlibdir=System/310/Modules
mkdir -p $unixlibdir
cp $GCCSDK_UNPACKED/$BKIT_SYSTEM_NAME/\!System/310/Modules/SharedULib,ffa $unixlibdir

mkdir RiscPkg

echo "Package: SharedUnixLibrary" > RiscPkg/Control
echo "Priority: Required" >> RiscPkg/Control
echo "Section: Library" >> RiscPkg/Control
echo "Maintainer: $GCCSDK_MAINTAINER" >> RiscPkg/Control
echo "Standards-Version: 0.1.0" >> RiscPkg/Control
echo "Version: $RPKG_UNIXLIB_VERSION" >> RiscPkg/Control
echo "Licence: Free" >> RiscPkg/Control
echo "Description: A C runtime support module for UnixLib." >> RiscPkg/Control
echo " This package provides the SharedULib module, which provides essential" >> RiscPkg/Control
echo " services to UnixLib that are not possible in a user space application." >> RiscPkg/Control
echo " ." >> RiscPkg/Control

# Create copyright
echo "UnixLib" > RiscPkg/Copyright
copyright_header

# UnixLib has its own copyright file
cat  $GCCSDK_UNPACKED/$BKIT_GCC_NAME/\!GCC/docs/libunixlib/COPYING >> RiscPkg/Copyright

set_file_types

$ZIP -, -9rq ../$RPKG_UNIXLIB_NAME\_$RPKG_UNIXLIB_VERSION.zip *

cd ..
rm -rf temp


# Digital Renderer module
#########################

mkdir temp
cd temp

drenddir=System/310/Modules
mkdir -p $drenddir

cp $GCCSDK_UNPACKED/$BKIT_SYSTEM_NAME/\!System/310/Modules/DRenderer,ffa $drenddir

mkdir RiscPkg

echo "Package: $RPKG_DRENDERER_NAME" > RiscPkg/Control
echo "Priority: Optional" >> RiscPkg/Control
echo "Section: Library" >> RiscPkg/Control
echo "Maintainer: Alan Buckley <alan_baa@hotmail.com>" >> RiscPkg/Control
echo "Standards-Version: 0.1.0" >> RiscPkg/Control
echo "Version: $RPG_DRENDERER_VERSION" >> RiscPkg/Control
echo "Licence: Free" >> RiscPkg/Control
echo "Description: Audio playback module" >> RiscPkg/Control
echo " This module provide a polling, call-back or streaming interface between" >> RiscPkg/Control
echo " applications and the sound system." >> RiscPkg/Control


echo "DRenderer Module" > RiscPkg/Copyright
copyright_header
echo "DRenderer source" >> RiscPkg/Copyright
gpl_copyright
echo "DRenderer development headers" >> RiscPkg/Copyright
lgpl_copyright

set_file_types

$ZIP -, -9rq ../$RPKG_DRENDERER_NAME\_$RPKG_DRENDERER_VERSION.zip *

cd ..
rm -rf temp

echo "Package creation complete.  Contents of $GCCSDK_RISCPKG:"
ls -l $GCCSDK_RISCPKG
